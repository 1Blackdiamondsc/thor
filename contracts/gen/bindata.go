// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x31\x6f\xc2\x40\x0c\x85\xff\x8b\xe7\x4c\xb4\x53\xb6\x4a\x5d\x2b\x75\x47\x28\x32\x9c\x69\x2d\x05\xdf\xe9\xec\xa3\x4d\x11\xff\xbd\x0a\x0a\x5c\x42\xa1\x14\xda\x2a\x63\xa4\x67\xfb\xf9\x73\xde\x4d\x37\xb0\xf0\xa2\x86\x62\x50\x5a\x4c\x54\x00\x4b\x48\xa6\x50\x4e\x37\x20\xb8\x22\x28\xa1\x42\xe7\x22\x14\x60\x4d\x68\x3f\xdb\x2f\x52\x85\xed\xac\xd8\x2b\x42\xf4\xc1\x2b\xb5\x22\x9f\xec\xb8\x5e\x0d\x2d\x69\x6e\x90\x58\xec\x6e\x02\xdb\xe2\xa0\x60\x47\x62\x6c\x4d\xd6\xa8\x45\x96\x97\xdd\x8c\x80\x0d\xce\x6b\x82\x72\x89\xb5\x52\xb1\x6b\x47\x4f\xc9\x70\xce\x75\x5b\x53\xc2\x9a\xe9\x2d\x97\x2e\x93\x2c\x8c\xbd\xec\x06\xe4\xed\xba\xea\x5b\xd6\x73\x84\xc9\x5e\x7d\xe4\x0f\x1a\x6c\xf8\x23\x73\xe2\x65\x2f\xba\xdd\x22\xc9\xc2\x3b\x72\xcf\x1d\xe7\x1e\xcc\x79\x63\xa4\x93\xfb\xe9\xac\x6f\xb8\x4a\xc1\xa1\x8d\x65\xf6\x0c\xcf\x7c\xee\xea\xdb\x7b\x77\xa2\x71\x90\xf7\x18\xb2\xb0\x31\xd6\xff\xed\xe0\x28\x75\x5f\x43\xa5\xa7\x53\x75\xee\x17\x18\x2b\x2e\x57\x9e\xb7\x0a\x91\x94\x6c\x1c\xb4\x6b\x6f\xad\x9d\x0b\x5c\xfb\x2f\xc1\xaf\xa8\xa2\x78\x69\x56\x3e\xe9\x29\xac\x2c\x8e\xde\xc9\xed\xdd\x5e\xa6\x7c\x28\xe8\x7a\x5d\x43\xfd\xa1\x17\xaa\x4e\x44\x6b\x12\xfb\x6b\x9b\x79\xe2\xe3\xe0\xed\x1c\xce\x9c\x7d\x06\x00\x00\xff\xff\xa0\x79\x14\x6d\x7f\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x0d\x96\x23\xab\x0a\xde\x12\xa0\x28\x2c\xc7\xb2\xac\xfd\x2f\xe1\x1d\x40\x93\xaa\x4a\xd2\x93\x99\x79\xf7\x9e\x9b\x3e\x3d\x9d\x18\x45\x7e\x3e\x3e\xa0\xa6\x80\xfd\x64\x60\x2a\x00\x39\x15\x84\x82\x00\xb2\x73\x2d\xe9\x98\xaf\xda\x01\xe1\x0f\x5f\x05\x00\x12\x43\xc6\x52\x12\x70\x3e\xa4\x6f\x87\x20\x66\xbb\x45\x89\xab\x40\x49\x54\xbb\xd6\xa3\xb1\xaf\x62\xe2\xb9\x7a\x8c\x91\x74\x97\x58\xe5\x12\xab\x3c\xa0\xcb\x2e\x73\xb5\xcd\xbd\x02\x6d\xe4\xb1\x75\x5f\x25\xc8\xb1\xda\xdb\x76\x08\x68\xec\x25\xac\xb1\x7a\xb4\x92\xa8\xb4\x3d\x56\xeb\x3e\x57\xfb\xc0\xde\x7b\x8b\xd5\xbd\x73\xe5\xcd\x74\x17\x38\x76\xde\x52\x46\x76\x8d\xcd\x2f\x8f\x55\x5b\xd9\xb0\x00\x60\x81\x66\x96\x12\x34\x48\xee\x47\xc6\x52\x10\x12\x6c\x5c\x4c\x4e\x06\xc6\xa7\x3f\x25\x61\x11\x34\x8f\x67\x28\x40\x20\x04\x28\x68\x2b\x1a\xef\x93\x7f\xc2\xd8\x43\x00\xa8\xc8\x20\xc0\xa8\x30\x3f\x83\x80\x24\xb1\xbb\x80\x37\xdb\xef\x2e\x42\x80\x43\xcd\x1e\x93\xc2\x26\xc7\xfe\x4e\x19\xf6\xed\x30\x3f\x6e\x0c\xf1\xa3\xfe\x2b\x08\x2e\x17\x0f\x2c\x12\x52\x90\xca\x94\x92\xec\x56\xb3\xd0\xee\x22\x00\x03\x88\x61\xa1\x41\x42\x5d\x56\x2c\x0d\x4d\xb2\xa6\x25\x3d\xac\x16\x50\x84\xa4\x70\xa4\x87\x17\x31\xc3\xcd\x8b\xc8\xf9\x27\x2f\x0e\x35\xad\xcd\xd2\x25\xa1\xe0\x5b\x09\xb9\x00\x65\xc1\xc4\xe6\x3f\xf7\x52\x32\x3c\x49\x78\xd9\xd6\xc8\x6e\xc9\xee\x49\xdb\x11\xc8\x17\xd0\xa4\xa4\xbe\xf6\xb4\x28\xfc\x4b\x00\x64\x9e\x90\x9c\x2a\x83\x66\x2d\x6c\x19\x92\x59\x95\x97\xa5\xfe\x53\x9e\xda\x6d\xef\xed\xcb\x02\x89\xef\x76\x62\x31\xdf\xe7\xd0\x1c\x12\xaf\x78\x9c\x35\xb7\xd8\x04\x46\xd4\xa4\x7c\xb2\x22\x10\xe4\x76\xb8\xbd\x39\x6c\x78\xa3\x3d\xe7\xf6\x51\x7b\x82\xe3\x8d\xf6\x08\x25\x95\xf3\x2e\xa2\xdb\x2e\xa2\x66\xbb\x64\x3f\x21\xde\xb4\x00\x21\xd3\x2d\x34\xfd\x06\xd9\x0f\x9f\xbf\xc3\x37\x95\x9f\xf0\x4d\xfc\x82\x6f\x40\xa5\x5f\xe0\x91\x44\xfe\xe3\xf1\xaa\x32\x3e\xc7\x6b\xd4\x7b\x24\xc6\x61\x67\xf6\x4b\x24\xae\x56\x28\x28\x9e\xb3\xf7\xd5\x37\x26\xd1\x72\xcf\xef\xd8\x80\x43\x56\xac\x91\x38\x23\xf0\x93\xd1\xec\xbe\xd1\xd1\x11\x62\x5e\x17\xe7\x7d\x93\x8b\x59\x81\xb3\xc2\xe2\x0d\xf3\xc8\xf3\x9c\xe9\x60\xb2\x00\xc5\x50\xe0\x2c\x10\x2b\x96\xe2\xf3\x0c\x99\xd7\x4d\x73\xf7\xa6\x7b\x17\x26\xb6\x14\x21\xc3\xc5\x86\x5b\x5e\xbf\x66\x35\x7d\x7b\x8f\xaf\xa7\x5d\xbc\x3e\x18\x3b\xba\xed\xcd\x2a\x80\xef\x37\x84\x72\xb6\xfb\x25\x31\x29\x2e\x3c\xcf\x53\x85\x37\xc3\x40\x44\x17\x20\xee\x2f\x7e\x8d\x1a\xa6\x91\x73\x30\x7e\xd8\xbf\xf0\x6f\x52\xd1\x65\x6c\x1b\x57\x31\x5d\xd2\xe4\x66\x97\xf6\x44\xf7\xe4\x6f\x8a\x5f\x06\xcb\x24\xc5\x15\x27\xce\x29\xbd\x46\x5d\x10\x8b\x45\xde\xab\x5c\xb6\x3a\x79\x41\x8e\x21\xca\x7d\x74\x89\xac\xa4\x3d\x22\x8b\xec\x3e\xc9\x74\xe1\x37\x8f\xf5\x2d\x47\xea\x51\x75\xec\x23\x49\xd2\xbe\xd7\x56\x77\xd9\xf6\x5a\x87\xd6\xc1\x5d\xd4\xe0\x7b\x8c\x7c\xd4\xd2\xf7\x6d\x1b\xad\xa5\x92\x4b\x2e\x83\xa4\x49\x51\x6e\x55\x24\x2f\xdc\x9e\x71\xd9\x28\x90\x1f\x77\xa7\x37\xf7\xbe\xda\x6c\xb6\x2e\xbd\x6b\xbf\xd8\x0b\x00\x51\xb5\x84\x18\x85\x26\xc3\x70\x66\xdb\x45\xce\x3f\xc1\x55\x1e\xf9\xac\xc2\xf5\x18\x86\xef\x2b\x53\x19\x13\x95\x7a\xdc\x5e\x06\x04\x9d\x5a\x38\xe6\xe5\xb5\x87\xb2\x75\xcf\x16\x12\x3a\xdf\xd4\xf7\x1f\x6e\xfa\x20\xc7\xce\x1d\x79\x56\xea\xb7\x79\xe9\xb8\x7f\x7c\xa3\xa4\xa0\x84\xa5\xe6\xdf\xe8\xed\xa8\x3e\xec\xfc\xf6\x08\x6a\xdc\x63\x79\xa0\x88\x55\x8d\x4a\x20\xf2\x42\x03\xf7\x68\x1c\x79\xe2\xed\xef\x11\xcc\x85\xef\x11\x35\x3f\x7a\xfe\x70\x4d\x37\x74\xb3\x04\xba\xd3\xcd\x43\xda\xe1\x82\x6f\xd6\x2b\xbe\x5f\xd8\xd3\xf1\x3d\x1a\xd2\xce\xa9\xea\xde\xb2\x6e\x5c\x30\xd5\x44\xf5\x18\x29\xb7\x3e\xfa\x10\x6e\x43\xa5\xf5\x71\x74\x19\xfd\xd0\x21\xc7\x91\x0a\x0b\x01\xc1\xbe\x09\x0b\xfd\x4d\x8d\xfc\x50\x1d\xf9\x90\x1f\xaa\x23\x0f\xf8\xaa\xfb\x2b\xc4\x7f\xdc\xfd\xbd\xad\xb5\x8d\x1e\x35\xeb\x77\x73\xd6\xe2\x72\x8d\x62\xe1\x51\x10\xda\x7e\x3c\x99\x80\x73\x4d\xf7\xfc\xfb\xf4\x32\xbd\x5f\x50\x45\xaf\x18\x75\xe9\x08\x45\xcf\xf5\xcf\x3e\xef\x97\x7a\x48\x5e\x4b\x40\x1f\x16\xb3\x7a\x0e\x17\xeb\x01\x19\x58\x2d\x8b\x67\x7c\x67\x16\xaf\x3a\xb4\xaa\x54\x30\x77\x48\x31\x2f\x86\xd4\x47\x4c\xeb\xec\x4e\xbc\x6e\x59\x3d\x98\x2c\x51\x06\x3c\x59\xe2\x5e\x5f\xdc\x32\xbf\xe1\xbb\x2a\x7c\x79\xff\x86\x61\x60\x49\x47\x89\x0c\xc2\xa5\x61\xe8\x68\xf3\x82\xe9\x12\x9c\x6a\xd6\x16\xd7\x43\xd1\x4f\x91\xad\x39\x7f\xbd\xf4\xf9\x1f\xef\x7b\xcf\xa8\xd6\x51\x35\x9b\xe5\x6e\x9c\x59\x4b\x9d\x1a\xbc\x39\x17\xd1\x75\x8d\x48\x92\xd5\xf7\x60\x1e\xfb\xd7\xe7\x5e\x9f\x28\xa0\x74\x89\xfc\xb0\x5b\xfe\x10\xaf\xb5\x8d\x8f\x8c\x54\xb7\x7e\xc3\x72\xed\xe3\x2b\x46\xaa\xbb\x9e\x4f\x5e\x59\xf2\x55\x1b\x59\x5d\xc0\x65\xdd\x98\x33\x50\xb6\xf2\x56\x92\x42\x4c\xa1\x82\x64\xe8\x5a\xf1\x14\xc4\x9b\x15\xe8\xdd\x69\xdc\x06\xa8\xd6\xed\x3e\x90\x28\xc6\x17\xbf\x42\xe2\x93\x21\xfc\x1d\xfc\xad\x86\x65\xf2\x82\xe7\x8e\xf5\x28\x65\x49\xbc\x69\x8a\x67\x4d\x6b\xfb\xb5\xa6\x92\x27\x22\x3c\x32\x70\xc7\xba\x68\xff\x8c\x75\x09\x3e\xa0\x33\xce\xfe\x0f\xfc\x74\x61\x27\x67\x13\xb6\xde\xf3\xf4\x84\xe6\x37\xaa\xb8\xe9\x6c\xf9\x6f\xa5\xe7\x0f\xeb\xb9\xc1\xb9\x0a\x46\x25\x17\x58\x1e\x57\x52\xab\x10\x9a\x49\xad\x77\x2a\x80\x9a\xca\x3c\x23\x74\xe9\xb4\xd1\xc8\xcf\x98\x14\xeb\xcc\x39\xaf\x1b\x26\x6b\x71\x16\x58\x90\x9f\x91\xe0\x97\x48\x68\xc1\x77\x91\xb0\xda\x38\x59\x07\x94\x56\x14\x5e\xf3\x24\x7a\x09\xc9\x4c\x51\x29\x35\x2b\x68\x0e\xb4\x79\xfc\x50\x88\x60\xae\xb2\xa2\x14\xeb\xc1\xad\xd3\x97\x62\xa8\xd4\xc0\x24\x9f\x31\xe7\x0c\xab\x1b\x07\xbe\x22\x4f\xcc\x4a\xed\x61\xa5\x77\x3e\xf9\xf9\x8c\xe4\x34\x55\x69\xef\x92\xc5\x7c\xd2\x46\x8d\xdc\xb7\x55\xcb\xfc\xa8\x0e\x5e\xf5\x62\xae\x48\x6b\x66\xe2\x2c\x73\x7e\x30\x36\xb4\xfd\xe3\xd0\xe8\xa9\xe6\x9d\x8a\x3f\x57\x87\xc7\xf3\xbf\xd3\xe4\xb4\xf2\xef\x96\x9d\x12\xf6\xc7\x29\xf2\x89\xd7\xba\x16\x58\xfe\x70\xd6\x9c\x9d\xcb\xdf\x22\x1e\xaf\x28\xa3\xd5\xd3\xe0\xa5\x87\x9d\xbb\xfe\x95\x1e\xf6\xa4\x4d\x7e\x68\xb3\x66\x37\xef\x93\x10\xda\xe6\xf3\xfc\xa3\x6b\x47\xd8\x56\x4d\x89\xae\xc8\xb3\xa5\xbc\x43\xa3\xa1\xeb\xc6\x7d\xb2\xb8\x4f\xc1\x70\x36\x79\x73\xd3\xb4\xba\x2c\x47\x0f\xd5\x52\x8e\x9a\x7d\xee\x7e\xc3\xa9\x77\xa9\xe1\xb3\x93\x5c\xaf\x5c\xeb\x2c\xbd\x60\x21\xe2\x1d\x93\x6a\xcc\xb4\xdf\xcd\xcf\xef\x19\x76\x4d\xee\xf3\xb9\x08\x2a\x59\x1f\x3c\x67\x6b\xf3\x52\x75\x4c\x5b\xfb\x85\xb0\x49\x5f\x37\xc2\x7a\x4a\xc0\xcc\x42\xb8\xbe\xad\x2f\x77\xe0\xed\x0e\x8b\x93\x49\x40\xc4\xe7\x29\x63\x69\xe3\x50\x5d\xf1\xc3\xd3\x14\x8e\xb0\xd5\x39\x8d\x78\x16\x49\x54\xac\x82\xd0\xa3\xc6\x38\x57\x95\x35\xc1\x4b\x62\x7f\xda\x68\x45\xfe\x39\x3d\x5a\x7e\xb9\x7f\xec\x6f\x7a\xd5\x32\x66\x79\x98\x27\x66\xc6\x76\xfe\xa7\x3d\xdc\xc1\x9f\x9e\x59\x4f\x1f\x79\x27\xc9\x7c\x8b\xf5\x7b\x8f\x87\xee\x6f\x7d\x8a\xcb\xa7\x04\x2f\x3e\xed\xb8\xcd\x0e\xba\x8d\xec\x4c\xb1\x59\x1d\x5b\x12\x74\x3d\x81\x9b\x35\xc5\x3d\xd3\x53\xff\xd5\x19\xaf\xad\x2f\x1d\xdf\x37\x8c\x33\x6f\x72\xdd\xa4\xcf\x5a\x8f\x42\xf6\x59\xf9\xc1\xd6\x14\x9a\xf0\x8c\xfc\x77\x91\x71\x4b\xac\x46\x3f\x9f\x1b\xf5\x6d\x73\x1e\x47\xe8\xbb\x46\xae\x9d\x23\xf5\x2e\x96\xf2\xf0\xdd\xae\x0b\x21\x0b\x81\xa6\x7a\xb3\x16\x91\x6a\xab\xad\x52\x02\x9b\x2c\xb7\x8c\xb8\xe7\xa3\xf7\x0e\x5d\x46\xd5\x71\xa4\x7d\xef\x7b\xce\x64\x5d\x25\xc3\x68\x54\xd2\xc6\x5d\xc6\xb6\x83\xff\xaf\x0b\x90\xec\x55\xb6\xad\x41\x4b\xb9\x9b\xfa\xff\x0b\x00\x00\xff\xff\xd6\xbd\x27\xde\x10\x1a\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xc1\x6e\xdb\x30\x0c\xfd\x17\x9d\x7d\xea\xb0\x61\xc8\xad\x28\xd0\x9d\xb6\x02\x6b\x6e\x45\x50\xd0\x32\x93\x08\x93\x29\x43\xa2\x9c\x1a\x45\xff\x7d\xb0\xa3\xc4\x2e\x62\xd9\xce\x92\xa6\xd9\x29\x01\xf4\x28\xf3\x91\x8f\x8f\x7a\x7a\x15\xd2\x90\x63\x20\x16\x33\xb6\x1e\x13\xa1\xa8\xf0\xec\xc4\xec\x69\x91\x08\x82\x1c\xc5\x6c\xfb\x93\x08\xe3\x39\x1c\xbd\xee\x4e\x44\x22\xb8\x2a\xea\x7f\x8e\xad\xa2\x95\x78\x5b\x24\xa2\x80\x0a\x52\x8d\x62\xb6\x04\xed\x30\x11\x8e\x81\xf1\xa7\x67\x48\x95\x56\x5c\x89\x99\x28\xbc\xc5\x36\x74\xe9\x49\xb2\x32\x24\xde\x92\x6e\x3a\x21\x7a\x9f\xcf\xfe\xa3\xcf\x16\xa5\xc2\x12\x6d\x7b\x05\x64\x99\x45\xe7\x9a\x1b\x76\x28\xc8\x8d\x27\x6e\x31\x5e\x11\xdf\x7c\xfd\xd6\xa4\x18\x30\x50\x14\xd6\x94\x11\x6e\xce\x4b\x59\xdf\xb9\xbf\x20\x35\x46\x4f\x24\x48\x86\x76\xa0\x31\x9a\xd1\xaa\xb3\x61\xd0\x8f\xbe\x28\x74\x35\x56\xfc\x2e\xb5\xf1\xe4\x4a\x85\x9b\x13\xaa\x2f\x0d\xb1\x05\xc9\xb7\x59\x36\xd2\x01\xc2\xcd\xc3\x86\x7a\xfb\xd4\xd2\x74\xc8\xbf\x02\xee\xde\xd8\xbb\x70\xf9\x3b\xc6\xe7\x2e\x79\x9c\xdb\xd2\x9a\x7c\x98\x13\x9b\x93\x55\xc7\x16\xc8\x2d\xd1\xde\x6f\x3f\x76\x85\xd2\xcb\x50\xaa\x1c\xb4\x9b\xa2\xbb\xef\x97\x99\xf9\xe9\xaa\x33\x53\x24\x77\x25\x7a\x93\xa0\xf5\x98\x8f\x35\x18\x3c\x59\x75\x75\x3a\x3e\xe6\xe3\xcf\xe1\x34\x52\xb7\x8f\x54\xdd\x31\xc3\x37\x60\xfc\x2d\xd1\x15\xf2\x6d\x09\x4a\xd7\xc9\xdc\x59\xcc\x14\x4f\xd2\xf1\xc5\xfc\x73\xda\xf6\xd2\x2a\x57\x7d\x0d\xed\x0a\xa3\x21\xf7\xc3\x9a\x0d\xaf\x7f\x03\xe3\x30\x1a\x5f\x0a\x65\xfb\x30\x9d\xb9\x58\x83\xc5\xb9\xf9\xac\x59\x98\x3c\xe1\x67\xdb\xff\x8d\x55\xdc\x5e\xdf\x23\xe0\x18\x33\x4b\x41\x03\x49\x7c\x58\xf6\x13\x08\xc7\x1f\xaa\xf5\xe8\x1e\x71\x55\x9e\x1a\x7d\xf9\xa7\x63\xac\x9c\x9d\x36\x56\x8c\xee\xcb\xcd\x81\xfa\xb3\x41\xc7\x18\x1f\x4a\x38\x74\x9e\x38\x38\x3a\x92\x2d\xe4\xa8\x19\x97\xde\x5a\x24\x9e\xab\x1c\x1f\x19\xf2\xe2\xaa\x0d\x6e\xca\xca\x5a\x83\x5d\xe1\x27\xd9\xd1\x19\x1f\x7a\xff\x97\xb5\x74\x38\xba\x02\x29\x1b\xf1\x1f\xd0\xda\x6c\x82\xc5\xf4\xb0\xb4\x98\x83\xa2\x7a\xbe\xcf\x2f\xc6\x7d\xf0\x96\x63\x8f\x59\x1c\xd4\x08\xb4\x4e\x41\xfe\x69\xc2\x81\x0c\x55\xb9\xf1\xae\x4f\x06\x8a\x32\x7c\xc1\x6c\x77\xf7\xf8\x1b\x25\x12\x10\x93\xd1\x1e\x1e\x3e\xbd\xc3\x97\xa0\xfd\xf0\x96\x9e\xb7\xaa\x0a\x20\x2c\x91\xf8\x9f\x29\x0d\xe8\x20\x12\x11\x97\xc5\x49\xc4\xb6\x8b\x18\xf4\x99\x88\x1d\xdb\xaa\x63\x3b\x35\xb0\x0c\x22\x21\xd3\xcc\x3c\x12\x3c\xe1\xfd\xf6\x58\x6f\xb0\xfb\x77\xb4\x43\x05\x17\x7f\x03\x00\x00\xff\xff\x5b\xc2\x1f\x42\xe9\x11\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x0b\x76\x04\x2b\x0a\xdd\x12\x1f\x51\x58\x8e\xdf\xfd\x2f\x61\x0e\x6a\x75\x57\x57\x75\x92\x4e\xde\xcc\x3b\x93\x9c\x74\x2a\x94\xa2\x20\x5c\x2e\x26\x82\x7f\x07\x10\x8a\x00\x81\x23\x42\x44\x80\x01\x92\x22\x8f\xfd\x95\x2a\x20\xfc\xf1\x2b\x02\x00\x0b\x04\x8c\x91\x21\x8e\xd6\x3a\xb0\x22\x86\xb9\x8a\x48\x52\x88\x0c\x26\x3d\xa7\xc2\x53\x8a\x69\x2c\x29\x2a\x46\x68\xad\x2d\x69\xd9\x63\x89\xd1\x48\xea\xd2\x80\x2d\x1f\xd2\xa2\x89\xf6\x58\x02\x5c\x52\x46\xae\x5d\x62\x5a\x52\xb2\x2d\x8d\x03\x82\xa6\xb5\x1a\x09\x2d\x69\xa8\xd9\xc4\x32\x2c\x69\x4a\x4b\x2a\x31\x18\x08\x8f\x25\x2d\x65\x49\x63\xcc\xb1\x59\x8b\x4b\xda\x61\x4b\x5b\x88\x20\x75\x8d\x65\xd0\x25\x4d\x90\x41\x89\xd7\x7e\x99\xf7\x58\x93\xa6\x56\xc2\x96\x86\x6d\xb1\xd9\x00\x08\x61\x6b\x88\x7b\x67\x99\xc7\xc8\x56\x97\x6d\x9c\xb7\xc5\xd9\x40\xac\x96\xb2\xa4\xb5\x2e\x69\x6b\x91\x7a\xe3\xbe\xa4\xbd\x4b\x92\xe2\x27\xa0\x30\x9a\x14\x0e\x28\xee\x35\xf0\xd3\x7d\x48\xa7\x44\x23\x42\x40\x96\xe8\xe3\x03\x08\x46\x20\x50\x50\x12\x52\x34\x50\x04\x54\x56\x54\x14\xff\x21\x7f\x0b\x68\x28\xa0\x20\x68\xb0\xff\xf6\x19\xac\xec\xba\xa5\xf8\x78\x84\xb5\x62\x08\xbe\x3f\xf5\x93\x71\x3d\xfe\x7b\xeb\xf0\xb7\x54\x7d\x5d\x81\xf5\x6d\xf3\xc7\x57\x74\xbd\x38\x30\xea\xd6\x92\x70\x6b\x61\x9d\x3b\xf4\x3d\x4d\x2d\xbc\xac\x82\x0c\x8c\x86\xf1\x75\x87\xae\xd9\x68\xe9\x5e\xb6\x29\x18\x02\x1b\x0c\x7e\xfa\x44\xf3\xd5\x27\x79\xae\x10\x21\x7b\x0c\x93\xeb\x9e\x19\x22\x18\x23\x50\x60\x9f\x15\x24\x3c\x3d\x66\x6e\x9c\x3c\xd7\xfe\x7a\xad\x7a\xf3\x7f\x9d\xfe\xaf\x70\xd6\xf6\x89\xa6\x2e\x57\x4d\x63\xbc\xdf\xb5\x22\xc6\x79\x4e\xcb\x02\x5f\x4d\x7c\x35\x3f\xa9\xad\x8d\xa0\x7e\xea\x83\x8b\x36\x08\xcb\x1f\x22\xe8\x3a\x0f\x7d\x1c\x2e\xfa\x88\x6b\x44\x48\x14\xce\x71\x36\x86\x81\xe1\xf9\xd4\xbe\xb4\x97\xa4\xfd\xd9\xde\x44\x76\xde\x9b\xd2\x75\x6f\xf6\x99\xa6\xc3\xd6\x54\xeb\xd9\x8a\xd7\x99\x9f\x5b\x54\xe3\x9b\x58\xf8\xcc\x22\x6d\xf1\x6c\x51\x2f\x9f\xfa\xe6\x11\xc1\xcb\x16\x88\xcb\x22\xab\x67\x0f\x31\xf2\x3f\x8c\x86\x82\x70\xd6\xc7\xb7\xfd\x7d\x65\xe9\xb4\xae\xb4\x73\x2c\xb1\xdc\xf2\x73\x62\x56\x4d\xf9\x3c\x2a\x5e\xe3\x83\x93\x2e\x9d\x3e\xb6\x94\xe7\x89\x29\xe8\xe9\x7c\xf4\x94\xb7\x1a\x4e\xcf\x7c\x7a\xa6\x13\xae\xc8\x81\x56\xdf\xa2\x0a\x97\x8f\xf3\xf3\x84\x2a\xb5\x97\xb3\x4d\x2d\xfd\x01\x99\x5a\x18\x67\x1d\xc3\xfe\x1c\x65\x3d\xcd\xa8\x98\xf5\xc1\x3f\x47\x4e\x87\x17\x75\xe3\xd4\x8e\x6f\x67\x10\xd9\x7d\x94\x86\xc4\x20\x12\x08\x82\xc4\x1e\x25\x51\x4c\xc9\x7e\xc7\x1a\x68\x55\x0b\x5a\xd5\x60\xad\xf8\xba\x5f\xf6\xfa\x12\xa7\x55\xbb\x26\xc1\xac\x5a\x07\x72\x86\x59\x8d\x08\x2c\x68\xf2\x1a\xa2\x41\xc8\x82\x67\xa6\x90\x57\x11\x02\x15\x03\x11\x03\x23\x43\x83\x34\xb4\x4a\xe9\xd8\xa5\x97\x5e\x53\x93\xd2\x30\x8c\x84\x81\x52\xc3\xae\x61\x70\x6b\xc0\x18\x2a\x8c\x54\x88\x0c\xbb\x14\x02\xc8\x55\x6b\xaa\x5c\x8c\xc4\x96\xc6\x6f\xb0\x3b\xb3\x47\x0b\xa0\xaf\x38\x63\x67\xd9\x75\x58\xe8\xa8\xdc\x95\xdc\xeb\x79\x62\xa4\x57\x14\x97\xb6\xeb\xf9\x85\x4e\x8a\xe7\x71\x53\xf6\x8a\xdf\x17\x7f\x79\xfc\x2e\x7f\x1d\xfb\x83\xb9\xc7\xe5\x2b\xf3\xa7\xc0\xa4\x84\xd1\xb1\x0b\x57\xe4\x48\x58\x19\xf5\x4b\x4d\x0a\x12\xd2\x83\x3f\xfe\xf4\xe5\x35\xdb\x50\xd9\x3f\x27\x72\x26\x3f\x97\xcd\x08\xe2\xc1\x60\xfc\x73\xd6\x98\xa1\xf1\x62\xb9\xe8\xbb\x5d\x82\x9f\xfb\xe7\xf6\x9e\xf4\x3c\xfd\x2c\x16\x55\xae\xab\xe5\x6b\xfd\x96\x6c\x6b\x4f\x0b\xb3\xfc\x6c\x5d\x5a\xc2\x9a\xbb\xa5\x20\xce\x8e\xc8\x39\xd1\x66\x34\xd2\x82\x24\xe7\x50\xf3\x99\x14\x35\x3e\x59\xb7\xe7\x5a\x28\x38\x31\x1e\x51\xca\x9e\x13\x21\xfa\x9c\x0f\xac\x7d\x9f\x0d\xac\xce\x90\x58\xc8\x3c\xb7\xc8\xbd\xa0\xc1\xc0\x77\xb5\xed\x4b\x18\xdf\x78\x33\xbe\x6a\x27\x70\x5e\x78\xf6\xa5\xef\x8d\x83\xe7\xc0\xab\x0d\x92\x97\x0d\x6f\x76\xac\x5f\xeb\x5c\x19\x6a\x5e\x49\xd9\x73\x74\xe6\x30\xae\xfd\xfa\x4a\xd1\xee\x2b\x1d\xde\xfa\xda\x37\x8a\xcf\x95\x2e\x7e\x71\x1c\x10\x11\x23\xcd\x47\xe5\x76\xfc\x17\xf2\x1a\x40\x60\x73\xbc\x9d\x76\x90\xf3\x5f\x6c\xfd\x11\xab\xca\x15\xab\x6c\x7a\xe5\xec\x0b\xc3\x34\x5a\x1b\x24\x94\x1b\x96\x4e\x55\xad\x44\xab\x54\x20\xea\xa8\x9c\xb4\xe5\x6c\x42\x25\xa7\x81\x91\x6b\xc8\x88\x91\x74\x88\xe4\xd0\x86\x10\x17\xee\xc3\x3d\xfa\x13\x56\x2d\xa4\x9a\xb1\x9c\xb0\x3c\xb0\x8a\x16\xa7\x16\xdf\xd1\xe6\xd5\xeb\x1d\xd2\xc2\x31\xbe\x45\x27\x7a\xdb\x75\x93\x39\xc6\xac\x88\x0b\x57\x7c\x4b\x42\x6f\x70\x30\xdd\xf8\x5f\x8a\xf1\x86\x83\x29\xc1\xb7\x38\x08\x8e\x34\xdf\xe3\x02\xc6\xbd\xe2\x5b\xfc\x33\x74\xd4\xf8\x6f\xe3\x9f\xd7\x21\x8c\x1b\xfb\x5e\x50\x4f\xe1\xf7\x1e\x1d\x57\x7e\x9b\x46\xd5\xa8\xfa\xe4\x8d\x7e\x76\x1a\x94\x67\xc7\xaf\xa9\x4b\x52\xd1\xb4\xf9\xec\x37\x1d\xff\xcd\x1b\xac\xc1\x33\x66\x72\x6a\x3a\xec\x70\x8f\x60\x78\x74\x7a\x7a\x44\xd7\x8a\x66\x8f\x2f\x82\x97\x7c\xe0\x57\x0f\x86\x79\x1f\xe1\xb1\xee\xc0\xb4\x11\x55\x63\x50\xbe\x62\xe4\x29\xe7\xe0\xe0\x6b\x57\x6d\xbe\x67\xd7\xa3\x62\xbc\x34\x6d\xf6\x8e\xa0\x9a\x34\x5d\x50\x3a\x3c\x3a\x57\xb5\x2b\x3f\xd7\x1c\xef\x38\xfd\x65\xde\x7f\x83\x70\x76\xe4\xbf\x4c\x5b\xf1\xb0\x55\xa3\xef\xf1\xe8\x87\xaf\x39\xf6\x8c\x89\xf9\x19\x35\xfe\x3f\x9c\x98\x23\xe4\xc4\x4b\xb7\x20\x18\x59\x14\xb0\xe0\xcc\x0d\x71\xd7\x2d\xe3\xe1\x75\x2b\xd0\xbc\x1f\xf0\x55\x82\x57\xb5\xf5\xae\x64\x49\x61\x72\x22\x9d\xe7\xee\x6f\x95\x10\xd7\xdb\xdc\xc5\x4f\xc8\xcc\x11\xc1\x14\x35\xf8\xea\x3e\xc6\xff\x4e\xe2\x3e\xd8\x73\xe2\x3a\x0d\xf7\xa5\xc1\xf3\x8c\xd6\xe9\x9c\x25\x3e\x2e\xd6\xe7\xa9\xa9\xcc\x9d\xc3\xfb\x8a\xa2\x2c\x0b\x8d\xc1\x23\x63\xee\x29\x4a\x52\x92\xe0\x56\x4e\x0b\x26\xdf\x56\xb8\xfc\x4d\x3b\xf2\x2e\xe3\x66\x4c\x84\xe7\x29\x0b\x5c\x19\xe1\xe4\x04\xd6\x84\xf9\x86\x82\xd6\xaf\xfc\xc3\xba\xdd\x38\x91\x0d\xbe\xa0\x20\xa8\xec\xa8\xce\x80\xe7\x77\x7e\x26\x4e\x81\x20\xc3\x0b\xbe\x32\x4f\x8b\xe5\x8e\x33\x4a\x77\x59\x1a\x46\xbd\x31\x03\x75\x88\xa3\x0e\xac\xa3\x47\x61\x06\xee\xd4\x73\x89\xda\xfb\x90\x8a\x83\x92\x21\x8e\x6c\xcd\xc2\x20\x0d\xa0\xa3\x5b\x10\x1a\x69\x66\xe2\x81\x40\x0a\x1f\xf5\x61\xfc\xbe\x07\xcb\x3c\x73\xf4\x7f\x9c\x19\xc7\x6a\x34\xef\xac\x96\x9e\xf0\xd2\x13\xad\xbc\xd7\xe8\xda\xf6\x8d\x1a\x03\xaa\x3a\x06\x28\xce\xe7\xb8\xf0\x20\xae\x37\x8e\xfe\xe4\x78\xe0\xf6\xaf\xf5\xe0\xe1\x89\x75\xaf\xe0\x0c\x64\xdf\xc3\xc9\xa3\x4f\x9a\x97\xa5\x0b\xe3\x66\x3e\x3e\x65\xb4\x64\xf1\x2c\xe3\x25\x3b\x6e\xe4\xce\x48\x7b\xee\x6b\x9f\xd1\x38\xbb\xf9\xa2\xe1\x16\x8b\x85\xae\xf8\x58\x68\x28\x5f\x62\xb1\xb0\xfd\x50\x91\xe5\xd7\x9d\x49\xa9\xef\x58\xea\x43\xd3\x8f\x3c\x4b\xbf\xe2\x59\xab\x2b\xfc\x37\xbb\xc1\x69\x4d\x5e\x77\xa0\xeb\xee\xf4\x86\xfa\xaf\x56\xe2\x37\xbc\x19\x17\xfb\x98\x98\x36\x51\xd6\x67\x79\x1c\x2f\x7c\x9b\xb8\xe8\xe6\x36\xa0\x9a\x3a\x86\x3c\xa2\x1e\x3d\x77\x8e\x2b\x46\x60\xa2\x49\xa5\x75\xe2\x15\x87\xca\x95\xe9\x1a\xbc\xc7\xd4\xa7\x7c\xe2\x5d\x8d\x6d\x7e\xce\x67\xf1\xb8\xa8\x21\x06\xd2\xfc\xbe\x7e\x7a\x66\xbc\xc7\x68\xe5\x2f\xdf\xdc\xe6\x1c\xa8\x6d\x66\x7a\x89\xe7\xc3\xa3\x08\x75\xf2\xcb\xef\x6f\x33\xc2\xbe\xcd\x08\x41\xc3\x10\xfa\xcd\x0d\xc6\x07\xb7\x19\x7c\x3e\x39\xf0\x0e\x83\x8e\x88\xb7\xb7\xa7\xa8\xb3\xe6\x19\xaf\xdf\x3b\x6b\x97\x0c\x67\x77\xe0\xe7\x8c\xfa\x60\x8f\xbf\x66\x8d\x0d\xae\xfc\xba\x79\xaf\xf8\xca\x8e\x5c\x4a\xea\xe8\xf5\x59\xf7\xe5\x7b\xfc\x81\x05\x91\xf2\x42\x9e\x57\x26\x74\xeb\xfd\x9b\xb4\x5b\x37\xde\x62\xba\xd5\xb9\x30\xab\x59\x4b\xd7\xfb\xe7\x96\x1a\xf3\xad\x4f\x6f\xaa\x3f\xf4\xe9\x2d\xeb\xa3\x4f\x6f\xef\xf8\xdf\xb9\x4f\x9f\x33\x7a\xac\x77\x74\xe2\x1f\xfc\x30\xf9\x4c\x6b\xf1\xf3\xbe\x92\xbf\xc7\x82\xef\x7b\xe8\x0e\xe5\x9f\xf6\xd0\xcf\xdd\x5f\x7a\x54\xe4\x7d\x07\x6e\xf0\xaf\xf7\xaa\x3d\xe1\x9b\x5e\xf5\x95\x5f\xfd\xd4\xcf\x7d\x71\x77\x62\x60\xce\x0f\x0e\x6e\xb0\x7d\x69\xaf\xdc\xfc\xd5\x6f\xfc\xe8\x25\xfb\xf1\x7f\x9f\x1d\x77\xbd\x96\xc5\x11\x79\xe5\xd5\xf4\x2d\x3e\xff\x67\xe5\xde\xfd\x13\xfe\x1f\x9c\x73\xaf\x3b\xf6\x4d\xfe\xe5\x0e\xef\xfb\x58\xbc\x64\xe2\xbc\xf9\xc5\x85\x99\xfb\x66\xfe\xe6\x45\x5a\x6c\xe9\xeb\x18\xa1\xd5\x9f\x89\x39\xe8\x38\x9e\x4d\x6e\x72\x59\x09\x4e\xde\x9c\x23\x4e\xff\x47\xf4\x2a\x99\x46\x7f\xbe\xdd\x1d\xc2\x88\x71\xc9\x7d\xb6\xc7\xc3\x8b\x06\x67\xb7\x32\x73\x77\xe8\xca\x63\xd2\x30\xef\x30\xb7\x7f\x54\xd6\x6c\x08\x18\x9e\xcc\xe6\x65\xad\x35\xe7\x31\xc3\xfa\x31\xc3\xc2\x93\x83\xae\x55\xe9\xc6\x02\x37\x8b\x5b\xf8\x1f\x01\x66\x32\x53\xca\x29\x27\x62\x10\x25\x68\x11\xd1\x1c\xaf\x59\x4b\x54\x6d\xad\xd8\xe0\x12\x62\xe9\x66\x22\xd9\x44\x98\x30\x65\x85\x00\x2c\xb9\x68\xcd\x91\x7a\x68\x11\x2d\x5b\x69\xaa\x5e\xe2\xff\x13\x00\x00\xff\xff\x72\xfd\xae\x1c\xca\x1f\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

