// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/ERC223Receiver.abi
// compiled/ERC223Receiver.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/Owned.abi
// compiled/Owned.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// compiled/ProposerSet.abi
// compiled/ProposerSet.bin-runtime
// compiled/SafeMath.abi
// compiled/SafeMath.bin-runtime
// compiled/Token.abi
// compiled/Token.bin-runtime
// compiled/Voting.abi
// compiled/Voting.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x6b\x02\x41\x0c\xfd\x2f\x39\xef\x49\x6f\x7b\x2b\xf4\xd2\x43\xa1\x97\x9e\x44\x24\x3a\xb1\x0d\xac\x99\x61\x92\xb1\x9d\x8a\xff\xbd\xac\xac\x8e\x5a\xb5\x5f\x5b\xa4\xc7\x81\x97\xe4\xbd\x37\x8f\x37\x5a\xc1\xcc\x8b\x1a\x8a\x41\x6d\x31\x51\x05\x2c\x21\x99\x42\x3d\x5a\x81\xe0\x82\xa0\x86\x09\x3a\x17\xa1\x02\xcb\xa1\x7d\xb6\x2f\x52\x85\xf5\xb8\xda\x22\x42\xf4\xc1\x2b\xb5\x20\x9f\xec\x78\x5e\x0d\x2d\x69\x59\x90\x58\x6c\x38\x80\x75\xb5\x43\xb0\x23\x31\xb6\x5c\x30\x6a\x91\xe5\x69\x73\x23\x60\xc6\x69\x43\x50\xcf\xb1\x51\xaa\x36\xeb\xe8\x3e\x19\x4e\xb9\x69\x67\x6a\x58\x32\xbd\x94\xd1\x79\x92\x99\xb1\x97\xcd\x81\xa2\xae\x9b\xfe\x89\x3c\x47\x98\xec\xd9\x47\x7e\xa3\x03\x85\x5f\x22\x27\x5e\xb6\xa0\xde\x29\x16\x07\x27\x17\x2d\xec\x40\xd7\x56\x41\x32\xf3\x8e\x5c\xd9\x30\xcd\x46\x3a\x1c\x8c\xc6\xfb\x2c\x35\xeb\x63\x70\x68\xff\xdb\x6b\xcd\xfa\x10\x49\xc9\xae\xa4\x62\xe9\xad\x65\x74\x29\xd6\x9a\xf5\x4e\xd8\x18\x9b\xbf\x8e\xc4\x51\xb3\x7c\x2c\x0e\x3d\xdd\x1c\xe7\x92\xd2\x53\x25\x9c\xa5\xb5\x33\xef\x22\xa7\x7d\x4b\x7f\xc5\x08\xc5\x4b\x5e\xf8\xa4\xa7\x3e\x94\xc5\xd1\x2b\xb9\x2d\xdb\xcf\x53\xba\x1b\xe8\x76\x7d\x27\xb5\x37\x7b\x0d\xd1\x81\x68\x49\x62\x7d\xd3\x2c\x17\x6f\x0f\xba\xf5\xf0\xe6\xf8\x3d\x00\x00\xff\xff\xcf\x89\x9f\xfd\x9f\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6f\xb6\xdb\xbe\x0a\xdc\x12\x20\x81\x60\x39\xb2\x6c\xed\x7f\x09\xef\x00\x72\xe2\xc4\xb9\x7f\xda\xbe\x0f\xbf\xe4\xdc\x36\x91\x6d\x04\xc3\x30\xa0\x08\xf8\xbb\x02\x93\x00\xd4\x22\x08\x82\x00\xba\x73\x93\x32\xd7\xab\x0d\x40\xf8\xcb\x97\x00\x40\x61\xa8\x28\x52\x80\xeb\xd4\xb1\x4d\x45\xac\xbe\x8b\x11\x37\x05\x29\xd4\x86\xb5\xd9\x39\x56\xb1\x70\xae\xf2\x01\x43\x77\xd5\x5c\x65\xc9\x55\xdd\x66\xdd\xc7\xd8\x73\x75\x5b\xf7\xf6\xb6\x19\x0d\xb1\x58\x25\xa8\xb9\xba\x15\x23\xd9\xb4\xe7\xaa\x94\x5c\x1d\x7d\x9b\x0a\x96\x76\x49\x97\x0f\x73\x1c\x38\xc6\x58\xf7\x1e\xca\x8d\x37\xf7\x5d\x61\xee\xbc\x95\x8a\x1c\x1e\x3b\x2e\x8f\x55\x5f\xd9\x50\x00\x50\xa0\x7b\xa4\x04\x1d\x4a\xe0\xc8\x28\x82\x50\xb0\xb1\xb8\x9d\x0a\x8c\x4f\x3c\xb5\xa0\x28\x3a\xe2\x15\x04\x08\x94\x00\x15\x7d\xc5\xf2\x73\x89\x6f\x98\xf7\x10\x00\x1a\x32\x28\x30\x1a\xac\xef\xa0\xa0\x45\x7d\x2f\xe0\xcd\xef\x0f\x88\x10\x60\x9a\xc7\xe3\x56\xd8\xed\xf8\xff\xcb\x86\x5f\x3d\x1c\xc7\x8d\x21\xdf\x16\x7f\x8a\x10\x76\x71\xa2\x68\x5a\x41\x92\x65\xa5\xf8\xae\x1e\xa1\xef\x45\x00\x4e\x10\xe7\x42\x87\x82\x76\x46\x71\x7a\xe8\x96\xad\x9c\xd6\x33\x6a\x05\x43\x28\x06\xb3\x3c\x50\xc4\x0a\x6f\x28\x22\xd7\xef\x50\x9c\xc3\xbd\xf6\x48\x4f\x0b\x82\x1f\x2d\x54\x85\xc2\xef\x96\x50\x3c\xba\x5a\x05\x28\xae\x9f\x11\x6b\x71\xae\x69\x20\xea\xd1\x67\x16\xcc\xad\x38\x87\x30\xfd\xcf\xbb\xb3\x42\x56\x8e\xc8\x56\x1e\xb4\x46\xae\x8a\x23\xa5\xb5\x34\x06\xab\x26\xec\x15\x54\x75\x37\x3e\x91\x88\xb7\x3c\xbd\x1f\x9f\xe3\x4f\x0f\xdd\x27\xbc\x7b\x18\x6b\x9f\xbd\x02\x2b\xe9\x93\x5e\x18\x93\xec\x20\x00\xfa\xe0\x1d\x77\xfa\xd2\x3b\x82\xf9\x1f\xc7\x56\x68\xfb\xda\x7b\x39\xfe\x88\x5b\xd2\xcb\xf5\x69\x7d\xaf\x6f\x32\x5f\x97\x49\x97\x3a\x76\xef\x40\xc9\x7d\xce\x08\x7e\x53\xaf\x8f\x5c\x7c\xaa\x5a\xda\xeb\x37\x55\x4b\xdb\x78\xaf\x5a\x40\xa3\x1f\xaa\x8c\x66\x79\x8f\x65\xfa\xbf\x8d\xf1\x1a\xcb\x2b\x32\x06\x86\xd7\xaa\xbe\x5b\x77\x8b\x5e\x93\xe4\x9e\xd9\x98\x61\x0b\xa1\x14\x0a\x95\xa8\x4f\x95\xf3\xbd\x04\x50\x72\xb7\x40\x1d\xf4\x03\x83\xee\x2b\x17\x1c\xe1\xea\x0b\x24\xf2\x90\x19\xd5\xf0\xde\xa5\x60\x69\x12\x2d\x6b\x14\x3c\x0b\xde\xc1\xca\x96\x21\x54\x78\x89\xe9\xad\x82\xee\xf5\x43\xbf\xdd\x27\xd6\xcb\x31\xa2\x8f\xb8\x8a\x06\x3e\xc3\x15\x2a\xee\xf7\x9c\x73\xf5\xfd\xb5\x30\x19\x9e\x0c\x59\x4f\x09\x6f\x9e\xef\xe4\x3d\x40\xee\x9f\xb1\x9a\xb3\x04\xb9\x66\x67\x70\x2f\x1e\x4c\x42\xb7\x8a\x61\x63\x4c\x6e\xea\xbe\x94\xa5\xe1\x61\xed\xc9\x97\xa5\xf3\xf8\xf2\x97\x39\x01\xae\xa5\xdc\x39\xa0\x88\xe2\x3c\x88\x5e\x58\xb1\xbd\xf1\xa8\x92\x06\x2e\xf4\x9a\xeb\xad\x65\xae\x91\x03\x91\x5a\x5e\xf9\xf7\xb6\x8b\xef\xe1\x57\xcf\x0c\x43\xa8\x55\xf6\x44\x45\x0a\x0d\xe5\x1a\x28\x59\x76\x2d\x85\x3b\x53\xda\x6c\x76\xec\x47\xd1\x62\x63\x6f\xbd\xed\xba\xed\xad\x1d\xd6\x0e\x1e\x6a\x2e\x0c\xf3\xa8\xb3\xc9\xd8\xb7\xed\xe8\xbd\x48\x95\x2a\x07\x69\x57\x31\xee\x4d\xb5\x9e\x75\x70\xe5\x79\xa7\xd4\x94\xdf\x22\xd4\xf5\x2d\x52\x8f\x09\x23\x3b\x75\x93\x77\xf4\x46\x5b\xfd\xf4\x8a\x9e\x76\x7c\x45\x6f\xa7\x6f\xd1\xa3\xaf\xd1\xb3\xec\x16\x1e\x15\x42\x9d\x9b\x3d\x39\xe7\xa8\x76\xd2\x54\x13\xbd\x55\x7f\xe0\x79\x74\xa4\x9d\x4b\xb3\xbd\x57\xdb\x58\xb0\xb4\x42\x6d\x1e\xa5\xf6\x71\x8c\x43\xb9\x1f\xa6\x7d\x1c\x73\xe8\x31\xa6\x1d\x3a\x67\x11\x56\x02\x82\x7d\x53\x56\xfa\x17\x95\xfc\x42\x1f\x59\xbe\xd3\x47\xae\x37\x7d\xfc\x38\xd5\xb0\xe1\x5f\x4f\x35\x1f\xd5\xb6\xd3\xd9\x7d\x62\xca\xfd\xc0\xcf\x3b\x77\x9c\x33\x2b\xc7\x3c\xea\x35\xc7\x0c\x2b\xee\xc0\x68\x45\x2e\xd4\x42\x47\x04\x9d\x25\x3c\x29\x7a\xe2\xba\xc3\x57\x8e\xc2\x6d\x1e\xbc\xbd\x77\x1a\x47\xca\xab\xb2\x1e\x4b\xa1\x9d\x64\x55\xeb\xe5\x59\x01\xfc\xf6\x59\xc3\xba\x62\x4b\x75\xba\xf2\xd5\x68\x3e\x94\x1d\x33\x0b\x43\x1f\x59\xf0\x8e\xfa\xa7\x68\x48\xdd\xbe\xac\x22\x61\x7b\xab\x22\x91\xfe\x8b\x2a\x92\xc6\xff\x97\x2a\x12\x3b\xbe\xaa\xa2\xbf\x8f\x77\xbc\xeb\x63\x74\xb6\xf6\x88\xe7\xa7\x97\x33\xf5\xa6\x4c\x64\x60\xe4\xda\x14\x9d\xbc\x19\x30\x9f\xf9\x9f\xfd\xd2\xb1\x63\x16\xf1\xfe\x96\x55\xfa\xe5\x64\xf9\x45\x5f\x5c\x15\xd5\x6a\xa8\x5b\x4c\x36\xbf\xe8\x61\xc1\x24\xaf\x9d\x7b\x17\x6b\x05\xfd\xc4\xf5\xda\xb3\x9c\x99\x4f\x1d\xfe\x38\x27\xc8\xcf\x9d\x85\x40\x8b\x5d\x3a\x4b\x7a\x9f\xfe\x2b\xbf\xf1\xaa\xf5\x5d\xeb\xe2\x74\xf0\xcb\xed\xb9\xf7\xf8\x78\xc6\xc6\xb3\x6a\xde\x63\x8d\x69\xf3\x51\x39\x4f\xf5\x88\x4f\xf0\xaf\xde\x1e\xeb\xdc\xe0\xd6\xa2\xe3\x3e\x2c\xc6\xb4\x9c\x18\x01\xda\x9a\xc1\xb3\xca\xdb\xac\xdf\xfb\xfb\x43\xbc\x8a\xeb\xf9\xdc\xd9\x15\x3d\xcf\xac\xb4\x74\xc1\x90\x63\xaa\x53\x4e\x1f\xb4\x18\x69\x0b\x26\x7a\x66\x95\xe9\xe4\x05\x9a\xca\xc5\x33\xad\xf8\x23\x92\xa7\x7e\x7d\xec\xc0\x0f\x5f\xe2\xbc\x61\x3e\xbd\x96\x55\xbd\xa8\x94\x13\xa3\x05\x8a\x56\x0d\xac\x32\xab\xa0\xc4\x14\x06\x2a\x16\xa7\x0e\x82\xe5\xfd\x42\x30\xaa\x5b\x4d\x1e\x1e\x97\x50\xb7\xde\x25\xeb\x3d\x38\x5c\x9f\xa7\xdc\x93\x9f\xa1\x3e\x7b\x74\x2f\x04\xd3\x9a\x2a\xe4\xab\x5b\xe7\x96\xda\xee\x57\xe0\xc8\x89\x2f\x31\xcf\x5a\x5a\x9f\x49\x03\xaf\x1d\x6c\x69\x4c\xee\x69\xf8\x09\x9d\x73\xcf\x43\x63\xa6\x0e\xdb\x3d\x4e\x29\x99\x91\xb3\x5f\x65\x8d\x7d\x3a\x05\x69\xb9\x31\x8f\xed\xa2\x7e\xcc\xbc\x5d\x99\xdb\xea\xef\x7f\x05\xf2\xc9\xd8\x3e\xf3\x9d\x6e\xbb\xd6\x97\x5d\x9f\x7c\x37\xae\x6f\xd5\x69\x7c\x9c\x08\x77\x7a\x70\x9f\x5f\xb8\x5f\x2f\x0c\xb3\x46\x9f\xb8\xeb\x08\x39\x7b\x99\xdf\xb2\x78\x3f\x99\x5c\xfc\x5c\x5c\xbf\x78\xea\x7e\xae\x28\x1f\xaa\x8d\xf2\x27\x38\x01\xdd\x98\x9d\xca\x2d\xa1\xdd\xe1\x15\xc1\x5d\x99\x57\x77\xa4\xbc\x87\x7f\x79\x26\x8a\xa7\x88\xf9\x72\x4e\xe9\xd0\x82\x9d\xde\xd1\xb2\x53\x3c\x4e\x4d\x99\xc3\x3b\xf7\xd6\x64\x15\x4f\x9c\x4c\x1d\xab\x3a\x92\xdb\xbf\xf3\xe6\x93\xed\xd7\xdd\x63\x27\xf2\x5a\x39\xbd\x95\xf8\x75\xcb\x67\xb7\xec\x7f\x5a\xd4\x77\x70\x1d\xf7\x3d\xba\xc9\xe9\x41\xea\x99\xb3\x83\x59\x09\xcf\xab\x2d\x95\x21\xee\x41\xc4\xe7\xba\x12\x3b\x3f\xf8\x79\x3e\xbb\x9c\xb8\x10\x7a\xdb\x56\xfd\x7b\x5d\x52\xd6\xc5\x35\xf2\xcc\x44\x6a\xa7\x16\x8e\xdf\x70\x7c\x7c\xc9\xe9\x61\xf1\xb8\x3c\xb8\x04\x71\xc2\xf1\xb9\xe2\xf2\x5b\x4f\x76\xa0\x7a\xf8\xde\x7e\xde\x51\x3a\x3d\xec\xe7\x69\x60\x69\x6d\x6a\xd2\x18\xfe\xa5\xfb\xc8\x43\xad\xb7\xde\xa8\x80\x4f\xe2\xfb\x21\x93\xb4\x82\x56\xaa\xaa\x7e\xe2\x9f\x5b\x83\x4a\x47\x19\xa5\x96\xbd\xd4\x5e\x4b\x17\x12\x93\x1d\x8f\xc3\x44\xb0\x4f\x83\xde\x08\xa8\x16\x99\xdd\x13\xf4\xbf\x00\x00\x00\xff\xff\xab\xc1\xc3\xc3\x18\x16\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledErc223receiverAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x41\x8a\x84\x30\x10\x85\xe1\xbb\xbc\x75\x56\x03\x33\x8b\x1c\x60\x76\x73\x02\x91\xa1\xa2\x25\x04\x63\x45\xcc\x4b\x43\x10\xef\xde\x34\xb4\x4a\x2f\x8b\xfa\xe0\xfd\xdd\x8e\x21\x5b\xa1\x18\xe1\x27\x49\x45\x1d\xa2\xad\x95\x05\xbe\xdb\x61\xb2\x28\x3c\xfe\xa7\x2d\x2f\x70\x60\x5b\x5f\xa7\x8c\xe3\xa6\xa5\xe0\x70\xb7\x78\x48\xaa\x7a\x93\x1a\x8d\x5f\xdf\x3f\x1f\x64\x14\xca\x2d\x42\xa3\x16\x1c\xbd\x3b\xff\xcc\xb3\xda\xaf\xa4\x14\x64\x98\xe1\x90\x2b\xdf\x1d\xbd\xc3\x2a\x4d\x42\xd2\xab\xb1\x50\xa8\x7f\x95\x12\x62\x8a\x6c\xf0\xb0\x6c\x27\xba\x36\xa6\x6a\x03\x63\x36\x1c\xfd\x33\x00\x00\xff\xff\x74\xa5\xc3\x0b\xe9\x00\x00\x00")

func compiledErc223receiverAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledErc223receiverAbi,
		"compiled/ERC223Receiver.abi",
	)
}

func compiledErc223receiverAbi() (*asset, error) {
	bytes, err := compiledErc223receiverAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ERC223Receiver.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledErc223receiverBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledErc223receiverBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledErc223receiverBinRuntime,
		"compiled/ERC223Receiver.bin-runtime",
	)
}

func compiledErc223receiverBinRuntime() (*asset, error) {
	bytes, err := compiledErc223receiverBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ERC223Receiver.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x51\x6f\x9b\x30\x10\xfe\x2f\x7e\xe6\xa9\xdb\xaa\x29\x6f\x6d\xa5\xee\x69\xab\xd4\x76\xdb\x43\x55\x55\x87\xb9\x24\x96\x8c\x8d\xec\x33\x29\xab\xfa\xdf\x27\x08\x81\x64\xc5\x38\x2c\x24\xe4\xa9\x95\xf8\x0c\xf7\x9d\xbf\xfb\xee\xcb\xd3\x1b\xe3\x5a\x59\x02\x45\x6c\x46\xc6\x61\xc4\x84\xca\x1c\x59\x36\x7b\x7a\x8e\x98\x82\x14\xd9\x6c\xfd\x27\x62\xda\x51\xfd\xe8\x6d\xf3\x84\x45\x8c\x8a\xac\xfc\xcf\x92\x11\x6a\xc1\xde\x9f\x23\x96\x41\x01\xb1\x44\x36\x9b\x83\xb4\x18\x31\x4b\x40\xf8\xdd\x11\xc4\x42\x0a\x2a\xd8\x8c\x65\xce\x60\x7b\x74\xee\x14\x27\xa1\x15\x7b\x8f\xb6\xcb\xa9\x4f\x37\xf5\x34\x1f\x7d\x31\xc8\x05\xe6\x68\xda\x57\x40\x92\x18\xb4\xb6\x7a\xc3\x06\x05\xa9\x76\x8a\x5a\x8c\x13\x8a\x2e\xbe\x5c\x56\x25\xd6\x18\xc8\x32\xa3\x73\x0f\x37\xeb\x38\x2f\xdf\xd9\xbc\x20\xd6\x5a\xee\x49\x50\x69\xb5\x01\x1d\x9b\xa6\x14\xa9\xe8\x62\xb9\x05\xe1\x06\x13\x41\xdf\x8c\x5e\xd1\xf2\x1e\x08\x77\xd1\x97\x9f\x77\xc0\xf8\x9a\x09\xd3\x01\x69\xbb\x66\x97\x60\xf0\x51\xef\x74\x6d\xec\xae\x78\xb5\x48\x9a\x40\x3e\xb8\x2c\x93\x45\x48\x92\xdb\x17\x1e\x2e\x2e\x17\xb8\x3a\xe0\xb2\xb8\x56\x64\x80\xd3\x55\x92\x04\x2e\x4c\xe1\xea\x6e\xa5\x3a\xaf\x75\xab\xc7\x48\x3f\x6a\xdc\xad\x36\x37\xf5\xcb\x8f\xda\x72\x3f\xb7\xb9\xd1\x69\x3f\x27\xd2\x07\xcf\x22\x19\x50\x76\x8e\xe6\x76\xfd\xb1\xe9\x06\xd2\x2b\xbd\x04\xb9\x48\x41\xda\x7d\x74\xf7\xf5\x34\x4e\xb8\xbf\xea\xf4\x3e\x92\x3b\x13\xbd\x85\x6b\x75\x59\x02\x84\xd7\x20\x41\xf1\xe0\x6a\x1a\xe6\x03\xa3\x30\xe0\x20\x65\xc8\xb8\x2b\x0c\x1e\x3c\x37\x65\x39\xce\xb7\x9f\x5f\xea\xa7\x9e\x6e\x1e\x73\x6e\x86\xd8\x47\xcf\xa6\x6b\x89\x2e\x90\xae\x72\x10\xb2\x2c\xe6\xa6\xda\x68\x7b\x4d\xe2\xc8\x1b\xc0\xc7\x32\x47\x63\x4b\x74\xdf\x55\xc5\xc2\xd0\xf2\xb7\xa0\xe5\xaf\x8a\xea\xc4\xa5\xb7\x75\x49\x54\x0b\x5a\xde\xcd\xef\x31\x17\x25\x89\x29\xfa\x3a\x86\xc7\x8d\x96\x0b\x2b\x03\xba\x3a\x83\x70\xe8\x9d\xa9\xb0\x45\xc6\x6b\x73\xbc\x9b\x77\x13\x88\x1b\xef\x9c\x40\x70\xb6\x48\x63\x2d\x4f\xff\x93\xc2\xd7\xce\xad\x6b\x2c\x08\xed\xa7\x8b\x0f\x71\x37\xe9\x75\x9c\x70\x06\xf7\xa5\xea\x16\x31\x24\xa4\xaf\xb1\xf6\xa7\xc5\xa4\xf7\xab\x56\x41\xf6\x28\xd2\xee\x34\x7f\xf4\xc1\x1d\x6d\x1c\xf9\x12\xcc\x02\x27\x0a\x23\x23\x46\xdb\xb3\xb4\x92\x7d\x16\x17\x89\x14\xa7\xdb\x5b\xfe\xbb\xc9\x35\x95\x0e\xd1\x67\x83\x42\x09\x12\x20\xc5\x9f\xa9\xf4\x53\x2d\xfd\xde\xee\x5a\xa4\x3a\xc9\x5e\xd7\xd8\x93\xfd\xae\x0e\x2f\x94\x2d\xa5\xdb\x0c\x55\x12\xd8\x3a\x20\xa5\x5e\xf9\x43\xb9\xc1\x14\x84\xda\xb9\xb3\x53\xee\x9d\x46\x2f\xbd\x12\x1e\x96\x90\x7b\x2a\x02\xa5\x55\x91\x6a\x67\xbb\xf4\x21\x54\x82\xaf\x98\x6c\xaa\x0d\x87\x65\xcf\x01\x9f\x3f\x35\xf0\xfa\xd3\xcd\xcc\x80\x74\x9e\xb5\x5f\x43\x1e\x5b\xbb\xaa\x41\x98\xa3\xa2\xff\xa6\xd4\x23\x2d\xcf\x09\xbf\xd2\x0e\x22\xb6\x4e\x74\x20\x47\x22\x86\xaf\xc8\x1d\xe9\x61\x65\xd2\x87\x75\xbc\xd9\xd9\x9e\x03\x61\xff\x78\xf8\xe0\x1f\x63\xb0\x1b\x2a\xc4\xa1\x3a\xec\xc9\x4c\x9e\x23\xfd\x09\x29\x70\xb8\x2b\x80\xfd\xdb\xc7\x32\xe8\xdd\xee\xd0\xae\x3b\xf8\xfc\x37\x00\x00\xff\xff\xae\x4e\x8f\x51\x28\x17\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x09\xd2\xe3\x2a\x0e\xbe\x92\x16\x04\xe2\x38\x60\xe0\xfe\x47\x98\x92\xc0\x89\x63\x3b\xf9\xf3\x77\xcf\xbc\x7a\x55\x93\x54\x2f\xc1\x20\x24\xa1\xe5\x93\x70\x04\xfb\x06\x10\x8a\x00\x81\x23\x42\x44\x40\x0a\x92\x22\x8f\xf5\x89\xd0\x21\x02\x10\x94\x08\x00\x2c\x10\x30\x46\x86\x38\x5a\xeb\xc0\x8a\x18\x7c\x4d\x96\xa4\x10\x19\xb2\xf4\x92\x2a\xcf\xd1\xca\x6b\xb4\x73\x27\xdd\xd6\xdc\xbe\xe6\xa2\x62\x84\xd6\x9a\x8f\x12\xc1\x1c\x25\xc6\x4c\xb2\xe6\x52\x90\x7d\xb4\x6a\xa2\x7d\x6e\x2c\x73\x94\x91\xb7\x2e\x31\xcd\xd1\x4c\x6b\x34\x0e\x08\x9a\x26\x0f\x54\xeb\x1c\x0d\x50\x35\x80\x94\x39\xda\xd7\x6e\x61\x2b\x59\x72\x81\x39\x3a\xc6\x1c\x95\x18\x32\x08\x0f\x1f\xe5\xb0\xa4\x90\x2e\x54\x20\x4d\xce\x38\xea\x1c\x8d\x8d\x98\x4a\x99\x3c\x70\xea\xfb\x68\x88\x20\xdb\xa2\x90\x71\x8e\x26\x28\xa0\xc4\x8b\x42\x5d\x7a\xc8\xd2\x34\xd7\xb0\x46\xdb\xa2\x9b\xf3\x00\x08\x61\x51\xe8\x4b\x8a\xc2\x63\x94\xbc\x4d\x3d\x84\xb0\xa4\x28\x19\x24\x6f\xb5\xce\xd1\xb8\xf4\x50\xd3\xd6\xb1\x85\x29\x71\xd0\x30\x47\xb7\xd0\x62\x6c\x5d\xe7\x68\x5e\x9a\xdc\xa4\xc6\x81\x59\xe6\xe8\xce\x59\x6b\x91\x7a\xe3\x3e\x47\xb7\xa5\x9d\xb1\x75\xdc\xb6\x6d\xd1\x1d\x41\x92\x54\xb3\x0d\x85\xd1\xa4\x72\x40\xb1\x53\x66\xb3\xa2\xc7\xa8\x8f\x6c\x11\x41\x20\x49\xb4\xf9\x01\x04\x23\x10\x28\x28\x09\x29\x66\x50\x04\x54\x56\x54\x14\xfb\x43\xf6\x14\x30\xa3\x80\x82\x60\x86\xf5\xdb\x56\xb0\xb2\xd1\x96\x6a\xf3\x11\xe6\x8e\xc9\x35\xa7\x04\xb6\x9e\xfd\xdf\x45\xc3\x9e\x46\xb0\x7d\x05\xe6\x37\xfb\x1f\xdb\xd1\xe8\xe2\xc0\xa8\x8b\x4a\x91\x45\x85\xd5\x39\x34\x9e\x9c\x8a\xb9\x07\x02\x40\x01\xc6\x8c\xf1\x95\x43\xa3\x9c\x69\xd2\x9e\xb2\x29\x64\x3b\x79\x18\xfc\xd4\x49\xed\x67\x9d\x34\xb1\x1d\x22\x94\xe5\x63\xc0\xee\x89\x82\x31\x02\x05\xb6\x55\x12\xf2\x53\x63\xd9\x84\x93\xe7\xde\xef\xf7\x1a\x67\xfd\x13\xf6\x1f\xf6\x4a\xe3\xf4\x89\x10\x02\x8b\x22\x46\xd3\x52\x9c\x73\xd1\x84\x35\x8e\x4c\xff\x6b\x37\xa2\x7a\xde\x8d\x4d\x5f\x29\xc9\x91\xf7\x2f\xf8\x36\x1d\x7e\xc9\xf7\xce\x17\xed\x7c\xa5\x54\x6c\xb7\x9d\x52\x92\x6f\xb5\x7d\xa2\xe4\x52\x47\x04\x85\x78\xa4\x97\xdb\x99\xb3\x62\xe3\x45\xcb\xd1\xa2\xc7\xc8\x90\xf1\x68\x1f\xef\x65\xdd\xe2\x1f\xcb\x5a\x74\x1c\x79\xeb\x77\xfa\x7f\x77\xda\x08\x95\xe9\xb0\x9a\xa1\x9c\x56\x33\xa5\x5f\x69\x6a\x6b\xf5\xa8\x83\xd7\x95\x5f\xeb\x83\xc3\xd9\x3f\xde\x4a\x71\xd1\x47\x47\x3c\x4a\x94\xf8\x96\xd2\xe4\x76\x90\x1c\xe7\x6a\xbe\xb5\xdd\x91\xd2\x71\x56\xde\xfe\xd2\x9a\x46\x6a\x47\x7a\xdb\xc5\x3f\x3f\x9d\x98\xa5\x80\xe3\xea\x7e\x96\xcf\xa3\x2b\x52\x7a\x99\x35\xce\xf6\x15\x8c\xfe\xd4\x02\x52\x1d\x07\xdf\x0c\x2a\x42\xd7\x08\x90\x59\x83\xc7\x07\xd0\x68\xf1\x34\xa3\xb2\xcb\x64\x51\x38\x5a\xec\xb3\xd3\xb5\x93\x8d\xa0\xf2\xfc\x6d\x27\x1e\x3d\x52\xcf\x28\x5c\xc0\xc6\x2d\xda\xde\x9e\x7c\x08\x17\xfb\xfd\x31\x5a\x21\x32\x1c\xad\x38\xc4\xb3\x7f\x7e\x11\x5d\x91\x67\x5e\xd8\x69\xe8\x78\x6f\x37\x28\x78\xd4\x6e\x28\xe7\xf8\xf2\x89\x67\x33\xcf\xa3\xc7\x86\xeb\xf9\xfb\xea\xb5\x53\x7d\xd9\xa9\x9d\xfd\xf3\x6b\xbf\xc0\x38\x5e\x76\x1d\x67\xf9\xcc\xd3\x11\x13\xcd\x18\x66\xf9\x79\xd8\xef\xb6\xed\xb6\xa1\x2b\x72\x2f\xbf\x35\xa4\x58\xcc\x97\xd3\x90\x18\x44\x02\x41\x90\xd8\xa3\x24\x8a\x29\x65\xf8\xc5\xc7\xad\xca\xb3\xb4\x65\x63\xa9\x19\xe6\x9e\xaf\x72\xb1\x65\xf8\xe8\x3c\x2f\x54\x00\x1e\x47\xf6\x6c\xe2\x96\xc8\x04\x39\x68\xb2\x2c\xae\x41\x28\x87\x69\x85\x96\xc7\x09\x54\x32\x88\x64\xc8\x64\xd6\x99\x86\x6e\x52\x3b\x76\xe9\xb5\x6f\xa9\x49\x6d\x18\x46\xc2\x40\xa9\x61\xd7\x30\xb8\x35\x60\x0c\x1b\x8c\x54\x89\x32\x76\xa9\x04\x50\x36\xdd\xd2\xc6\x35\x93\xe4\x49\xf1\x43\x3e\x2b\x6c\x28\x00\xd0\x76\x74\x4c\x10\x77\x84\x64\x1a\xde\xd0\xe2\x0b\x26\xf6\xbc\x6e\xf9\xdc\x47\xcf\xf1\x45\x9a\x68\x3c\xce\xf3\xb1\x97\xf3\x0b\x37\x1e\x6b\xfe\x8a\x86\x78\x64\xbc\xd8\x27\xb3\x23\xa9\x8b\x47\x60\x54\xba\x8e\xa5\x91\x0d\xf9\xb1\x21\xe5\x38\xb6\x81\xdb\xe8\x51\x98\x81\x3b\xf5\x52\xa3\xf6\x3e\x64\xc3\x41\x29\x23\x8e\x92\x5b\x0e\x83\x34\x80\x8e\x9e\x83\xd0\x48\xaa\xc9\xbe\x2b\xba\x90\xf2\x6d\x74\x41\xa5\x15\x5d\x82\xd9\xc1\x23\xb2\xf0\x6b\x64\xb9\xc6\x8e\x62\x38\x31\xae\x7c\xb3\x39\x2e\x7b\x63\x63\xa7\x5c\xe4\xf1\x4c\x11\xc8\x50\xa7\xef\x41\x06\x43\x23\x60\x78\x20\x46\x3d\x9f\x27\x39\x5e\x9c\x74\xc2\x8b\x3f\x4c\x1b\xd0\x68\xd4\x6e\xce\x02\x34\x2e\xf9\x5e\xa2\xa3\x26\x93\x5b\xd9\xc6\xdc\xa2\x61\x8f\x9f\x86\x83\x85\x02\x4d\xbe\xe2\x5a\x27\xa4\xc1\x77\x00\xb0\xc2\xc4\x6c\x7a\x62\x64\x79\xf8\xd0\x44\xaa\x04\xa8\x20\xe1\xca\x89\x21\xd6\x1b\xfd\xaf\x7d\x26\x5f\x98\xcc\x4f\xfc\x04\x26\x86\x76\x9a\x9e\x31\x74\xc7\xbe\x8a\x12\x14\xaf\x94\x80\x6c\x87\x0c\xca\x37\x7b\x47\xa0\x49\x5b\xa6\x9c\x4f\xea\xf6\x3f\x71\x29\x77\x19\x78\xf2\xf2\x4b\x39\x2e\x52\xec\x38\x7f\x7d\x97\xff\xad\x08\x83\x90\xac\x3e\xb8\xf8\x60\xd2\x33\xfe\x48\x39\x29\x9e\x7c\x30\x15\x7c\x99\x75\xb2\x30\xa5\x3d\x5e\xed\xf1\x01\xbc\x7e\x98\xb1\xca\x6c\x49\x02\x93\x3a\xbf\x18\x71\xc6\x65\x05\x92\x0b\xe2\xfa\x99\x92\xe9\x28\xf1\x59\x1b\xef\x3e\x7e\x42\x9e\xbf\x5f\x34\x55\x4f\x11\x6a\x8f\x53\x8a\xa2\xe9\x24\xbb\x06\xbe\xe1\x13\x54\x7f\x23\xf1\x81\xce\x53\xd3\x1a\xb6\x4b\xb4\x53\x39\xe3\x17\x95\x61\x3c\xed\xf8\xd5\x2a\x2e\x1b\x8d\x45\x0f\xa8\xd6\xe3\x5c\x50\xb6\xba\x70\x55\x75\xaa\x45\x92\x80\x9d\x25\xa8\xaa\xa2\x1e\x3b\x1c\x88\x49\x06\x3a\xd6\xb7\xd4\xbb\xaf\xa9\x9b\xad\xf9\x42\xda\xfb\x7c\xc4\x5a\xcc\xc7\x85\xcc\xcb\xcc\x67\x25\x58\xde\x30\xae\x96\x7c\x25\xd5\x1b\x6d\xa6\x13\x75\x3c\xeb\xd2\x78\xeb\x25\x83\xc6\x57\x19\x62\x9f\x32\xdc\x70\x9c\xdf\xd3\x9c\x39\x32\x1b\x4a\x67\xcb\x92\x26\x9d\xcd\x5a\x3b\x65\x1c\xd7\x9d\x76\x6d\xbd\xd7\xcd\x23\x57\xe3\xad\x6e\x2c\x1b\x8b\x48\x26\xad\x7b\x65\x00\x9e\x23\xac\x9e\x27\xc8\xbe\x3a\x1f\xb8\x88\xf4\x57\xf2\xbe\x3b\xa1\x7a\x3a\x21\x3b\x95\x9c\xf1\x62\x89\xc5\xea\x5b\xb3\xaa\xcb\x5e\xe6\xa1\xbc\x41\xef\x50\xb5\x30\xab\xdb\x2b\xef\x99\xe9\xd9\x3b\x7b\x70\x6e\xe7\x0b\xf4\xd4\xce\x81\x96\xe3\x52\xf0\x3c\xf4\xc0\x16\xfe\xcb\xf1\x06\xad\x6e\x5d\xf0\xec\xb8\x9e\x47\xff\xa5\x9e\x15\xcc\xa7\xa3\x67\x52\x0d\x1a\xec\x5c\x35\x70\x72\x6a\x8e\x42\xf2\x4b\x54\x9c\x59\x67\x66\x39\x65\x93\xc4\xcf\x2d\x29\xf0\x1e\x0f\x0b\x5e\xea\xd3\x2d\x4a\x01\x1e\xb8\xcf\xa0\x74\x9c\xb1\x68\xd7\x5b\x94\x71\xb1\x74\x4b\x23\xad\x0d\x12\x2a\x0d\x6b\xa7\x4d\x73\x8d\x79\xa3\x0a\x51\xc7\xc6\x49\x5b\x29\x59\xa8\x96\x34\x30\xf2\x16\x0a\x62\x24\x1d\x22\x25\xb4\x21\xc4\x95\xfb\x78\x20\x8c\x0f\x58\xcc\x91\x18\x7b\xa4\x28\xfa\xcc\x05\x3c\xbb\x36\xae\x19\xde\x7b\x37\xf3\x29\xd2\xcc\x14\x7c\xf1\x7e\x8c\x57\xe4\x3d\xa3\xf8\xd4\x47\x39\xe3\xeb\x52\xf5\x26\xd3\x94\xed\x1c\xff\xca\xb6\x5d\x32\x4d\x69\xf1\x63\xa6\x81\x59\x8b\x7d\x8a\xbb\x18\xd7\x8e\xb7\x19\x66\xc7\x5f\xff\xdd\x0c\x33\xb3\xf1\xca\x2e\x77\xfe\x79\xce\x6a\xb3\x0f\x88\x79\x8f\x48\x64\xa7\x68\x38\x23\xc3\x1d\x9a\x58\x12\xd5\xac\x37\xd1\xf3\xac\x91\x13\x6d\xf3\x11\xa3\xfe\x1e\x5d\xdc\x61\xea\x87\x34\x76\x52\xb5\xa0\xf2\xb3\x22\xbf\x70\x10\xee\x22\xe0\x53\xa3\x0b\x03\xba\x04\x5b\xca\x6e\x3e\x98\xf4\xb6\xf6\xd9\x69\x7d\x23\x4d\xba\x70\x7d\xfe\x9c\xb1\xb1\x63\x29\xbd\x62\xe7\xf8\xe3\x39\xcf\x6c\x81\x71\xe2\x47\xa0\x1d\x4f\xfc\x5e\xa3\x11\x61\x0b\xfa\xec\xb6\xe4\x15\x99\x14\x11\xfd\x94\xb7\x9a\xff\xee\x94\x7f\xd6\xcb\x95\xb7\x74\xa3\x95\x9f\xab\x59\xd3\xa8\x45\xdf\x8f\x08\xf8\x7a\xc6\xb7\xb2\x1c\x7d\xf8\xd1\x5f\xc6\x7c\x83\xd4\x7e\x1d\xa3\x1a\xe0\x29\xf6\x34\xa8\x1a\x55\x9f\x5d\x34\x8b\x86\x13\x41\xd9\xd3\x12\x24\xa9\xec\x91\xf6\x7f\x57\x6d\x65\x3f\xc1\x59\x6f\xbd\x78\x50\x78\xd5\x88\x45\x29\xfd\x58\x21\x7c\xb4\xb8\x59\x75\x84\x0c\x0b\x3d\x36\x9d\x58\xca\x71\xcd\x43\xbb\xfc\x76\x6f\xaf\x59\x54\x4e\x19\xc5\xf4\xd4\x5e\xb0\x29\xb8\x0e\xf7\xdb\x89\x56\xcf\xf5\x7d\xb3\x88\xff\x35\xa6\x39\x63\xce\x5b\x8b\xb7\x78\x2e\xf2\xc7\xd1\x0d\x72\xc8\x92\xc3\xb5\x6e\xda\x6d\x4d\x45\xe5\x5f\x64\x05\x68\x56\x60\xfe\x61\x3c\xfb\x69\xde\xc8\x16\x68\x45\x92\xae\xcb\xee\xd7\xc9\x0d\xf4\x1e\x97\x55\xb4\x13\x7d\x1a\x2d\xb7\xf8\x9e\xe3\xdd\xcc\xbd\xc2\xf6\xf9\x3c\xe7\xdb\xec\x56\xf3\x8d\xcf\xdf\x45\x56\xaf\x6c\x83\xf7\xe8\xac\x12\xe9\xdb\xc8\x18\x66\xaf\xf4\xd6\x0a\x32\xbc\x8e\x1b\x02\x5a\x9c\x2c\x7e\x3d\x97\x58\xb4\x74\xbe\x07\x49\x32\x79\x2e\x7c\xd3\xe2\xdb\xc6\x72\xf6\x67\x50\xbd\x5a\xbf\xdd\x57\xd9\x28\xbf\xe1\xe9\x88\x9b\x4e\xfd\xad\x38\xef\xda\x06\xe3\x33\xa2\x5b\x1d\xbb\x4e\x60\x70\x3f\xe1\x19\x43\x28\x33\x2a\x8d\x30\x56\xb5\xe5\xdc\x25\x7a\xda\x9e\x04\xe5\xbc\xcb\x38\xa4\x49\x1a\xdd\x75\x63\xeb\x1d\xf3\xd9\xff\x0c\xdf\xbb\xc5\x11\xac\xbe\x85\xc9\xe0\x7d\xc5\x97\xb8\xe9\xa3\x3b\xbf\x08\x43\x55\xc3\x05\x9f\x8d\x7c\xc6\x67\x23\x6f\xca\x27\x7c\x36\xca\x4f\xf8\x4c\x7e\xdb\x09\x40\xe0\xfb\x0a\x5b\xbe\xec\x81\xea\xb9\x07\x3a\xfd\x69\xef\x82\xfe\x93\xdd\x4f\x97\x26\xcd\x5b\xd7\x79\x5b\x7b\xc6\xd9\x7f\x86\x0b\xef\xbc\x5c\xad\x8a\x79\xfd\xe6\x79\x96\x08\x69\xdd\x0b\xe4\x62\x5e\x81\x34\xfb\xf0\xf6\x44\xe5\x69\xa7\x17\x6e\xda\x8f\x79\x19\x72\x16\xc8\x56\x17\xea\xbe\x57\x35\x0f\x4c\xa7\x9d\xce\x94\xb7\xef\xd0\x8b\x84\xbb\x18\xa2\x08\xe1\x67\x84\x86\xd1\xf8\xfa\x13\x1c\x93\x2d\xd2\xde\x68\xd8\xaa\x47\xcd\x11\x11\x49\x16\xd6\xa9\x7e\xc6\xeb\x56\xc4\x7c\x5c\x4d\x6a\xbf\xf9\x9f\x16\xa0\x19\x58\x23\x86\xe9\x2f\x88\xb9\x48\xf2\x7f\xcd\x93\x2c\xf7\x25\x68\x1d\x6a\xac\x5c\x52\x0c\x9e\x3b\xd0\xc2\x9c\xfd\x1d\xbb\xff\x8d\x3a\x02\xcd\xf8\x93\x1d\x01\x3d\xa3\xd2\x8a\x55\xdb\xdb\x28\xe9\x11\xd6\xf9\x18\x7e\x7b\xbf\xee\xfd\xce\xf3\x37\x59\x94\xf2\xf9\xc9\xde\xe7\x78\x3d\x4f\x9d\x39\xb2\xaa\xaa\xcc\xec\xee\x4f\x5c\xb2\x32\xf4\x70\xc3\x38\xe3\x30\x62\x2d\x7a\xb8\x3f\x72\x74\x25\x2a\xcb\xe3\x09\xb6\xb9\xb6\xad\xee\xfc\x51\xab\x16\x5f\x7d\x8e\x2c\x8d\x21\xe2\x50\xfb\xbb\x57\x15\xed\x6f\xe2\x77\x79\xa7\x13\x8d\xef\x9e\x98\xbd\xb8\x24\xe1\x91\xeb\xb2\xf7\x24\x16\x97\x3c\xcf\x8e\x18\xae\x9c\x04\x3a\xf7\xd3\x1e\xd9\xc2\xbc\xe3\xec\x0f\x88\x14\xe2\x8d\xac\xb0\x66\xe1\x8d\xac\xe1\xd3\x0e\x93\xdf\x0c\x39\xc0\xb2\xad\xdc\x8f\x6f\x7b\x1c\xbf\x87\x6c\x80\x48\x13\xf7\x7d\xbc\xed\x0a\xeb\xb6\x2b\x04\x0d\x43\xe8\xb7\xfe\xf4\x44\x45\xc7\xdb\xae\x47\x0e\x7a\xa0\x1a\x38\x44\xf3\xbd\xf2\x7e\x41\x1c\x2b\xe3\x7b\x8f\x1c\x32\x2f\xe4\x73\x7f\xeb\x60\xb5\x19\xbf\x41\x20\xbc\x10\x08\x61\xd4\xbd\x3e\xff\x75\x15\x81\x4c\xa7\xfb\x4b\x64\x6a\x96\x21\x8f\xf8\xd7\x46\x79\x28\x9e\x71\xc6\xbb\xfe\xe1\xac\x2a\x3f\x45\xdd\x59\x71\xae\xfe\xfe\xa5\x67\x8d\x1c\x07\xf3\xb9\x3f\x8c\x9c\x2e\xfd\x61\x5f\x21\x88\xb3\xd7\x8b\xac\xdb\xec\xef\xcd\xae\xf1\xde\x03\x46\xb6\x0c\x3f\xfb\xc6\xc8\x25\x7c\xee\x1b\xe3\xf4\x71\xb9\xe6\x6f\xfe\xb1\xc6\x33\xfa\x2d\x7c\xdf\xe3\xe4\x37\xd9\xf2\x9b\x9e\x2e\x06\xc8\xbf\xe8\xe9\xfe\xd4\x8f\x36\xa9\x03\xd5\x73\xcf\x14\xc3\x26\xff\x7f\x3d\x53\x0c\xf5\xf2\xfe\xd2\x6b\xcf\x14\xc3\x86\xdf\xf6\x4c\xef\x3c\xf0\x1f\xef\x99\x3e\xab\x88\x6b\x3d\xb4\xe3\x3c\xa1\x72\x87\xf8\x51\x38\xbd\x43\xfc\x28\x41\xbf\x41\xfc\x68\x31\xea\x1b\xc4\x0f\x3b\xe2\x7f\x46\xf8\x5f\x47\x35\x39\xbd\xff\x01\x20\xbf\xef\x80\x5e\xa2\xda\xcd\x2d\xeb\x53\x56\x8f\xd6\xae\xc3\xad\x9d\x75\x65\xa3\x2d\x3d\x35\xbb\xb4\x1a\xe3\x7e\x6f\x84\x28\x3d\x1d\x35\xbf\xf0\x82\x8c\x79\xbf\x79\xc8\xac\x0a\x81\x56\x2e\xf7\xf5\x7e\xeb\x3f\xfb\x1c\xab\x4b\x31\x9f\xc1\xd7\xf5\x95\x23\x56\x11\xb8\xb7\xd2\x0a\x5b\xe3\x40\xad\x82\x09\xb6\x75\xc6\xca\xb5\xe3\xa6\x4c\x79\xd3\xd1\x53\x26\xca\x62\x85\x0c\x75\x6a\x21\x55\xde\x12\xa5\x4d\x1a\x4a\x47\x6c\x3d\xd0\xde\x6b\xf0\xae\x06\x3d\xf3\xe7\x7e\xef\x7e\x7a\x23\x80\xfc\x6d\x97\x72\xb4\xa2\xbd\x47\x60\x4f\x52\xdb\xef\x7c\xfb\x42\x56\x9f\xad\xe9\x0e\x0d\x04\xda\x3d\xc6\xfb\x4f\xc9\x23\x88\x5b\xdb\xf5\x3e\x7e\xbf\x3d\xdf\xef\xa2\xff\x2d\x5a\x7a\x44\x9c\xbb\xfc\x7b\xbd\x0f\x78\x73\x73\x66\x58\x0b\xe3\xa3\x9f\xb3\x72\xcb\x03\xd5\x88\x5c\xa2\xbe\x67\xa0\x63\xc6\xbe\x74\x41\x97\x05\x26\x59\xef\xad\x4c\x5b\x86\xad\xc9\x8e\xe5\x26\x67\x5c\x11\x9f\x35\xbc\x7a\x6f\xe3\xf9\x1e\xb0\xd7\x9c\x6e\xc1\xfb\xd3\xe5\x35\x29\x95\x39\x6e\xe8\xcb\x74\xf1\x88\x61\x3f\x7a\xb5\xbf\xad\x41\xe8\x7d\x82\xdc\x9e\x54\x5e\x78\x20\xe5\x55\x01\xa5\xda\x3c\xf3\xf9\x5b\x1b\xba\xc7\xfd\x54\xd7\xfe\x10\x66\x45\x74\xc3\xed\x5c\xf3\x58\xd1\x78\x5f\x91\xbd\xa7\x73\x3c\x39\xba\xbc\x8b\x32\x51\xa4\x4e\x84\xb9\x3a\x5b\x86\xbd\x44\x14\x9d\x26\x2e\x0f\x49\xc7\x0e\x27\xcd\x6e\x9a\x3f\xf1\xae\x94\x84\xe8\xbe\x41\x66\x0d\x96\x75\x2d\x17\xaa\x78\xdf\xb3\x1a\x87\xbb\x3e\x9f\xef\xc3\x2a\x79\x5f\x75\x62\xd5\xd5\x61\x8d\x88\x8a\x9e\xd4\x8a\x01\x0b\x4a\x25\x95\x44\x0c\xa2\x04\xba\xa5\xd2\x23\x6a\xa0\x92\x62\x1b\xd8\x61\x04\xdc\x58\xb0\x57\x02\x6a\xda\x5b\x93\x31\xb0\x6b\x49\xd0\xb8\x17\x89\xa9\xb7\x4e\x61\x2b\xad\xc6\x4e\xc3\x98\xfb\x4f\x00\x00\x00\xff\xff\x2f\x40\x6c\xd8\xbc\x30\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledOwnedAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x51\xca\x83\x30\x10\x04\xe0\xbb\xcc\x73\x4e\x90\x3b\xfc\xfc\x07\x10\x29\xab\xae\x10\xb0\x1b\x49\x26\x15\x11\xef\x5e\x5a\xaa\x15\xda\x52\xe8\xeb\x32\xec\x7c\x53\x2d\x68\xa3\x65\x8a\x11\xbe\x97\x21\xab\x43\xb0\xb1\x30\xc3\x57\x0b\x4c\xce\x0a\x8f\x93\xe9\xf4\x3f\x99\x26\x38\x70\x1e\x6f\x27\xe9\xba\xa4\x39\x63\xad\xdd\x96\xca\xca\x2d\x14\x0b\x1f\x3f\x6a\x87\x51\x66\x69\x06\xdd\xff\x67\x0a\xf5\xaf\x50\x9a\x30\x04\xce\xf0\xb0\x68\x5b\x68\x2f\xe8\x8b\xb5\x0c\xd1\xb0\xba\xa3\x91\xa9\x1c\x89\xcf\xf6\xf8\x52\xbd\xf3\xdf\xab\xbf\xb3\x2e\x41\xa7\x0f\xa0\x23\xe0\xb7\x7d\xf7\x49\xa9\xb4\x8c\x09\x6b\x7d\x0d\x00\x00\xff\xff\x90\xea\x6f\x4c\x88\x01\x00\x00")

func compiledOwnedAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledOwnedAbi,
		"compiled/Owned.abi",
	)
}

func compiledOwnedAbi() (*asset, error) {
	bytes, err := compiledOwnedAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Owned.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledOwnedBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x51\x72\x04\x21\x08\x44\xaf\xd4\x2d\x02\x72\x1c\xd4\xf1\xfe\x47\x48\xe9\x24\x5b\x95\xfc\x64\x67\xf1\xc7\xa2\xe0\x35\xdd\x86\xfd\x2a\xb4\x18\x50\xc5\x08\x23\x50\xbb\xba\xc9\xfa\x2e\x1f\x20\x3e\x2c\x03\x20\x8a\x4a\x33\xa1\xe4\xaa\x10\x6d\x64\xdd\x2a\x0a\xf5\x06\x93\x36\x53\x47\xd7\x7e\x77\xfd\x52\xd7\xbe\xf7\x1a\xd6\xd4\x2e\x95\x7a\xa6\xf7\x4d\xaf\xee\x99\x1c\xfe\xba\xf1\xbf\x3a\xee\x94\xb6\xf7\x7a\xaa\x69\xdf\xc4\x1f\x76\x8b\xbf\xec\xa0\x11\xe4\xb5\x27\x4f\x3e\x7c\x5f\x2b\x10\xa4\x35\xee\x4c\x0b\xc0\x7b\xbf\x21\x08\x09\x2c\xb9\xdd\x69\x15\x79\xc2\x6c\xa4\x6d\xee\x9d\xd2\x55\x7e\x5d\x7c\x7e\x5a\xdf\xe7\x31\x68\x0f\xd4\x4b\x20\xca\xd6\x3f\xde\x3c\xa0\x7a\x27\x83\x67\xaa\x3b\x15\x03\x92\xa6\x56\x3c\x3d\xbd\x08\xb4\x15\x30\x33\xac\x27\x13\x14\x89\x35\x30\x24\xba\x0e\x87\x69\x19\x65\xae\x11\x61\x22\x96\x62\x62\x21\x3d\xae\x3a\x3d\xc7\x9a\x2b\x21\xd3\x25\x81\x12\x5f\x01\x00\x00\xff\xff\x68\x3c\x60\x89\xcc\x02\x00\x00")

func compiledOwnedBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledOwnedBinRuntime,
		"compiled/Owned.bin-runtime",
	)
}

func compiledOwnedBinRuntime() (*asset, error) {
	bytes, err := compiledOwnedBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Owned.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xcf\x6a\xc3\x30\x0c\x87\xdf\x45\x67\x9f\x06\xdb\xc1\x6f\x30\xc6\x60\xb0\x63\x29\x43\x6d\xd4\x22\xe6\xca\x21\x92\xb3\x79\x25\xef\x3e\x5a\x9c\xa4\x0b\xed\x5a\xf6\x87\x1e\x13\xe9\xa7\x7c\xf9\xa4\xd9\x16\x96\x51\xd4\x50\x0c\xbc\x35\x89\x1c\xb0\xd4\xc9\x14\xfc\x6c\x0b\x82\x1b\x02\x0f\x2f\xaf\x94\xc1\x81\xe5\x7a\xf7\xa4\xd6\xb0\xac\xa1\x9b\xbb\xbe\xbe\x26\x03\x07\x31\xd9\x34\x38\x86\x12\x8b\xdd\xdc\xde\xed\x53\x35\x66\x5c\x04\x02\xbf\xc2\xa0\xe4\x40\x0d\x8d\x1e\x93\xe1\x82\x03\x5b\x06\x0f\x2d\xd3\xdb\x98\x5d\x25\x59\x1a\x47\x81\xce\x1d\xd2\x96\xf4\xa5\xb8\x6e\xac\xb7\x18\x12\x1d\x67\x2b\x2d\x3a\xf9\xa3\x8b\xa8\x25\x4a\xdf\xf4\x73\xf6\x36\xda\x0e\x77\x18\x80\x55\xd5\x90\xea\x17\xb8\xac\xf7\xc2\xc6\x18\xf8\x83\xae\x84\xf9\x07\x8a\xb3\x3e\x35\xf4\xdf\xa2\x27\x27\x3d\x7e\x7e\xf0\xfc\xed\xd9\x1e\xda\xff\xd5\xd9\xa2\x44\xc9\x9b\x98\xf4\x98\x54\x96\x8a\xde\xa9\xea\x69\x7b\x87\xe5\xf5\xc3\x09\xd5\x43\xaa\x0c\x3c\xb7\x9a\x53\xfd\xe7\x57\xf5\xbc\x5f\x52\xa9\x53\x4b\x62\xd0\xcd\x3f\x03\x00\x00\xff\xff\x48\x39\xff\xdd\x3a\x04\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x5b\x92\xdc\x36\x0c\xbc\x52\xe3\x49\xe0\x38\x14\x49\xdd\xff\x08\x29\x50\xf3\xdc\x71\x92\xb5\x53\x71\x59\xfa\x18\x2e\x44\x82\xdd\x0d\x34\xd6\x51\xaf\xc2\xd8\x01\x15\x27\x38\x01\x3e\xac\xb9\x9c\xb7\xa7\x0d\x10\x7e\xf1\x71\x00\x62\x50\x72\x17\x4f\x59\x23\x6c\x05\x91\xd6\x2d\x8d\xac\x05\x5c\xa2\x2b\xaf\x63\xe5\x15\x9d\x7a\x45\x0f\x49\xf6\x23\xfa\x8e\x12\xe7\x15\x1d\xe3\x68\x79\x34\xbe\xa2\x1a\x57\xf4\x1c\x8b\xc6\x18\xb7\xbd\x79\x58\xb3\xa3\x6e\x0e\x9c\xd3\x0e\x51\xb2\x7d\x5f\xb1\x7a\x44\x2b\x32\x36\x6b\x07\x6b\x90\x58\x50\xd4\x69\x84\xa0\xfe\x82\x83\xe1\xa0\x33\x18\x14\x94\x80\x06\x81\x41\x5b\xaf\xda\x47\xb7\x35\xd7\x49\xe3\xe4\xa4\xdc\xa7\x42\x41\x21\x21\x81\xe0\x50\x69\x86\xd4\x74\x2b\x6d\x69\xf4\x34\xc3\xcb\xeb\x85\xf5\x9e\xb1\xea\xc0\xb8\xdf\x11\x48\x82\x24\x4e\x79\xb2\x98\xe7\x17\x16\xc4\xed\xf7\xb2\x30\xa4\x88\xa5\x6c\x3e\x2c\x99\xfc\x64\x02\x3c\x90\x92\xe8\x0f\x91\x92\xa3\x57\x5f\x30\x3a\x64\x77\x9d\x91\x3b\x41\x8e\x59\x19\xee\xa7\x4d\xfe\x28\x9e\x8a\xf1\xca\xf3\x8e\xb2\xfb\x57\x94\x7d\xd5\xee\x8c\x67\x5d\xbf\x72\x4e\x24\x91\xff\x53\xad\xfd\x72\x0e\x05\xdf\xbf\x05\xc7\x66\x71\x9d\x48\x04\x0a\x71\xed\x64\x84\x6c\xd7\xd2\xb9\xca\x0d\x46\xc1\x95\x99\x4e\xca\x44\x32\x28\xa9\x76\x25\xc5\x5e\x83\x6a\xef\x3c\x2f\x7c\xc5\x7c\xe7\x2c\xeb\x97\xcb\x3b\x24\x40\x19\x6c\x1b\x63\xe8\xfe\x45\x30\xb5\x30\xe3\xd7\xce\x4d\x58\x61\xa1\x6b\xfd\x77\x7c\x18\xa6\xb5\xb3\xd4\xbe\x77\x3b\x60\x2a\xf2\xa9\x4b\x10\x79\x69\xb3\x7d\xcc\xf6\xd6\x3f\x81\x3b\xda\x6f\x2b\xc2\xd1\xbe\xad\x08\x7b\xfc\xdf\x8a\x54\x24\x71\xd3\xc4\x82\x7e\x86\xc9\x1a\xdf\x67\x32\xe6\xcf\x30\xa1\x56\x99\xee\x3c\xaa\x4a\x95\xa7\x7a\xbd\xf0\x5d\x5c\x5e\xab\xd9\xce\x85\xd3\xc7\x38\x68\x44\x9f\xa3\x37\x4f\xed\x03\x9d\x55\x5a\x33\x12\x5b\xc3\x26\x37\x19\x47\x63\x89\x5c\x73\x9d\x6c\x12\xee\x2b\x2c\x65\xf0\xe0\x62\xf7\xe0\x7e\x63\x1d\xf2\x54\x2b\x38\x08\x52\x4c\x43\xb7\x57\xe9\xf9\xad\xf0\xfc\x48\xad\xdd\x53\x47\x65\xa9\xd1\x51\xd3\xa4\x6d\x37\x94\x2e\x56\xd9\xeb\xf7\x5e\x0d\x82\xb8\x97\x46\xaf\x75\xbb\x26\x44\xee\x19\x52\xf5\xbd\xb2\xf4\xe3\x96\x45\xe2\xe6\xe4\x4f\x4d\xab\x08\xef\x08\x2b\x73\xcd\x8d\xeb\x7d\xf7\x43\xe7\xc7\x0c\xc1\x57\x07\x90\x7f\xba\xa2\xdc\x40\x76\xa1\x99\xf3\x6d\xda\xec\x95\x69\x7b\xfc\xa7\xfe\xb7\xa7\x90\x7e\xb8\x8e\xab\xfe\xe5\xbb\x3d\x97\x5a\xc2\xec\x97\xd0\x29\x8f\xff\xe8\x57\xb5\xf3\xdb\x5d\xae\x8a\xdf\xeb\x57\x7b\x9b\x5e\x9f\x3a\x04\x99\x03\x9d\xdc\x9c\x5b\x6f\xbd\xb1\xc0\x82\xa1\x6c\x06\x5f\x53\xda\x48\x9b\x47\x79\x63\x36\x6b\x74\x68\x17\x5d\xd6\xcf\xae\xca\xdd\x26\xe9\x01\xcd\x15\x09\x61\xf3\xc9\x73\xd1\xea\xc1\x0d\xe0\xfc\x2b\x00\x00\xff\xff\x04\xed\x9e\x58\xa6\x09\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProposersetAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledProposersetAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledProposersetAbi,
		"compiled/ProposerSet.abi",
	)
}

func compiledProposersetAbi() (*asset, error) {
	bytes, err := compiledProposersetAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ProposerSet.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProposersetBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc1\x0b\x11\xc4\x40\x08\x03\x50\x4b\x21\x29\x2c\x2b\x87\xcf\xd5\xbf\x84\x9b\xce\x0b\x7c\x1e\x38\x03\x40\xe2\x5d\xa0\x2c\x3c\x78\xea\xd4\xa1\xe0\x49\x68\x7b\xd7\x95\x59\xfd\x8b\x4e\x89\x76\x79\xf8\x92\x1c\x4d\x8d\x23\xb5\x9e\xa6\xb1\xea\x35\xd8\xdc\x8a\xb1\x71\x5d\x3d\xd3\x0e\xf0\xfe\x03\x00\x00\xff\xff\x81\x85\xe2\xc0\x6a\x00\x00\x00")

func compiledProposersetBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledProposersetBinRuntime,
		"compiled/ProposerSet.bin-runtime",
	)
}

func compiledProposersetBinRuntime() (*asset, error) {
	bytes, err := compiledProposersetBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ProposerSet.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledSafemathAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledSafemathAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledSafemathAbi,
		"compiled/SafeMath.abi",
	)
}

func compiledSafemathAbi() (*asset, error) {
	bytes, err := compiledSafemathAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/SafeMath.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledSafemathBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xca\xc1\x11\xc0\x20\x08\x04\xc0\x96\x0e\x8c\xa0\xe5\x00\x07\xfd\x97\x90\x71\xf6\xbb\x86\xe7\xc3\x56\x03\x70\x30\x04\x42\x6c\x9b\x7a\x78\xb8\x2e\xec\xa3\xc8\xb8\xc3\x14\x37\x2d\x9c\xac\xd6\xeb\xfc\x22\xf3\x54\x9b\x89\x48\xb2\x9d\xcd\x75\xf1\x56\x0a\x77\xc8\x8a\x59\x35\xac\x62\x36\xa0\xf7\x0f\x00\x00\xff\xff\x84\x1f\x85\x61\x6a\x00\x00\x00")

func compiledSafemathBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledSafemathBinRuntime,
		"compiled/SafeMath.bin-runtime",
	)
}

func compiledSafemathBinRuntime() (*asset, error) {
	bytes, err := compiledSafemathBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/SafeMath.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x3f\x4f\xc3\x30\x10\xc5\xbf\xcb\xcd\x99\x90\x60\xc8\xc6\xc2\x86\x18\x60\xab\x2a\x74\x49\x2e\xc8\x92\x73\x67\xd9\xe7\x94\xa8\xea\x77\x47\x2d\x69\x5c\x41\xfe\x54\x05\x04\xac\xf1\x3b\xdf\x7b\xfe\x5d\xec\xd5\x16\x4a\xe1\xa0\xc8\x0a\x79\x8d\x36\x50\x06\x86\x5d\xd4\x00\xf9\x6a\x0b\x8c\x0d\x41\x0e\xcf\xc1\x11\x57\xe4\x21\x03\xed\xdc\xfe\x0b\x56\x95\xa7\x10\x60\x97\x25\x51\x8b\x36\x52\x92\x44\xc3\x7a\x75\x7d\x03\xbb\x75\x76\x94\xa0\x73\x5e\xda\xbd\x46\xa2\x7e\x6c\x12\x62\x59\xee\xb7\x1c\x36\x28\x44\xec\xa1\xda\x61\x87\x85\xa5\xc1\x60\x50\x54\xba\x8f\x8a\x85\xb1\x46\x3b\xc8\x81\x85\x8f\xa2\xa1\xbc\x8e\x5c\xaa\x11\x3e\x78\x4c\x21\xd5\xc7\xd3\x8c\xc9\x9c\x8a\xa2\x7d\x8c\xce\xd9\x6e\xca\x60\xbf\x36\x12\x70\xd9\x62\x6b\x68\xb3\x68\x6e\x9a\x40\xed\xa5\x99\x3f\x7e\x95\xaf\xe2\x51\x8f\x1c\x6a\xf2\x77\xef\xbd\xfe\x0c\xa3\x94\x41\x36\x3c\x3a\x85\x29\x43\x81\x16\xb9\xa4\x87\x7a\x3c\x40\xbf\xfc\x4b\x10\xbf\x0f\xd1\xff\xc2\x93\x9d\x73\x93\x9c\x5c\x13\xd6\xca\xa6\xc7\x34\x92\xd2\x53\x83\x86\x0d\xbf\xfc\x00\x45\x64\xe1\xae\x91\x18\xc6\x30\x1a\xae\xe8\x95\xaa\xe3\x01\x2c\xff\x9a\x13\x05\x53\x63\x30\xc8\xfb\xd6\xe7\x8f\xc5\x53\x1a\x8b\x5e\x44\x2d\xb1\x5e\x1c\x69\x06\xe4\x44\xc5\xec\x0b\x71\x79\xb0\xdb\xc3\x8b\x81\xf6\x53\xb0\xf5\x5b\x00\x00\x00\xff\xff\x73\x6f\x06\xdc\xba\x06\x00\x00")

func compiledTokenAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenAbi,
		"compiled/Token.abi",
	)
}

func compiledTokenAbi() (*asset, error) {
	bytes, err := compiledTokenAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledTokenBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenBinRuntime,
		"compiled/Token.bin-runtime",
	)
}

func compiledTokenBinRuntime() (*asset, error) {
	bytes, err := compiledTokenBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledVotingAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledVotingAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledVotingAbi,
		"compiled/Voting.abi",
	)
}

func compiledVotingAbi() (*asset, error) {
	bytes, err := compiledVotingAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Voting.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledVotingBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xca\xdb\x11\xc0\x20\x08\x04\xc0\x96\x2e\x3c\x4e\x28\x07\x41\xfb\x2f\x21\xe3\xec\xef\x12\x8f\xc1\x85\x00\x02\x77\x80\xfa\xe8\x94\x55\xab\x96\x28\x3c\x04\x31\xea\x4b\x3a\x79\x92\xcd\xa0\xdd\x29\xde\x9b\xd1\xdf\x51\xbc\xb8\xd3\x66\x6b\xeb\xa9\x54\x31\x1e\xa7\x9b\x8e\xcc\xb4\xed\x31\x40\xf2\x0f\x00\x00\xff\xff\x56\x21\x80\x23\x6a\x00\x00\x00")

func compiledVotingBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledVotingBinRuntime,
		"compiled/Voting.bin-runtime",
	)
}

func compiledVotingBinRuntime() (*asset, error) {
	bytes, err := compiledVotingBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Voting.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/ERC223Receiver.abi": compiledErc223receiverAbi,
	"compiled/ERC223Receiver.bin-runtime": compiledErc223receiverBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/Owned.abi": compiledOwnedAbi,
	"compiled/Owned.bin-runtime": compiledOwnedBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ProposerSet.abi": compiledProposersetAbi,
	"compiled/ProposerSet.bin-runtime": compiledProposersetBinRuntime,
	"compiled/SafeMath.abi": compiledSafemathAbi,
	"compiled/SafeMath.bin-runtime": compiledSafemathBinRuntime,
	"compiled/Token.abi": compiledTokenAbi,
	"compiled/Token.bin-runtime": compiledTokenBinRuntime,
	"compiled/Voting.abi": compiledVotingAbi,
	"compiled/Voting.bin-runtime": compiledVotingBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"ERC223Receiver.abi": &bintree{compiledErc223receiverAbi, map[string]*bintree{}},
		"ERC223Receiver.bin-runtime": &bintree{compiledErc223receiverBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"Owned.abi": &bintree{compiledOwnedAbi, map[string]*bintree{}},
		"Owned.bin-runtime": &bintree{compiledOwnedBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ProposerSet.abi": &bintree{compiledProposersetAbi, map[string]*bintree{}},
		"ProposerSet.bin-runtime": &bintree{compiledProposersetBinRuntime, map[string]*bintree{}},
		"SafeMath.abi": &bintree{compiledSafemathAbi, map[string]*bintree{}},
		"SafeMath.bin-runtime": &bintree{compiledSafemathBinRuntime, map[string]*bintree{}},
		"Token.abi": &bintree{compiledTokenAbi, map[string]*bintree{}},
		"Token.bin-runtime": &bintree{compiledTokenBinRuntime, map[string]*bintree{}},
		"Voting.abi": &bintree{compiledVotingAbi, map[string]*bintree{}},
		"Voting.bin-runtime": &bintree{compiledVotingBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

