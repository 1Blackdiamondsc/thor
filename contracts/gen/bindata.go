// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Constants.abi
// compiled/Constants.bin-runtime
// compiled/ERC223Receiver.abi
// compiled/ERC223Receiver.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/Owned.abi
// compiled/Owned.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// compiled/ProposerSet.abi
// compiled/ProposerSet.bin-runtime
// compiled/SafeMath.abi
// compiled/SafeMath.bin-runtime
// compiled/Token.abi
// compiled/Token.bin-runtime
// compiled/Voting.abi
// compiled/Voting.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x6b\x02\x41\x0c\xfd\x2f\x39\xef\x49\x6f\x7b\x2b\xf4\xd2\x43\xa1\x97\x9e\x44\x24\x3a\xb1\x0d\xac\x99\x61\x92\xb1\x9d\x8a\xff\xbd\xac\xac\x8e\x5a\xb5\x5f\x5b\xa4\xc7\x81\x97\xe4\xbd\x37\x8f\x37\x5a\xc1\xcc\x8b\x1a\x8a\x41\x6d\x31\x51\x05\x2c\x21\x99\x42\x3d\x5a\x81\xe0\x82\xa0\x86\x09\x3a\x17\xa1\x02\xcb\xa1\x7d\xb6\x2f\x52\x85\xf5\xb8\xda\x22\x42\xf4\xc1\x2b\xb5\x20\x9f\xec\x78\x5e\x0d\x2d\x69\x59\x90\x58\x6c\x38\x80\x75\xb5\x43\xb0\x23\x31\xb6\x5c\x30\x6a\x91\xe5\x69\x73\x23\x60\xc6\x69\x43\x50\xcf\xb1\x51\xaa\x36\xeb\xe8\x3e\x19\x4e\xb9\x69\x67\x6a\x58\x32\xbd\x94\xd1\x79\x92\x99\xb1\x97\xcd\x81\xa2\xae\x9b\xfe\x89\x3c\x47\x98\xec\xd9\x47\x7e\xa3\x03\x85\x5f\x22\x27\x5e\xb6\xa0\xde\x29\x16\x07\x27\x17\x2d\xec\x40\xd7\x56\x41\x32\xf3\x8e\x5c\xd9\x30\xcd\x46\x3a\x1c\x8c\xc6\xfb\x2c\x35\xeb\x63\x70\x68\xff\xdb\x6b\xcd\xfa\x10\x49\xc9\xae\xa4\x62\xe9\xad\x65\x74\x29\xd6\x9a\xf5\x4e\xd8\x18\x9b\xbf\x8e\xc4\x51\xb3\x7c\x2c\x0e\x3d\xdd\x1c\xe7\x92\xd2\x53\x25\x9c\xa5\xb5\x33\xef\x22\xa7\x7d\x4b\x7f\xc5\x08\xc5\x4b\x5e\xf8\xa4\xa7\x3e\x94\xc5\xd1\x2b\xb9\x2d\xdb\xcf\x53\xba\x1b\xe8\x76\x7d\x27\xb5\x37\x7b\x0d\xd1\x81\x68\x49\x62\x7d\xd3\x2c\x17\x6f\x0f\xba\xf5\xf0\xe6\xf8\x3d\x00\x00\xff\xff\xcf\x89\x9f\xfd\x9f\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6f\xb6\xdb\xbe\x0a\xdc\x12\x20\x81\x60\x39\xb2\x6c\xed\x7f\x09\xef\x00\x72\xe2\xc4\xb9\x7f\xda\xbe\x0f\xbf\xe4\xdc\x36\x91\x6d\x04\xc3\x30\xa0\x08\xf8\xbb\x02\x93\x00\xd4\x22\x08\x82\x00\xba\x73\x93\x32\xd7\xab\x0d\x40\xf8\xcb\x97\x00\x40\x61\xa8\x28\x52\x80\xeb\xd4\xb1\x4d\x45\xac\xbe\x8b\x11\x37\x05\x29\xd4\x86\xb5\xd9\x39\x56\xb1\x70\xae\xf2\x01\x43\x77\xd5\x5c\x65\xc9\x55\xdd\x66\xdd\xc7\xd8\x73\x75\x5b\xf7\xf6\xb6\x19\x0d\xb1\x58\x25\xa8\xb9\xba\x15\x23\xd9\xb4\xe7\xaa\x94\x5c\x1d\x7d\x9b\x0a\x96\x76\x49\x97\x0f\x73\x1c\x38\xc6\x58\xf7\x1e\xca\x8d\x37\xf7\x5d\x61\xee\xbc\x95\x8a\x1c\x1e\x3b\x2e\x8f\x55\x5f\xd9\x50\x00\x50\xa0\x7b\xa4\x04\x1d\x4a\xe0\xc8\x28\x82\x50\xb0\xb1\xb8\x9d\x0a\x8c\x4f\x3c\xb5\xa0\x28\x3a\xe2\x15\x04\x08\x94\x00\x15\x7d\xc5\xf2\x73\x89\x6f\x98\xf7\x10\x00\x1a\x32\x28\x30\x1a\xac\xef\xa0\xa0\x45\x7d\x2f\xe0\xcd\xef\x0f\x88\x10\x60\x9a\xc7\xe3\x56\xd8\xed\xf8\xff\xcb\x86\x5f\x3d\x1c\xc7\x8d\x21\xdf\x16\x7f\x8a\x10\x76\x71\xa2\x68\x5a\x41\x92\x65\xa5\xf8\xae\x1e\xa1\xef\x45\x00\x4e\x10\xe7\x42\x87\x82\x76\x46\x71\x7a\xe8\x96\xad\x9c\xd6\x33\x6a\x05\x43\x28\x06\xb3\x3c\x50\xc4\x0a\x6f\x28\x22\xd7\xef\x50\x9c\xc3\xbd\xf6\x48\x4f\x0b\x82\x1f\x2d\x54\x85\xc2\xef\x96\x50\x3c\xba\x5a\x05\x28\xae\x9f\x11\x6b\x71\xae\x69\x20\xea\xd1\x67\x16\xcc\xad\x38\x87\x30\xfd\xcf\xbb\xb3\x42\x56\x8e\xc8\x56\x1e\xb4\x46\xae\x8a\x23\xa5\xb5\x34\x06\xab\x26\xec\x15\x54\x75\x37\x3e\x91\x88\xb7\x3c\xbd\x1f\x9f\xe3\x4f\x0f\xdd\x27\xbc\x7b\x18\x6b\x9f\xbd\x02\x2b\xe9\x93\x5e\x18\x93\xec\x20\x00\xfa\xe0\x1d\x77\xfa\xd2\x3b\x82\xf9\x1f\xc7\x56\x68\xfb\xda\x7b\x39\xfe\x88\x5b\xd2\xcb\xf5\x69\x7d\xaf\x6f\x32\x5f\x97\x49\x97\x3a\x76\xef\x40\xc9\x7d\xce\x08\x7e\x53\xaf\x8f\x5c\x7c\xaa\x5a\xda\xeb\x37\x55\x4b\xdb\x78\xaf\x5a\x40\xa3\x1f\xaa\x8c\x66\x79\x8f\x65\xfa\xbf\x8d\xf1\x1a\xcb\x2b\x32\x06\x86\xd7\xaa\xbe\x5b\x77\x8b\x5e\x93\xe4\x9e\xd9\x98\x61\x0b\xa1\x14\x0a\x95\xa8\x4f\x95\xf3\xbd\x04\x50\x72\xb7\x40\x1d\xf4\x03\x83\xee\x2b\x17\x1c\xe1\xea\x0b\x24\xf2\x90\x19\xd5\xf0\xde\xa5\x60\x69\x12\x2d\x6b\x14\x3c\x0b\xde\xc1\xca\x96\x21\x54\x78\x89\xe9\xad\x82\xee\xf5\x43\xbf\xdd\x27\xd6\xcb\x31\xa2\x8f\xb8\x8a\x06\x3e\xc3\x15\x2a\xee\xf7\x9c\x73\xf5\xfd\xb5\x30\x19\x9e\x0c\x59\x4f\x09\x6f\x9e\xef\xe4\x3d\x40\xee\x9f\xb1\x9a\xb3\x04\xb9\x66\x67\x70\x2f\x1e\x4c\x42\xb7\x8a\x61\x63\x4c\x6e\xea\xbe\x94\xa5\xe1\x61\xed\xc9\x97\xa5\xf3\xf8\xf2\x97\x39\x01\xae\xa5\xdc\x39\xa0\x88\xe2\x3c\x88\x5e\x58\xb1\xbd\xf1\xa8\x92\x06\x2e\xf4\x9a\xeb\xad\x65\xae\x91\x03\x91\x5a\x5e\xf9\xf7\xb6\x8b\xef\xe1\x57\xcf\x0c\x43\xa8\x55\xf6\x44\x45\x0a\x0d\xe5\x1a\x28\x59\x76\x2d\x85\x3b\x53\xda\x6c\x76\xec\x47\xd1\x62\x63\x6f\xbd\xed\xba\xed\xad\x1d\xd6\x0e\x1e\x6a\x2e\x0c\xf3\xa8\xb3\xc9\xd8\xb7\xed\xe8\xbd\x48\x95\x2a\x07\x69\x57\x31\xee\x4d\xb5\x9e\x75\x70\xe5\x79\xa7\xd4\x94\xdf\x22\xd4\xf5\x2d\x52\x8f\x09\x23\x3b\x75\x93\x77\xf4\x46\x5b\xfd\xf4\x8a\x9e\x76\x7c\x45\x6f\xa7\x6f\xd1\xa3\xaf\xd1\xb3\xec\x16\x1e\x15\x42\x9d\x9b\x3d\x39\xe7\xa8\x76\xd2\x54\x13\xbd\x55\x7f\xe0\x79\x74\xa4\x9d\x4b\xb3\xbd\x57\xdb\x58\xb0\xb4\x42\x6d\x1e\xa5\xf6\x71\x8c\x43\xb9\x1f\xa6\x7d\x1c\x73\xe8\x31\xa6\x1d\x3a\x67\x11\x56\x02\x82\x7d\x53\x56\xfa\x17\x95\xfc\x42\x1f\x59\xbe\xd3\x47\xae\x37\x7d\xfc\x38\xd5\xb0\xe1\x5f\x4f\x35\x1f\xd5\xb6\xd3\xd9\x7d\x62\xca\xfd\xc0\xcf\x3b\x77\x9c\x33\x2b\xc7\x3c\xea\x35\xc7\x0c\x2b\xee\xc0\x68\x45\x2e\xd4\x42\x47\x04\x9d\x25\x3c\x29\x7a\xe2\xba\xc3\x57\x8e\xc2\x6d\x1e\xbc\xbd\x77\x1a\x47\xca\xab\xb2\x1e\x4b\xa1\x9d\x64\x55\xeb\xe5\x59\x01\xfc\xf6\x59\xc3\xba\x62\x4b\x75\xba\xf2\xd5\x68\x3e\x94\x1d\x33\x0b\x43\x1f\x59\xf0\x8e\xfa\xa7\x68\x48\xdd\xbe\xac\x22\x61\x7b\xab\x22\x91\xfe\x8b\x2a\x92\xc6\xff\x97\x2a\x12\x3b\xbe\xaa\xa2\xbf\x8f\x77\xbc\xeb\x63\x74\xb6\xf6\x88\xe7\xa7\x97\x33\xf5\xa6\x4c\x64\x60\xe4\xda\x14\x9d\xbc\x19\x30\x9f\xf9\x9f\xfd\xd2\xb1\x63\x16\xf1\xfe\x96\x55\xfa\xe5\x64\xf9\x45\x5f\x5c\x15\xd5\x6a\xa8\x5b\x4c\x36\xbf\xe8\x61\xc1\x24\xaf\x9d\x7b\x17\x6b\x05\xfd\xc4\xf5\xda\xb3\x9c\x99\x4f\x1d\xfe\x38\x27\xc8\xcf\x9d\x85\x40\x8b\x5d\x3a\x4b\x7a\x9f\xfe\x2b\xbf\xf1\xaa\xf5\x5d\xeb\xe2\x74\xf0\xcb\xed\xb9\xf7\xf8\x78\xc6\xc6\xb3\x6a\xde\x63\x8d\x69\xf3\x51\x39\x4f\xf5\x88\x4f\xf0\xaf\xde\x1e\xeb\xdc\xe0\xd6\xa2\xe3\x3e\x2c\xc6\xb4\x9c\x18\x01\xda\x9a\xc1\xb3\xca\xdb\xac\xdf\xfb\xfb\x43\xbc\x8a\xeb\xf9\xdc\xd9\x15\x3d\xcf\xac\xb4\x74\xc1\x90\x63\xaa\x53\x4e\x1f\xb4\x18\x69\x0b\x26\x7a\x66\x95\xe9\xe4\x05\x9a\xca\xc5\x33\xad\xf8\x23\x92\xa7\x7e\x7d\xec\xc0\x0f\x5f\xe2\xbc\x61\x3e\xbd\x96\x55\xbd\xa8\x94\x13\xa3\x05\x8a\x56\x0d\xac\x32\xab\xa0\xc4\x14\x06\x2a\x16\xa7\x0e\x82\xe5\xfd\x42\x30\xaa\x5b\x4d\x1e\x1e\x97\x50\xb7\xde\x25\xeb\x3d\x38\x5c\x9f\xa7\xdc\x93\x9f\xa1\x3e\x7b\x74\x2f\x04\xd3\x9a\x2a\xe4\xab\x5b\xe7\x96\xda\xee\x57\xe0\xc8\x89\x2f\x31\xcf\x5a\x5a\x9f\x49\x03\xaf\x1d\x6c\x69\x4c\xee\x69\xf8\x09\x9d\x73\xcf\x43\x63\xa6\x0e\xdb\x3d\x4e\x29\x99\x91\xb3\x5f\x65\x8d\x7d\x3a\x05\x69\xb9\x31\x8f\xed\xa2\x7e\xcc\xbc\x5d\x99\xdb\xea\xef\x7f\x05\xf2\xc9\xd8\x3e\xf3\x9d\x6e\xbb\xd6\x97\x5d\x9f\x7c\x37\xae\x6f\xd5\x69\x7c\x9c\x08\x77\x7a\x70\x9f\x5f\xb8\x5f\x2f\x0c\xb3\x46\x9f\xb8\xeb\x08\x39\x7b\x99\xdf\xb2\x78\x3f\x99\x5c\xfc\x5c\x5c\xbf\x78\xea\x7e\xae\x28\x1f\xaa\x8d\xf2\x27\x38\x01\xdd\x98\x9d\xca\x2d\xa1\xdd\xe1\x15\xc1\x5d\x99\x57\x77\xa4\xbc\x87\x7f\x79\x26\x8a\xa7\x88\xf9\x72\x4e\xe9\xd0\x82\x9d\xde\xd1\xb2\x53\x3c\x4e\x4d\x99\xc3\x3b\xf7\xd6\x64\x15\x4f\x9c\x4c\x1d\xab\x3a\x92\xdb\xbf\xf3\xe6\x93\xed\xd7\xdd\x63\x27\xf2\x5a\x39\xbd\x95\xf8\x75\xcb\x67\xb7\xec\x7f\x5a\xd4\x77\x70\x1d\xf7\x3d\xba\xc9\xe9\x41\xea\x99\xb3\x83\x59\x09\xcf\xab\x2d\x95\x21\xee\x41\xc4\xe7\xba\x12\x3b\x3f\xf8\x79\x3e\xbb\x9c\xb8\x10\x7a\xdb\x56\xfd\x7b\x5d\x52\xd6\xc5\x35\xf2\xcc\x44\x6a\xa7\x16\x8e\xdf\x70\x7c\x7c\xc9\xe9\x61\xf1\xb8\x3c\xb8\x04\x71\xc2\xf1\xb9\xe2\xf2\x5b\x4f\x76\xa0\x7a\xf8\xde\x7e\xde\x51\x3a\x3d\xec\xe7\x69\x60\x69\x6d\x6a\xd2\x18\xfe\xa5\xfb\xc8\x43\xad\xb7\xde\xa8\x80\x4f\xe2\xfb\x21\x93\xb4\x82\x56\xaa\xaa\x7e\xe2\x9f\x5b\x83\x4a\x47\x19\xa5\x96\xbd\xd4\x5e\x4b\x17\x12\x93\x1d\x8f\xc3\x44\xb0\x4f\x83\xde\x08\xa8\x16\x99\xdd\x13\xf4\xbf\x00\x00\x00\xff\xff\xab\xc1\xc3\xc3\x18\x16\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledConstantsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledConstantsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledConstantsAbi,
		"compiled/Constants.abi",
	)
}

func compiledConstantsAbi() (*asset, error) {
	bytes, err := compiledConstantsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Constants.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledConstantsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc1\x0b\x11\x44\x21\x08\x40\xd1\x4a\x57\x78\x7c\x8c\x83\x28\xfd\x23\xec\xec\x1c\xe7\xef\xc3\xc4\x81\x64\x2e\xd4\x72\x73\x89\x8a\x0a\x51\x2c\x85\x63\x81\xfa\xbe\xef\xd3\x29\xcb\x50\xed\xf2\x37\x54\xaf\xd7\x75\x4f\x23\xdc\x24\xee\xac\xa3\x39\xce\x39\xcf\xbb\x6d\x57\x3e\xc3\x37\xc8\xfe\x05\x00\x00\xff\xff\x07\xe8\x88\x7b\x6a\x00\x00\x00")

func compiledConstantsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledConstantsBinRuntime,
		"compiled/Constants.bin-runtime",
	)
}

func compiledConstantsBinRuntime() (*asset, error) {
	bytes, err := compiledConstantsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Constants.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledErc223receiverAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x41\x8a\x84\x30\x10\x85\xe1\xbb\xbc\x75\x56\x03\x33\x8b\x1c\x60\x76\x73\x02\x91\xa1\xa2\x25\x04\x63\x45\xcc\x4b\x43\x10\xef\xde\x34\xb4\x4a\x2f\x8b\xfa\xe0\xfd\xdd\x8e\x21\x5b\xa1\x18\xe1\x27\x49\x45\x1d\xa2\xad\x95\x05\xbe\xdb\x61\xb2\x28\x3c\xfe\xa7\x2d\x2f\x70\x60\x5b\x5f\xa7\x8c\xe3\xa6\xa5\xe0\x70\xb7\x78\x48\xaa\x7a\x93\x1a\x8d\x5f\xdf\x3f\x1f\x64\x14\xca\x2d\x42\xa3\x16\x1c\xbd\x3b\xff\xcc\xb3\xda\xaf\xa4\x14\x64\x98\xe1\x90\x2b\xdf\x1d\xbd\xc3\x2a\x4d\x42\xd2\xab\xb1\x50\xa8\x7f\x95\x12\x62\x8a\x6c\xf0\xb0\x6c\x27\xba\x36\xa6\x6a\x03\x63\x36\x1c\xfd\x33\x00\x00\xff\xff\x74\xa5\xc3\x0b\xe9\x00\x00\x00")

func compiledErc223receiverAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledErc223receiverAbi,
		"compiled/ERC223Receiver.abi",
	)
}

func compiledErc223receiverAbi() (*asset, error) {
	bytes, err := compiledErc223receiverAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ERC223Receiver.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledErc223receiverBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledErc223receiverBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledErc223receiverBinRuntime,
		"compiled/ERC223Receiver.bin-runtime",
	)
}

func compiledErc223receiverBinRuntime() (*asset, error) {
	bytes, err := compiledErc223receiverBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ERC223Receiver.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x51\x6f\x9b\x30\x10\xfe\x2f\x7e\xe6\xa9\xdb\xaa\x29\x6f\x6d\xa5\xee\x69\xab\xd4\x76\xdb\x43\x55\x55\x87\xb9\x24\x96\x8c\x8d\xec\x33\x29\xab\xfa\xdf\x27\x08\x81\x64\xc5\x38\x2c\x24\xe4\xa9\x95\xf8\x0c\xf7\x9d\xbf\xfb\xee\xcb\xd3\x1b\xe3\x5a\x59\x02\x45\x6c\x46\xc6\x61\xc4\x84\xca\x1c\x59\x36\x7b\x7a\x8e\x98\x82\x14\xd9\x6c\xfd\x27\x62\xda\x51\xfd\xe8\x6d\xf3\x84\x45\x8c\x8a\xac\xfc\xcf\x92\x11\x6a\xc1\xde\x9f\x23\x96\x41\x01\xb1\x44\x36\x9b\x83\xb4\x18\x31\x4b\x40\xf8\xdd\x11\xc4\x42\x0a\x2a\xd8\x8c\x65\xce\x60\x7b\x74\xee\x14\x27\xa1\x15\x7b\x8f\xb6\xcb\xa9\x4f\x37\xf5\x34\x1f\x7d\x31\xc8\x05\xe6\x68\xda\x57\x40\x92\x18\xb4\xb6\x7a\xc3\x06\x05\xa9\x76\x8a\x5a\x8c\x13\x8a\x2e\xbe\x5c\x56\x25\xd6\x18\xc8\x32\xa3\x73\x0f\x37\xeb\x38\x2f\xdf\xd9\xbc\x20\xd6\x5a\xee\x49\x50\x69\xb5\x01\x1d\x9b\xa6\x14\xa9\xe8\x62\xb9\x05\xe1\x06\x13\x41\xdf\x8c\x5e\xd1\xf2\x1e\x08\x77\xd1\x97\x9f\x77\xc0\xf8\x9a\x09\xd3\x01\x69\xbb\x66\x97\x60\xf0\x51\xef\x74\x6d\xec\xae\x78\xb5\x48\x9a\x40\x3e\xb8\x2c\x93\x45\x48\x92\xdb\x17\x1e\x2e\x2e\x17\xb8\x3a\xe0\xb2\xb8\x56\x64\x80\xd3\x55\x92\x04\x2e\x4c\xe1\xea\x6e\xa5\x3a\xaf\x75\xab\xc7\x48\x3f\x6a\xdc\xad\x36\x37\xf5\xcb\x8f\xda\x72\x3f\xb7\xb9\xd1\x69\x3f\x27\xd2\x07\xcf\x22\x19\x50\x76\x8e\xe6\x76\xfd\xb1\xe9\x06\xd2\x2b\xbd\x04\xb9\x48\x41\xda\x7d\x74\xf7\xf5\x34\x4e\xb8\xbf\xea\xf4\x3e\x92\x3b\x13\xbd\x85\x6b\x75\x59\x02\x84\xd7\x20\x41\xf1\xe0\x6a\x1a\xe6\x03\xa3\x30\xe0\x20\x65\xc8\xb8\x2b\x0c\x1e\x3c\x37\x65\x39\xce\xb7\x9f\x5f\xea\xa7\x9e\x6e\x1e\x73\x6e\x86\xd8\x47\xcf\xa6\x6b\x89\x2e\x90\xae\x72\x10\xb2\x2c\xe6\xa6\xda\x68\x7b\x4d\xe2\xc8\x1b\xc0\xc7\x32\x47\x63\x4b\x74\xdf\x55\xc5\xc2\xd0\xf2\xb7\xa0\xe5\xaf\x8a\xea\xc4\xa5\xb7\x75\x49\x54\x0b\x5a\xde\xcd\xef\x31\x17\x25\x89\x29\xfa\x3a\x86\xc7\x8d\x96\x0b\x2b\x03\xba\x3a\x83\x70\xe8\x9d\xa9\xb0\x45\xc6\x6b\x73\xbc\x9b\x77\x13\x88\x1b\xef\x9c\x40\x70\xb6\x48\x63\x2d\x4f\xff\x93\xc2\xd7\xce\xad\x6b\x2c\x08\xed\xa7\x8b\x0f\x71\x37\xe9\x75\x9c\x70\x06\xf7\xa5\xea\x16\x31\x24\xa4\xaf\xb1\xf6\xa7\xc5\xa4\xf7\xab\x56\x41\xf6\x28\xd2\xee\x34\x7f\xf4\xc1\x1d\x6d\x1c\xf9\x12\xcc\x02\x27\x0a\x23\x23\x46\xdb\xb3\xb4\x92\x7d\x16\x17\x89\x14\xa7\xdb\x5b\xfe\xbb\xc9\x35\x95\x0e\xd1\x67\x83\x42\x09\x12\x20\xc5\x9f\xa9\xf4\x53\x2d\xfd\xde\xee\x5a\xa4\x3a\xc9\x5e\xd7\xd8\x93\xfd\xae\x0e\x2f\x94\x2d\xa5\xdb\x0c\x55\x12\xd8\x3a\x20\xa5\x5e\xf9\x43\xb9\xc1\x14\x84\xda\xb9\xb3\x53\xee\x9d\x46\x2f\xbd\x12\x1e\x96\x90\x7b\x2a\x02\xa5\x55\x91\x6a\x67\xbb\xf4\x21\x54\x82\xaf\x98\x6c\xaa\x0d\x87\x65\xcf\x01\x9f\x3f\x35\xf0\xfa\xd3\xcd\xcc\x80\x74\x9e\xb5\x5f\x43\x1e\x5b\xbb\xaa\x41\x98\xa3\xa2\xff\xa6\xd4\x23\x2d\xcf\x09\xbf\xd2\x0e\x22\xb6\x4e\x74\x20\x47\x22\x86\xaf\xc8\x1d\xe9\x61\x65\xd2\x87\x75\xbc\xd9\xd9\x9e\x03\x61\xff\x78\xf8\xe0\x1f\x63\xb0\x1b\x2a\xc4\xa1\x3a\xec\xc9\x4c\x9e\x23\xfd\x09\x29\x70\xb8\x2b\x80\xfd\xdb\xc7\x32\xe8\xdd\xee\xd0\xae\x3b\xf8\xfc\x37\x00\x00\xff\xff\xae\x4e\x8f\x51\x28\x17\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x0d\x92\xeb\x28\x0e\xbe\x92\x24\x10\x88\xe3\xf0\x7b\xff\x23\x6c\x49\xe0\xc4\xc1\x4e\x27\xfd\xde\xee\xd4\x54\x6d\xa7\xde\x4c\x37\xc6\x42\xff\xfa\x24\x12\x40\x3f\x1e\x98\x02\x80\x77\x01\x21\x20\x20\x79\x8e\xc1\x8d\xf5\x13\xa0\x43\x00\x20\xc8\x01\x00\x1c\x83\xc7\x10\x1c\x84\xd1\x5a\x07\x27\x88\xde\xde\x49\x1c\x05\x82\x83\xc4\x3d\xc7\xe2\xe6\x6a\x71\x6b\xb5\xbb\x4e\x52\xd7\xde\xbe\xf6\xa2\x60\x80\xd6\x9a\xad\x12\xc1\x5c\x25\x87\x89\x78\xed\x25\xcf\xc7\x6a\x91\x48\xc7\xde\x90\xe7\xaa\x43\x57\x3b\x87\x38\x57\x13\xad\xd5\x30\xc0\x4b\x9c\x3c\x50\x29\x73\xd5\x43\x11\x0f\x9c\xe7\x6a\x5f\xa7\xf9\x9a\x13\xa7\x0c\x73\x75\x8c\xb9\xca\xc1\x27\x60\x37\x6c\xd5\xf9\x25\x05\x77\xa6\x0c\x71\x72\xe6\x82\xcc\xd5\xd0\xc8\x51\xce\x93\x07\x17\xfb\xb1\xea\x03\x70\x5d\x14\x12\xce\xd5\x08\x19\x84\xdc\xa2\x50\x96\x1e\x12\x37\x49\xc5\xaf\xd5\xb6\xe8\xa6\x34\x00\xbc\x5f\x14\xfa\x92\x22\xbb\x31\x72\xaa\x53\x0f\xde\x2f\x29\x72\x02\x4e\xb5\x94\xb9\x1a\x96\x1e\x4a\xac\x1d\x9b\x9f\x12\x7b\xf1\x73\xb5\xfa\x16\x42\xeb\x32\x57\xd3\xd2\x64\xe5\x12\x06\x26\x9e\xab\x07\x67\xad\x05\xea\xcd\xf5\xb9\x5a\x97\x76\x46\xed\x58\x6b\x5d\x74\x87\xe7\xc8\x45\x7d\x43\x60\x34\x2e\xce\x23\xab\x95\x9d\x7a\xd1\x63\xd5\x56\x6a\x40\x60\x88\x1c\x74\xbf\x07\xc6\x00\x04\x02\x42\x4c\x82\x09\x04\x01\xc5\x09\x0a\xb2\xfe\x23\x7d\x0a\x98\x90\x41\x80\x31\xc1\xfa\x5b\xdf\x70\xe2\x94\x36\x17\xdd\x8f\x30\x4f\x8c\xa6\x39\x21\xd0\xf7\x9d\xfd\x7f\xd1\xd0\xa7\x01\xf4\x5c\x86\xf9\x49\xf6\x4f\x4f\x54\xba\x38\x30\xc8\xa2\x92\x79\x51\x71\x62\x1c\x2a\x4f\x46\x45\xc3\x03\x01\x20\x83\xc3\x84\xe1\x95\x43\xa5\x9c\x68\xd2\x9e\xb2\x09\x24\xb5\x3c\x0c\xf7\xd4\x49\xe9\xbb\x4e\x1a\xeb\x09\x01\xf2\x8a\x31\x70\x16\x89\x8c\x21\x00\x79\xa7\x6f\xb1\x4f\x4f\x8d\x25\x15\x8e\x9f\x67\xbf\x3f\x6b\xec\xfa\x27\xec\x1f\xce\x8a\x63\xfb\x09\xe0\xbd\x63\x41\x0c\xaa\xa5\x30\xf7\xa2\x0a\xab\x1c\xa9\xfe\xd7\x69\x44\x65\x3f\xcd\xa9\xbe\x62\xe4\x33\xef\x5f\xf0\xad\x3a\xfc\x92\xef\x83\x2f\x3a\xf8\x8a\x31\xeb\x69\x07\xa5\xc8\xdf\x6a\x7b\xa3\x64\x52\x07\x04\x81\x70\xa6\x97\xda\xce\x59\xd6\xf5\x2c\xf9\xec\xd1\x63\x24\x48\x78\xf6\x8f\xf7\xb2\xd6\xf0\xc7\xb2\x66\x19\x67\xde\xfa\x9d\xfe\xdf\x59\x1b\xa1\x38\x3a\xbd\xed\x20\x6f\x6f\x3b\x8a\xbf\xd2\x54\x6d\xe5\xac\x83\xd7\x37\xbf\xd6\x87\xf3\x7b\x7c\xbc\x95\xe2\xa2\x8f\x8e\x78\x96\x28\xba\x5b\x4a\x93\xdb\x41\x7c\xde\x2b\xe9\xd6\x77\x47\x8c\xe7\x5d\xa9\xfe\xa5\x37\x8d\xd8\xce\xf4\xea\x25\x3e\x7f\xb2\x98\x96\x80\xf3\xdb\x7d\x97\xcf\xb2\x2b\xd2\xcc\x72\xc7\xae\xb1\xfb\x97\x57\xfa\x53\x0b\x48\x19\x4f\xb1\xe9\x85\x99\xae\x19\x20\x39\xf1\x96\x1f\x40\x82\xe6\xd3\x84\xe2\x4c\x26\xcd\xc2\x41\x73\x9f\x5a\x57\x2d\x1b\x40\xf8\xf9\xb7\x5a\x3c\x58\xa6\x9e\x59\x38\x83\xae\x6b\xb6\xbd\xb5\xbc\xf7\x17\xff\xfd\x98\xad\x10\xa9\xfb\x93\xb4\x3e\xec\xf1\xf9\x45\x76\x45\xe7\xcf\x91\xe0\x65\xbc\xf7\x1b\x64\x38\x6b\xd7\xe7\x3d\xbf\xfc\xc4\x33\x22\xf3\xd9\x43\xfd\xd5\xfe\xf6\xf6\x3a\x29\xbf\x9c\xd4\xf6\xf8\xfc\x3a\x2e\x30\x8c\x73\x9e\xf0\x63\x97\x4f\x23\x1d\x31\xd2\xcc\x61\x5a\x9f\x87\xfe\x5d\x1f\x79\x5b\x56\xe6\x5e\x71\xab\x48\x31\x6b\x2c\xc7\xc1\xc1\x33\x7b\x02\xcf\xa1\x07\x8e\x14\x62\x4c\xf0\x8b\x1f\xf3\x2a\xab\xd2\x5a\x8d\xb9\x24\x98\x67\xbe\xca\xe5\xb4\xc2\x07\xe3\x79\xa1\x02\xb0\x3c\x72\x54\x13\xf3\x44\x47\x90\xbc\x44\xad\xe2\xe2\x99\x92\x9f\x5e\xa8\x75\x9c\x40\x38\x01\x73\x82\x44\xea\x9d\x71\x48\xe5\xd2\xb1\x73\x2f\xbd\xc6\xc6\xa5\xa1\x1f\x11\x3d\xc5\x86\x5d\xfc\x70\xad\x81\x43\x5f\x61\xc4\x42\x94\xb0\x73\x21\x80\x5c\xa5\xc6\xea\x4a\x22\x4e\x93\xe2\x0f\xf5\x2c\x3b\x45\x01\x80\x7a\xa2\x61\x82\x70\x20\x24\xd5\x70\x45\xcd\x2f\x18\x9d\xd5\x75\xad\xe7\xb6\xba\xe7\x17\x6e\x2c\xe1\xbc\xcf\xd6\x5e\xec\xe7\x6f\x22\x56\xe3\x15\x15\xf1\xf0\x78\xf1\x4f\xe7\x0c\x49\x5d\x22\x02\x83\xd0\x75\x2d\x8e\xa4\xc8\xcf\x29\x52\x0e\xa3\x0e\xac\xa3\x07\x76\x0e\x5c\xa7\x9e\x4b\x90\xde\x07\x57\x1c\x14\x13\xe2\xc8\xa9\x25\x3f\x48\x3c\xc8\xe8\xc9\x33\x8d\x28\x12\xf5\xb3\xb2\x0b\x89\xbb\xcd\x2e\x28\xb4\xb2\x8b\x57\x3f\x78\x64\x16\xf7\x9a\x59\xae\xb9\x23\x2b\x4e\x0c\xab\xde\x54\xc3\x65\x6f\x7c\x6c\xab\x45\x96\xcf\x04\x81\x14\x75\xda\x19\xa4\x30\x34\x00\xfa\x07\x62\x94\xdd\x9e\x64\x78\x71\xd2\xf1\x2f\xf1\x30\x7d\x40\x82\x52\xbb\xb1\x05\x48\x58\xf2\xbd\x64\x47\x89\x2a\xb7\x38\x5d\x33\x8f\x86\x23\x7f\x2a\x0e\x66\xf2\x34\xf9\x0a\xeb\x3d\x26\xf1\x76\x02\x80\x36\x26\xea\xd3\x13\x23\xf3\x23\x86\x26\x52\x25\x40\x01\xf6\x57\x4e\x14\xb1\xde\xe8\x7f\x9d\x33\xf9\xc2\xa8\x71\x62\x16\x98\x18\xda\x68\x5a\xc5\x90\x03\xfb\x0a\xb2\x17\xbc\x52\x02\xd2\x13\x12\x88\xbb\x39\x3b\x00\x4d\xda\x3c\xe5\x7c\x52\xd7\xdf\xd8\xa4\x3c\x64\x70\x93\x97\x5f\xca\x71\x91\xe2\xc0\xf9\xeb\xb3\xe2\x6f\x65\x18\x84\xa8\xfd\xc1\x25\x06\xa3\xec\xf8\x23\xa6\x28\xb8\xc5\x60\xcc\xf8\xb2\x6b\xf3\x30\xa1\x23\x5f\x1d\xf9\x01\xac\x7f\x98\xb9\x4a\x7d\x89\xbd\x23\x31\x7e\x31\xe0\xcc\xcb\x02\xc4\x17\xc4\xf5\x99\x92\xea\x28\xba\x5d\x1b\xef\x7e\xcc\x42\x56\xbf\x5f\x34\x55\xb6\x0c\x75\xe4\x29\x41\x96\xb8\xc9\x2e\xde\xdd\xf0\x09\x22\xbf\x91\xf8\x44\xe7\xa9\x69\xf1\xf5\x92\xed\x84\x77\xfc\x22\x3c\x94\xa7\x03\xbf\x6a\xc7\xa5\xab\x21\xcb\x09\xd5\x5a\x9e\xf3\xe2\xb4\x2f\x5c\x5d\x9d\x48\xe6\xc8\xa0\xb6\x04\x11\x11\x94\xf3\x84\x03\x31\xf2\x40\xc3\xfa\x88\x5c\x8e\x77\x4a\xd5\x77\xbe\x90\xf6\xbe\x1e\x39\xc9\x1a\xe3\x4c\x1a\x65\x1a\xb3\xec\xb5\x6e\x28\x57\x4b\xbe\x1c\xcb\x8d\x36\xe3\x46\x1d\x77\x5d\x2a\x6f\x3d\x27\x90\xf0\x2a\x43\xe8\x53\x86\x1b\x8e\xd3\x7b\x9a\xb3\x46\x26\x45\xe9\x4e\xab\xa4\x4a\xa7\xbb\xd6\x49\x09\xc7\xf5\xa4\x43\x5b\xef\x75\xf3\xa8\xd5\x78\xab\x1b\xad\xc6\xcc\x9c\x48\xca\xd1\x19\x80\xd5\x08\xed\xe7\x09\x92\xbd\x9d\x4e\x5c\x04\xfa\x2b\x79\xdf\x59\xa8\x6c\x16\x52\xab\xa4\x84\x17\x4f\xcc\xda\xdf\xaa\x57\x5d\xce\xd2\x08\x75\x15\x7a\x87\x22\xd9\x39\x31\x7f\x75\x47\x65\x7a\xce\xce\x1e\x9c\xab\x7d\x81\x9e\xda\x39\xd1\x32\x5c\x0a\x56\x87\x1e\xd8\xc2\xfe\x32\xbc\x41\x6b\x5a\xe7\xad\x3a\xae\xe7\xc1\xfe\x12\xab\x0a\x1a\xd3\xc1\x2a\xa9\x78\xf1\x6a\x57\xf1\x2e\x1a\x35\x43\x21\xe9\x25\x2b\xce\xaa\x33\xab\x9c\x38\x95\xc4\xec\x16\x05\xdc\x91\x0f\x33\x5e\xfa\xd3\x1a\x38\x83\x1b\x78\xec\xa0\x78\xde\xb1\x68\x97\x5b\x94\x71\xf1\x74\x2d\x23\xad\x0d\x62\xca\x0d\x4b\xa7\x2a\xa9\x84\x54\xa9\x40\x90\x51\x5d\x94\x96\x73\x62\x2a\x39\x0e\x0c\xae\xfa\x8c\x18\x48\x06\x73\xf6\x6d\x30\xb9\xe2\xfa\x78\x20\x8c\x1f\xb0\x98\x21\x31\x67\x99\x22\xcb\xb3\x16\xb8\x39\xb5\x31\xcd\xb8\x63\x76\x33\x9f\x22\xcd\x4a\xe1\x2e\xd1\x8f\xe1\x8a\xbc\x67\x16\x9f\xfa\xc8\x3b\xbe\xce\x45\x6e\x2a\x4d\xae\x7b\xfe\xcb\xb5\x5e\x2a\x4d\x6e\xe1\xc7\x4a\x03\xb3\x17\xfb\x29\xef\x62\x58\x27\xde\x56\x98\x03\x7f\xfd\x77\x2b\xcc\xac\xc6\xab\xba\xdc\xc5\xe7\x5e\xd5\xe6\x1c\x10\xd3\x91\x91\x48\xad\xa8\x38\x23\xc1\x1d\x9a\x58\x12\x95\x24\x37\xd9\x73\xd7\xc8\x46\x5b\x63\x44\xa9\xbf\x47\x17\x77\x98\xfa\x21\x8d\x5a\xaa\x64\x14\xf7\xec\xc8\x2f\x1c\xf8\xbb\x0c\xf8\xd4\xe8\xc2\x80\x26\x41\x8d\xc9\xdc\x07\xa3\xdc\xf6\x3e\x07\xad\x6f\xa4\x89\x17\xae\xf7\x9f\x1d\x1b\x1b\x96\x92\x2b\x76\x0e\x1f\xed\x3c\xab\x05\x86\x89\x1f\x81\x0e\x3c\xf1\x7b\x8d\x06\x84\xea\xe5\x39\x6d\x49\x2b\x33\x09\x22\x9a\x95\x6b\x49\x7f\x67\xe5\xcf\x7a\xb9\xf2\x16\x6f\xb4\xf2\xb9\x9b\x55\x8d\x6a\xf6\xfd\x11\x01\x5f\x6d\x7c\x2b\xcb\x39\x86\x1f\xf3\x65\x4c\x37\x48\xed\xd7\x39\xaa\x01\x6e\xb9\xa7\x41\x91\x20\xf2\x9c\xa2\x69\x36\x9c\x08\x4a\x9f\x66\xcf\x51\xf8\xc8\xb4\xff\xbb\x6e\x2b\x99\x05\x67\xbf\xf5\x12\x41\xfe\x55\x23\x9a\xa5\xe4\xc7\x0e\xe1\x47\x8f\x9b\x5d\x87\x4f\xb0\xd0\x63\x93\x89\xa5\x0c\xd7\x3c\xb4\xeb\xde\x9e\x6d\x3d\x8b\xf0\x56\x51\x54\x4f\xed\x05\x9b\x82\xe9\xf0\xb8\x9d\x68\x65\xef\xef\x9b\x66\xfc\xaf\x31\xcd\x8e\x39\x6f\x3d\x5e\xf3\x39\xf3\x1f\x67\x37\x48\x3e\x71\xf2\xd7\xbe\xe9\xf0\x35\x61\xe1\x7f\x91\x17\xa0\x7a\x81\xc6\x87\xf2\x6c\xd6\xbc\x91\xcd\xd3\xca\x24\x5d\x96\xdf\x2f\xcb\x0d\xac\x2a\x9f\x76\xb4\x13\x7d\x2a\x2d\xf3\xf8\x9e\xc2\xdd\xce\xa3\xc3\xb6\xfd\x6e\xee\xd7\xdd\xad\xa4\x9b\x98\xbf\xcb\xac\xd6\xd9\x7a\x9b\xd1\x69\x27\xd2\xeb\x48\xe8\xe7\xac\xf4\xd6\x0b\x12\xbc\xae\x2b\x02\x5a\x9c\x2c\x7e\xad\x96\x68\xb6\x34\xbe\x07\x71\x54\x79\x2e\x7c\xd3\xe2\x5b\xd7\x52\xb2\x67\x50\xac\x5b\xbf\x3d\x57\x9c\x52\x7e\xc3\xd3\x19\x37\x6d\xf3\xad\x30\xef\xda\x86\xc3\x67\x46\xd7\x3e\x76\x59\x60\xb8\xbe\xe1\x19\x45\x28\x33\x2b\x0d\x3f\x56\xb7\x65\xdc\x45\x7a\xfa\x1e\x7b\x71\xe9\x90\x71\x70\xe3\x38\xba\xe9\x46\xdf\x37\xcc\xa7\xbf\x29\xbe\x37\x8f\x23\x58\x73\x0b\x95\xc1\xe6\x8a\x2f\x79\xd3\x56\x0f\x7e\x11\x86\x88\xf8\x0b\x3e\x1b\x69\xc7\x67\x23\x55\x71\x1b\x3e\x1b\xf9\x13\x3e\xe3\xdf\x4e\x02\x10\xdc\x7d\x87\xcd\x5f\xce\x40\x65\x9f\x81\xce\x78\x3a\xa6\xa0\xff\xe4\xf4\xd3\xa4\x89\xf3\xd6\x75\xde\xd6\xee\x38\xfb\xcf\x70\xe1\x5d\x94\x8b\x76\x31\xfb\x27\x4f\x6b\x22\xc4\xe5\x77\x49\x39\x41\xa4\x75\x3e\xa2\xe5\xfd\xc3\x53\x2f\xfc\xf4\x8f\x95\x19\x52\x66\x48\xc2\xda\x71\xae\xb3\xec\x3b\x0f\xb2\x9d\xb4\x53\x6e\xdf\xe1\x17\xf6\x77\x59\x44\x10\xfc\x67\x8c\x86\x41\xf9\xfa\x13\x24\x93\x34\xd7\xde\xe8\x38\x05\x06\xc9\x01\x11\x29\x2c\xb4\x53\xcd\xca\xeb\x5e\x44\xa3\x5c\x54\x6a\x74\x7c\x4c\x4e\x64\x4e\x34\xfc\x8c\x18\xc4\xa4\x5d\x08\x22\xfa\x60\x4f\x8b\xdd\xaa\xaf\xfb\x38\xed\x4f\xf5\x99\x22\x11\xc4\xa8\xf6\xc1\xd0\xed\xbf\xe8\x49\xc6\x9b\x5c\xf5\x36\x4b\x8a\xbc\x7d\x92\xf7\x27\xc7\x44\xc3\x6c\xb9\x59\x4f\x82\xd5\xc4\x22\x49\x78\x56\x73\x9c\xb7\xd4\x88\x98\xa3\x9c\x6e\x14\x67\xde\x45\x2c\x24\xa7\xfb\x22\x43\x53\x41\x78\x45\x38\x8e\x38\xdf\xad\x32\xfb\xe4\xb3\x0e\x35\x9f\xda\x1e\x78\xea\xa0\xbb\xa9\x03\xe1\xb7\x3a\x08\xef\x24\x55\x79\x94\x5f\xff\xe8\xc4\x64\x4e\x1a\x26\x2f\x84\x65\xf2\x72\xd6\xf9\x71\x9e\xa7\x7d\x4a\xf6\x40\x27\x88\x44\xf1\x86\x7b\x58\xa7\xd1\x0d\xf7\xfe\x1d\x35\xe5\x71\xf2\x96\x20\x79\xed\xd5\xcd\x53\xc2\xf9\xfb\x1a\xaf\x9f\x53\x46\x57\x67\x94\x8f\x37\x56\x7e\xdd\x58\x79\x2f\x7e\x30\xfd\x36\x22\x9e\xc8\xe6\x7c\x63\xf5\xa8\x23\x0f\x64\x02\xa7\x8c\x7c\x74\xcf\x2f\xa8\x61\x55\x6d\x9b\x73\x43\x72\x0b\xbd\xdc\xdf\x1c\x68\x7f\xe5\xde\xa0\x08\xb7\x50\x04\x61\x90\xc3\xb2\xbf\xee\x04\xd0\xc1\x36\xdf\x41\x07\x43\xab\xdc\x19\xc3\xea\x2a\xa1\xe0\x8e\x15\xde\xcd\x00\x67\x67\xf8\x53\xde\x9c\x5d\xe3\x9a\xd1\x5f\xe6\xce\xe8\xd8\xee\xc7\x5e\x67\xbc\xe8\xb8\xee\x33\x5e\x7b\x83\x11\xe7\xbc\x16\x5d\xe8\x73\x46\x37\x27\xbf\xc7\x1c\x17\x9d\xc8\x31\xfb\x45\x27\xe1\xe7\xd9\xaf\xbd\xe1\x47\xbc\xd6\x60\xf7\xb1\x4f\x53\xfa\x25\x7c\x3f\xa7\x74\x6f\x2a\xde\x37\x73\x59\x74\xbd\xfc\x62\x2e\xfb\x69\xa6\x6c\x52\x43\xdb\xe7\x9e\xe8\x73\xfc\xff\x9b\x7b\xa2\x4f\xf4\xf3\xdc\x13\x7d\x76\xdf\xce\x3d\xef\x22\xf0\x1f\x9f\x7b\x3e\x3b\x81\x6b\x4f\x73\x60\x35\x86\x7a\x87\xda\x91\x31\xbd\x43\xed\xc8\x94\xbf\x41\xed\xc8\x4e\xbe\x42\xed\x70\xa0\xf6\x67\x86\xff\x75\x56\xe3\xb8\xdf\xcf\xf1\xef\xa7\x98\x97\xac\x76\x73\x53\xba\x64\x65\xcb\xe7\x30\x71\xf6\x95\x33\xd3\xc1\xe3\xe6\x0b\xb9\xc2\xae\x4d\x71\x68\xfa\xaf\x6d\x7f\xa2\xab\x2d\x3e\xad\xb2\x2c\x12\xc2\x71\x6f\x84\xc8\x3d\x9e\xad\xb6\xf0\x03\x8f\x79\xbf\x79\xaa\xcb\x02\x9e\x56\xd5\xb7\xf7\xed\xd6\x7f\xce\x39\xd6\x94\x62\x3e\x83\xaf\xfb\x2b\xc3\xab\xcc\x37\x32\xab\x87\x17\xa8\xcd\x79\x6a\x05\x54\xb0\xda\x1d\x16\x57\x3a\x56\x71\x94\xaa\x8c\x1e\x13\x51\x62\x6d\x64\xa8\x53\xf3\xb1\xb8\x1a\x29\x56\x6e\xc8\x1d\xb1\x75\x4f\xc7\xac\xc1\xa6\x1a\xf4\xac\xbd\xc7\xbd\xfb\xf6\x8d\x00\xb2\x6f\xbb\xe4\xb3\x07\x1e\x33\x02\x7d\x12\xdb\x71\xe7\xdb\xe6\xa4\x11\x7f\xf6\xc4\x3b\x24\xe1\xe9\x88\x36\x9b\x3f\x45\xcb\x3e\xe6\xa9\xd7\xfb\xf8\xe3\xf6\xfc\xb8\x8b\xfe\xb7\x68\xe9\x91\xad\xee\x6a\xf7\xf5\x3e\xe0\xcd\xcd\x99\x22\x35\x0c\x8f\x79\xce\xaa\x4b\x0f\x44\x34\x63\x62\xbf\x01\xc2\x97\x6a\x7f\x99\x82\x2e\x0f\x8c\xbc\xbe\xb7\x32\x7d\x19\x6a\xe3\x03\x09\x4e\xce\x5c\x41\x7c\xf6\xf0\x62\xb3\x8d\xe7\xf7\x80\xad\xe7\x34\x0f\x3e\x9e\xae\xa8\x89\x31\xcf\x75\x45\x6e\xaa\x8b\x47\xfe\xfb\x98\x11\xec\xdb\x1a\x64\xf1\x1b\x53\x7b\x52\x79\xe1\x81\xc4\xad\xfe\x27\x96\x66\x55\xd3\xbe\xb5\x21\x47\xcd\x88\x65\x9d\x0f\x7e\xf6\x43\x3b\xb7\x74\xf9\x76\xc9\xc4\x94\x32\xf1\xe6\x9a\x55\x29\x12\x63\x16\x34\xba\xb8\x7c\x3e\x9e\x67\x96\x34\xe7\x63\xf6\xc4\xe6\x4c\xec\x83\x79\x3b\xa9\x7d\xb5\x06\x6b\x65\x14\xb6\x49\x66\xd1\x7a\x79\x68\xe8\xf9\x0d\x57\x21\x9b\x94\x4e\xe4\xba\x66\xa6\x61\x41\x2d\xb0\x8b\xc1\x40\x31\xc7\x1c\xc9\x01\xeb\x26\x08\x48\x75\x70\x6a\x58\xb9\x46\xd7\xd9\x79\xf4\x59\x24\xf5\x14\xa1\xb6\x11\x85\x4b\x0b\x99\x7c\x61\xee\x1e\x38\x67\xa1\x86\x22\x75\xd4\x28\x4d\x3d\x3c\xfd\x27\x00\x00\xff\xff\xfb\x76\xac\x35\x8e\x30\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledOwnedAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x51\xca\x83\x30\x10\x04\xe0\xbb\xcc\x73\x4e\x90\x3b\xfc\xfc\x07\x10\x29\xab\xae\x10\xb0\x1b\x49\x26\x15\x11\xef\x5e\x5a\xaa\x15\xda\x52\xe8\xeb\x32\xec\x7c\x53\x2d\x68\xa3\x65\x8a\x11\xbe\x97\x21\xab\x43\xb0\xb1\x30\xc3\x57\x0b\x4c\xce\x0a\x8f\x93\xe9\xf4\x3f\x99\x26\x38\x70\x1e\x6f\x27\xe9\xba\xa4\x39\x63\xad\xdd\x96\xca\xca\x2d\x14\x0b\x1f\x3f\x6a\x87\x51\x66\x69\x06\xdd\xff\x67\x0a\xf5\xaf\x50\x9a\x30\x04\xce\xf0\xb0\x68\x5b\x68\x2f\xe8\x8b\xb5\x0c\xd1\xb0\xba\xa3\x91\xa9\x1c\x89\xcf\xf6\xf8\x52\xbd\xf3\xdf\xab\xbf\xb3\x2e\x41\xa7\x0f\xa0\x23\xe0\xb7\x7d\xf7\x49\xa9\xb4\x8c\x09\x6b\x7d\x0d\x00\x00\xff\xff\x90\xea\x6f\x4c\x88\x01\x00\x00")

func compiledOwnedAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledOwnedAbi,
		"compiled/Owned.abi",
	)
}

func compiledOwnedAbi() (*asset, error) {
	bytes, err := compiledOwnedAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Owned.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledOwnedBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x51\x72\x04\x21\x08\x44\xaf\xd4\x2d\x02\x72\x1c\xd4\xf1\xfe\x47\x48\xe9\x24\x5b\x95\xfc\x64\x67\xf1\xc7\xa2\xe0\x35\xdd\x86\xfd\x2a\xb4\x18\x50\xc5\x08\x23\x50\xbb\xba\xc9\xfa\x2e\x1f\x20\x3e\x2c\x03\x20\x8a\x4a\x33\xa1\xe4\xaa\x10\x6d\x64\xdd\x2a\x0a\xf5\x06\x93\x36\x53\x47\xd7\x7e\x77\xfd\x52\xd7\xbe\xf7\x1a\xd6\xd4\x2e\x95\x7a\xa6\xf7\x4d\xaf\xee\x99\x1c\xfe\xba\xf1\xbf\x3a\xee\x94\xb6\xf7\x7a\xaa\x69\xdf\xc4\x1f\x76\x8b\xbf\xec\xa0\x11\xe4\xb5\x27\x4f\x3e\x7c\x5f\x2b\x10\xa4\x35\xee\x4c\x0b\xc0\x7b\xbf\x21\x08\x09\x2c\xb9\xdd\x69\x15\x79\xc2\x6c\xa4\x6d\xee\x9d\xd2\x55\x7e\x5d\x7c\x7e\x5a\xdf\xe7\x31\x68\x0f\xd4\x4b\x20\xca\xd6\x3f\xde\x3c\xa0\x7a\x27\x83\x67\xaa\x3b\x15\x03\x92\xa6\x56\x3c\x3d\xbd\x08\xb4\x15\x30\x33\xac\x27\x13\x14\x89\x35\x30\x24\xba\x0e\x87\x69\x19\x65\xae\x11\x61\x22\x96\x62\x62\x21\x3d\xae\x3a\x3d\xc7\x9a\x2b\x21\xd3\x25\x81\x12\x5f\x01\x00\x00\xff\xff\x68\x3c\x60\x89\xcc\x02\x00\x00")

func compiledOwnedBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledOwnedBinRuntime,
		"compiled/Owned.bin-runtime",
	)
}

func compiledOwnedBinRuntime() (*asset, error) {
	bytes, err := compiledOwnedBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Owned.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xcf\x6a\xc3\x30\x0c\x87\xdf\x45\x67\x9f\x06\xdb\xc1\x6f\x30\xc6\x60\xb0\x63\x29\x43\x6d\xd4\x22\xe6\xca\x21\x92\xb3\x79\x25\xef\x3e\x5a\x9c\xa4\x0b\xed\x5a\xf6\x87\x1e\x13\xe9\xa7\x7c\xf9\xa4\xd9\x16\x96\x51\xd4\x50\x0c\xbc\x35\x89\x1c\xb0\xd4\xc9\x14\xfc\x6c\x0b\x82\x1b\x02\x0f\x2f\xaf\x94\xc1\x81\xe5\x7a\xf7\xa4\xd6\xb0\xac\xa1\x9b\xbb\xbe\xbe\x26\x03\x07\x31\xd9\x34\x38\x86\x12\x8b\xdd\xdc\xde\xed\x53\x35\x66\x5c\x04\x02\xbf\xc2\xa0\xe4\x40\x0d\x8d\x1e\x93\xe1\x82\x03\x5b\x06\x0f\x2d\xd3\xdb\x98\x5d\x25\x59\x1a\x47\x81\xce\x1d\xd2\x96\xf4\xa5\xb8\x6e\xac\xb7\x18\x12\x1d\x67\x2b\x2d\x3a\xf9\xa3\x8b\xa8\x25\x4a\xdf\xf4\x73\xf6\x36\xda\x0e\x77\x18\x80\x55\xd5\x90\xea\x17\xb8\xac\xf7\xc2\xc6\x18\xf8\x83\xae\x84\xf9\x07\x8a\xb3\x3e\x35\xf4\xdf\xa2\x27\x27\x3d\x7e\x7e\xf0\xfc\xed\xd9\x1e\xda\xff\xd5\xd9\xa2\x44\xc9\x9b\x98\xf4\x98\x54\x96\x8a\xde\xa9\xea\x69\x7b\x87\xe5\xf5\xc3\x09\xd5\x43\xaa\x0c\x3c\xb7\x9a\x53\xfd\xe7\x57\xf5\xbc\x5f\x52\xa9\x53\x4b\x62\xd0\xcd\x3f\x03\x00\x00\xff\xff\x48\x39\xff\xdd\x3a\x04\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x5b\x92\xdc\x36\x0c\xbc\x52\xe3\x49\xe0\x38\x14\x49\xdd\xff\x08\x29\x50\xf3\xdc\x71\x92\xb5\x53\x71\x59\xfa\x18\x2e\x44\x82\xdd\x0d\x34\xd6\x51\xaf\xc2\xd8\x01\x15\x27\x38\x01\x3e\xac\xb9\x9c\xb7\xa7\x0d\x10\x7e\xf1\x71\x00\x62\x50\x72\x17\x4f\x59\x23\x6c\x05\x91\xd6\x2d\x8d\xac\x05\x5c\xa2\x2b\xaf\x63\xe5\x15\x9d\x7a\x45\x0f\x49\xf6\x23\xfa\x8e\x12\xe7\x15\x1d\xe3\x68\x79\x34\xbe\xa2\x1a\x57\xf4\x1c\x8b\xc6\x18\xb7\xbd\x79\x58\xb3\xa3\x6e\x0e\x9c\xd3\x0e\x51\xb2\x7d\x5f\xb1\x7a\x44\x2b\x32\x36\x6b\x07\x6b\x90\x58\x50\xd4\x69\x84\xa0\xfe\x82\x83\xe1\xa0\x33\x18\x14\x94\x80\x06\x81\x41\x5b\xaf\xda\x47\xb7\x35\xd7\x49\xe3\xe4\xa4\xdc\xa7\x42\x41\x21\x21\x81\xe0\x50\x69\x86\xd4\x74\x2b\x6d\x69\xf4\x34\xc3\xcb\xeb\x85\xf5\x9e\xb1\xea\xc0\xb8\xdf\x11\x48\x82\x24\x4e\x79\xb2\x98\xe7\x17\x16\xc4\xed\xf7\xb2\x30\xa4\x88\xa5\x6c\x3e\x2c\x99\xfc\x64\x02\x3c\x90\x92\xe8\x0f\x91\x92\xa3\x57\x5f\x30\x3a\x64\x77\x9d\x91\x3b\x41\x8e\x59\x19\xee\xa7\x4d\xfe\x28\x9e\x8a\xf1\xca\xf3\x8e\xb2\xfb\x57\x94\x7d\xd5\xee\x8c\x67\x5d\xbf\x72\x4e\x24\x91\xff\x53\xad\xfd\x72\x0e\x05\xdf\xbf\x05\xc7\x66\x71\x9d\x48\x04\x0a\x71\xed\x64\x84\x6c\xd7\xd2\xb9\xca\x0d\x46\xc1\x95\x99\x4e\xca\x44\x32\x28\xa9\x76\x25\xc5\x5e\x83\x6a\xef\x3c\x2f\x7c\xc5\x7c\xe7\x2c\xeb\x97\xcb\x3b\x24\x40\x19\x6c\x1b\x63\xe8\xfe\x45\x30\xb5\x30\xe3\xd7\xce\x4d\x58\x61\xa1\x6b\xfd\x77\x7c\x18\xa6\xb5\xb3\xd4\xbe\x77\x3b\x60\x2a\xf2\xa9\x4b\x10\x79\x69\xb3\x7d\xcc\xf6\xd6\x3f\x81\x3b\xda\x6f\x2b\xc2\xd1\xbe\xad\x08\x7b\xfc\xdf\x8a\x54\x24\x71\xd3\xc4\x82\x7e\x86\xc9\x1a\xdf\x67\x32\xe6\xcf\x30\xa1\x56\x99\xee\x3c\xaa\x4a\x95\xa7\x7a\xbd\xf0\x5d\x5c\x5e\xab\xd9\xce\x85\xd3\xc7\x38\x68\x44\x9f\xa3\x37\x4f\xed\x03\x9d\x55\x5a\x33\x12\x5b\xc3\x26\x37\x19\x47\x63\x89\x5c\x73\x9d\x6c\x12\xee\x2b\x2c\x65\xf0\xe0\x62\xf7\xe0\x7e\x63\x1d\xf2\x54\x2b\x38\x08\x52\x4c\x43\xb7\x57\xe9\xf9\xad\xf0\xfc\x48\xad\xdd\x53\x47\x65\xa9\xd1\x51\xd3\xa4\x6d\x37\x94\x2e\x56\xd9\xeb\xf7\x5e\x0d\x82\xb8\x97\x46\xaf\x75\xbb\x26\x44\xee\x19\x52\xf5\xbd\xb2\xf4\xe3\x96\x45\xe2\xe6\xe4\x4f\x4d\xab\x08\xef\x08\x2b\x73\xcd\x8d\xeb\x7d\xf7\x43\xe7\xc7\x0c\xc1\x57\x07\x90\x7f\xba\xa2\xdc\x40\x76\xa1\x99\xf3\x6d\xda\xec\x95\x69\x7b\xfc\xa7\xfe\xb7\xa7\x90\x7e\xb8\x8e\xab\xfe\xe5\xbb\x3d\x97\x5a\xc2\xec\x97\xd0\x29\x8f\xff\xe8\x57\xb5\xf3\xdb\x5d\xae\x8a\xdf\xeb\x57\x7b\x9b\x5e\x9f\x3a\x04\x99\x03\x9d\xdc\x9c\x5b\x6f\xbd\xb1\xc0\x82\xa1\x6c\x06\x5f\x53\xda\x48\x9b\x47\x79\x63\x36\x6b\x74\x68\x17\x5d\xd6\xcf\xae\xca\xdd\x26\xe9\x01\xcd\x15\x09\x61\xf3\xc9\x73\xd1\xea\xc1\x0d\xe0\xfc\x2b\x00\x00\xff\xff\x04\xed\x9e\x58\xa6\x09\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProposersetAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledProposersetAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledProposersetAbi,
		"compiled/ProposerSet.abi",
	)
}

func compiledProposersetAbi() (*asset, error) {
	bytes, err := compiledProposersetAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ProposerSet.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProposersetBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc1\x0b\x11\xc4\x40\x08\x03\x50\x4b\x21\x29\x2c\x2b\x87\xcf\xd5\xbf\x84\x9b\xce\x0b\x7c\x1e\x38\x03\x40\xe2\x5d\xa0\x2c\x3c\x78\xea\xd4\xa1\xe0\x49\x68\x7b\xd7\x95\x59\xfd\x8b\x4e\x89\x76\x79\xf8\x92\x1c\x4d\x8d\x23\xb5\x9e\xa6\xb1\xea\x35\xd8\xdc\x8a\xb1\x71\x5d\x3d\xd3\x0e\xf0\xfe\x03\x00\x00\xff\xff\x81\x85\xe2\xc0\x6a\x00\x00\x00")

func compiledProposersetBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledProposersetBinRuntime,
		"compiled/ProposerSet.bin-runtime",
	)
}

func compiledProposersetBinRuntime() (*asset, error) {
	bytes, err := compiledProposersetBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ProposerSet.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledSafemathAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledSafemathAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledSafemathAbi,
		"compiled/SafeMath.abi",
	)
}

func compiledSafemathAbi() (*asset, error) {
	bytes, err := compiledSafemathAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/SafeMath.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledSafemathBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xca\xc1\x11\xc0\x20\x08\x04\xc0\x96\x0e\x8c\xa0\xe5\x00\x07\xfd\x97\x90\x71\xf6\xbb\x86\xe7\xc3\x56\x03\x70\x30\x04\x42\x6c\x9b\x7a\x78\xb8\x2e\xec\xa3\xc8\xb8\xc3\x14\x37\x2d\x9c\xac\xd6\xeb\xfc\x22\xf3\x54\x9b\x89\x48\xb2\x9d\xcd\x75\xf1\x56\x0a\x77\xc8\x8a\x59\x35\xac\x62\x36\xa0\xf7\x0f\x00\x00\xff\xff\x84\x1f\x85\x61\x6a\x00\x00\x00")

func compiledSafemathBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledSafemathBinRuntime,
		"compiled/SafeMath.bin-runtime",
	)
}

func compiledSafemathBinRuntime() (*asset, error) {
	bytes, err := compiledSafemathBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/SafeMath.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x3f\x4f\xc3\x30\x10\xc5\xbf\xcb\xcd\x99\x90\x60\xc8\xc6\xc2\x86\x18\x60\xab\x2a\x74\x49\x2e\xc8\x92\x73\x67\xd9\xe7\x94\xa8\xea\x77\x47\x2d\x69\x5c\x41\xfe\x54\x05\x04\xac\xf1\x3b\xdf\x7b\xfe\x5d\xec\xd5\x16\x4a\xe1\xa0\xc8\x0a\x79\x8d\x36\x50\x06\x86\x5d\xd4\x00\xf9\x6a\x0b\x8c\x0d\x41\x0e\xcf\xc1\x11\x57\xe4\x21\x03\xed\xdc\xfe\x0b\x56\x95\xa7\x10\x60\x97\x25\x51\x8b\x36\x52\x92\x44\xc3\x7a\x75\x7d\x03\xbb\x75\x76\x94\xa0\x73\x5e\xda\xbd\x46\xa2\x7e\x6c\x12\x62\x59\xee\xb7\x1c\x36\x28\x44\xec\xa1\xda\x61\x87\x85\xa5\xc1\x60\x50\x54\xba\x8f\x8a\x85\xb1\x46\x3b\xc8\x81\x85\x8f\xa2\xa1\xbc\x8e\x5c\xaa\x11\x3e\x78\x4c\x21\xd5\xc7\xd3\x8c\xc9\x9c\x8a\xa2\x7d\x8c\xce\xd9\x6e\xca\x60\xbf\x36\x12\x70\xd9\x62\x6b\x68\xb3\x68\x6e\x9a\x40\xed\xa5\x99\x3f\x7e\x95\xaf\xe2\x51\x8f\x1c\x6a\xf2\x77\xef\xbd\xfe\x0c\xa3\x94\x41\x36\x3c\x3a\x85\x29\x43\x81\x16\xb9\xa4\x87\x7a\x3c\x40\xbf\xfc\x4b\x10\xbf\x0f\xd1\xff\xc2\x93\x9d\x73\x93\x9c\x5c\x13\xd6\xca\xa6\xc7\x34\x92\xd2\x53\x83\x86\x0d\xbf\xfc\x00\x45\x64\xe1\xae\x91\x18\xc6\x30\x1a\xae\xe8\x95\xaa\xe3\x01\x2c\xff\x9a\x13\x05\x53\x63\x30\xc8\xfb\xd6\xe7\x8f\xc5\x53\x1a\x8b\x5e\x44\x2d\xb1\x5e\x1c\x69\x06\xe4\x44\xc5\xec\x0b\x71\x79\xb0\xdb\xc3\x8b\x81\xf6\x53\xb0\xf5\x5b\x00\x00\x00\xff\xff\x73\x6f\x06\xdc\xba\x06\x00\x00")

func compiledTokenAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenAbi,
		"compiled/Token.abi",
	)
}

func compiledTokenAbi() (*asset, error) {
	bytes, err := compiledTokenAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledTokenBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenBinRuntime,
		"compiled/Token.bin-runtime",
	)
}

func compiledTokenBinRuntime() (*asset, error) {
	bytes, err := compiledTokenBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledVotingAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledVotingAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledVotingAbi,
		"compiled/Voting.abi",
	)
}

func compiledVotingAbi() (*asset, error) {
	bytes, err := compiledVotingAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Voting.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledVotingBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xca\xdb\x11\xc0\x20\x08\x04\xc0\x96\x2e\x3c\x4e\x28\x07\x41\xfb\x2f\x21\xe3\xec\xef\x12\x8f\xc1\x85\x00\x02\x77\x80\xfa\xe8\x94\x55\xab\x96\x28\x3c\x04\x31\xea\x4b\x3a\x79\x92\xcd\xa0\xdd\x29\xde\x9b\xd1\xdf\x51\xbc\xb8\xd3\x66\x6b\xeb\xa9\x54\x31\x1e\xa7\x9b\x8e\xcc\xb4\xed\x31\x40\xf2\x0f\x00\x00\xff\xff\x56\x21\x80\x23\x6a\x00\x00\x00")

func compiledVotingBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledVotingBinRuntime,
		"compiled/Voting.bin-runtime",
	)
}

func compiledVotingBinRuntime() (*asset, error) {
	bytes, err := compiledVotingBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Voting.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Constants.abi": compiledConstantsAbi,
	"compiled/Constants.bin-runtime": compiledConstantsBinRuntime,
	"compiled/ERC223Receiver.abi": compiledErc223receiverAbi,
	"compiled/ERC223Receiver.bin-runtime": compiledErc223receiverBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/Owned.abi": compiledOwnedAbi,
	"compiled/Owned.bin-runtime": compiledOwnedBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ProposerSet.abi": compiledProposersetAbi,
	"compiled/ProposerSet.bin-runtime": compiledProposersetBinRuntime,
	"compiled/SafeMath.abi": compiledSafemathAbi,
	"compiled/SafeMath.bin-runtime": compiledSafemathBinRuntime,
	"compiled/Token.abi": compiledTokenAbi,
	"compiled/Token.bin-runtime": compiledTokenBinRuntime,
	"compiled/Voting.abi": compiledVotingAbi,
	"compiled/Voting.bin-runtime": compiledVotingBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Constants.abi": &bintree{compiledConstantsAbi, map[string]*bintree{}},
		"Constants.bin-runtime": &bintree{compiledConstantsBinRuntime, map[string]*bintree{}},
		"ERC223Receiver.abi": &bintree{compiledErc223receiverAbi, map[string]*bintree{}},
		"ERC223Receiver.bin-runtime": &bintree{compiledErc223receiverBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"Owned.abi": &bintree{compiledOwnedAbi, map[string]*bintree{}},
		"Owned.bin-runtime": &bintree{compiledOwnedBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ProposerSet.abi": &bintree{compiledProposersetAbi, map[string]*bintree{}},
		"ProposerSet.bin-runtime": &bintree{compiledProposersetBinRuntime, map[string]*bintree{}},
		"SafeMath.abi": &bintree{compiledSafemathAbi, map[string]*bintree{}},
		"SafeMath.bin-runtime": &bintree{compiledSafemathBinRuntime, map[string]*bintree{}},
		"Token.abi": &bintree{compiledTokenAbi, map[string]*bintree{}},
		"Token.bin-runtime": &bintree{compiledTokenBinRuntime, map[string]*bintree{}},
		"Voting.abi": &bintree{compiledVotingAbi, map[string]*bintree{}},
		"Voting.bin-runtime": &bintree{compiledVotingBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

