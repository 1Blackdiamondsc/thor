// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdd\x6a\xfb\x30\x0c\xc5\xdf\x45\xd7\x7e\x82\xdc\xf5\x01\xfe\xf0\x67\xb7\x25\x0c\xa7\x51\x33\x41\x2a\x19\x4b\x6e\x97\x95\xbe\xfb\x68\xb0\x9b\x6e\xfd\x58\x18\xfb\x80\xdd\x05\x7c\x64\xfd\x74\x74\xe2\xe5\x1e\x56\xc2\x6a\x9e\x0d\x2a\x8b\x09\x1d\x10\x87\x64\x0a\xd5\xb2\x76\xc0\x7e\x83\x50\x41\x87\xf6\x3f\x4a\x10\xc5\xa8\xe0\x40\x92\x65\xc9\xbe\x28\xc0\x81\x0d\xe1\xf8\xe5\xdb\x36\xa2\xea\xb2\x86\x43\xed\x20\xf8\xc1\x37\x3d\x42\xb5\xf6\xbd\xa2\x03\x35\x6f\xf8\x2f\x99\x6f\xa8\x27\x1b\xa0\x82\x2d\xe1\x6e\xaa\x5e\x27\x5e\x19\x09\xc3\xc1\x9d\x93\xe5\xea\x13\xda\xa9\xef\x63\xc8\x5c\x17\x00\xe3\x0d\x45\xd5\x4c\xc7\x8d\x48\x3f\xa2\xe5\x33\x9f\xec\x49\x22\x29\xbe\x19\x6c\x16\x3a\x0b\x17\xd1\x47\x03\xdc\xb4\x56\x76\x3c\xc2\xcf\xf1\xf4\x67\x1c\x2d\x44\x77\xec\x0c\x67\x61\xb8\xba\xf6\x2c\x24\x26\x23\xdf\xd3\xcb\x2f\x99\xdb\xa1\x2d\x1a\x45\x36\xc4\x3f\x17\xdb\x71\xae\x6f\xb5\xf5\x36\x7d\x8b\xba\x9a\xca\xd5\x22\x71\x77\x0e\x17\xb1\x23\xb5\x77\xb9\xfe\x1a\x3c\xcf\xc2\xc3\x46\x92\x5e\xe3\x23\x6e\xf1\x19\xdb\x92\x88\x82\x7b\xb4\xf6\xfa\xcf\x94\x15\x0f\x99\x17\xdb\x49\x86\xdb\xa3\xbf\x9f\x6d\x79\x7f\xbf\xa7\xa2\x7c\xdf\x8c\x7d\x2f\xca\x33\x75\x89\x58\xbf\x06\x00\x00\xff\xff\x79\x46\xaa\x27\xc5\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x09\x7a\xeb\xbc\x0a\xdd\x12\x20\x81\xd0\x72\x34\x58\xfb\x5f\xc2\xfb\x10\x72\xec\xb8\xe9\x6d\xd2\xd7\xe9\x4f\xbe\xde\x9b\x10\x59\x3a\xc0\x61\xb2\x05\xec\x1d\x81\x49\x00\x62\x10\x04\x41\x00\x0d\x9c\x04\x00\x02\xa7\x06\x08\x9f\x7c\x65\x80\x28\x61\xac\x17\x8a\x82\x04\x18\x52\x64\xf4\x82\x71\x9e\xa3\x9c\x4c\x6a\x12\xc8\x39\xb8\x74\x90\x4b\xb5\x17\x6e\x95\xeb\x94\x62\x10\x97\xe6\x28\x3d\x13\x44\x97\x6a\x75\x69\x23\xa9\x09\x81\xa7\x94\x20\xba\xb4\x53\x88\x51\xe2\x70\xa9\x6c\x2e\x1d\xd4\x28\x6b\xdd\x5c\x5a\x89\x13\x57\xd3\x56\x61\x74\xae\x21\x22\x1b\x8a\xbc\x6c\xe0\xd2\x29\xb1\x7f\x03\x0c\x16\x5b\x1f\x81\x51\x41\x41\x80\x00\x50\x49\x11\x82\x12\x93\x06\x45\x45\xb6\x3f\xf2\xdf\x32\x32\x28\x30\xe6\xb5\x76\xfd\x4f\x0a\x1a\x34\xd8\x19\x5c\xed\x2a\x04\x3f\xb9\x4f\x9c\x4a\x30\x77\xd1\x08\x6b\x27\x45\xbb\x96\xa7\x87\x5a\x30\x14\x0c\xfe\x36\x29\x60\x26\xff\xb6\x63\xcb\x08\x21\xc3\x08\x87\x4e\xa3\x5f\x74\xc2\x10\xcd\xef\xa6\x47\xe0\x74\xf3\xd5\x47\x2f\x94\x43\x97\x8c\x79\x5e\x8d\x8c\x7c\x2f\x65\xc7\x1a\xca\xc4\x6a\x5a\x2e\x1c\x18\xf1\x8a\x23\x66\xa3\x5e\x4a\x77\xb6\xa5\x57\x10\xbd\xb2\xf6\xde\x37\xff\xb0\x18\x66\xb9\x20\x25\xa0\xaf\xb2\xd8\x21\x31\x5f\x5f\x24\x3b\xb3\x16\x4e\x47\x98\x27\x07\x3c\x5e\x15\x72\xc8\x34\xf7\x3a\x71\xcd\x19\xb5\xd8\x45\x1a\x43\xb2\xbd\x5d\xcb\x1b\x5b\x0e\xdf\x48\x6e\x17\xdf\x10\x8c\xab\xc6\x98\x04\x41\x31\x7f\x33\xef\x89\xcb\x87\xbc\xa7\x30\x3e\xc1\x7b\x4a\xf9\xaa\x53\x85\x6f\xe7\xbd\x96\x7e\xb5\x6d\xbd\xc6\x5f\x80\x7e\xe0\xf8\x98\x0f\x38\xcc\xfb\x04\x53\xc7\xf8\x19\x6e\x3c\xc5\x8a\x0c\x69\x47\x6e\x18\xa7\xff\x5b\xab\xee\x7f\xf3\x1f\xc7\x27\xd8\xf9\xf6\xfc\x75\xe5\xb4\x45\xc8\xd3\x27\x93\x0f\x13\x8b\xe9\x0a\xe0\x6b\xed\x13\x99\x77\xab\xa2\xcc\x4a\xc2\x31\x1b\x32\xab\x45\xc5\xea\xca\x0f\x64\x06\x43\x81\xcb\xf6\x01\xd1\x30\xc7\x61\xb5\xe2\x64\x33\xff\x93\xbd\x7e\xfc\x2c\xd6\x10\x5e\x59\x6d\x49\x77\x5a\x3e\x02\xdc\xb1\x10\x60\xc6\xa2\xfe\x88\x4d\x8f\xcf\xee\x63\xb3\x15\x83\xe2\x44\xc6\xa0\x0b\x19\x1e\x68\x39\x5d\xd0\xde\xf8\x67\xde\xb1\xfc\x63\xab\xa4\x4e\x06\x21\xb4\x3e\x33\x44\xc6\xb7\x6c\xf2\x33\x95\x3d\x4a\x33\xee\x3e\x52\xe4\xa8\xf8\xbc\x46\x40\x98\x2d\x13\xe8\x4b\xf6\xb7\x3c\x9a\x81\xd9\x33\x95\x6b\x91\xfd\xb3\xdb\xff\xa5\x3c\xf4\x55\xf6\x57\x74\x4c\x56\x0b\xe8\x60\x32\x22\x2e\xfb\x33\xbe\xb1\xbf\xf8\xd5\x37\x0d\x20\xb8\x05\x2d\x8f\xfb\x35\xb4\x71\x1a\x1b\xd7\x47\x31\x0d\x5f\x10\xd1\x3b\x0a\x0d\x6f\xcf\x96\xf6\xd1\xd9\xbf\xe5\xf7\x9b\xdd\xac\xba\xdd\x6c\x37\xab\xa4\x71\x91\x5b\x5f\x1c\xee\x50\xbd\xca\x4d\xb4\x7f\x86\x1f\xb8\x79\xd5\x16\x84\x82\x7b\xff\x59\x5f\xec\xd2\x46\x02\x2e\x19\x0a\x4b\xb7\x1e\x76\x4b\x3c\x3a\xe0\x66\x85\x3b\x67\xd2\x21\x29\x6e\x5b\x1f\x41\xa5\x87\xb1\x8d\xd8\xb9\xa3\x8a\x6c\x9a\x5b\x19\x89\x12\x1a\x86\xbd\x3f\x44\xf6\xf7\xbf\xfb\xb9\xb2\xfa\x83\x23\x4f\xff\x7f\xec\x53\xdc\x77\x32\xab\x14\xb1\xac\x93\x66\xad\xff\x81\xec\x2d\xfd\xae\x3f\x53\x5a\x95\xe7\xf7\x38\x3d\xab\xa0\x55\x6a\xeb\xda\x56\x2f\xa7\x18\x27\xca\x47\xb9\x3a\x45\x7c\x3a\x57\x47\x8d\xc7\xbe\x73\xe7\xc4\xa7\xf8\x3e\x77\x95\xb6\xe0\x8f\x66\xf6\x07\x5a\xd4\xf1\xbe\x16\xbf\x19\xe7\xde\x67\xce\xbe\x07\x57\x37\x98\x28\x9e\x7a\x6e\x99\x3d\xa1\x12\xde\xf5\x84\xf1\x4b\x7a\x42\x2d\xe1\x3f\xd7\x13\x2a\xe7\x77\x7b\x42\x04\xad\xfc\xa3\xd9\x41\xb7\xed\x32\x61\xe8\x50\x25\xa5\x23\x67\xaf\x95\x19\xee\xee\x6f\xdc\xe5\x47\xe4\xa3\xfe\xe7\x37\xf5\x7f\xaf\x63\xf0\x1a\xc6\x2f\x63\x2a\x70\x9c\xb5\xdf\xbe\x9b\x0b\x78\x71\x80\x20\x78\x67\x60\x5c\x30\x2f\xdc\xac\x92\xef\xe7\x3f\xfd\x65\x0d\xf2\x75\x2a\x46\xc8\xad\x79\x6c\x58\xf5\x0f\xc9\xe3\xed\x45\x74\x83\x7a\x48\x21\x16\xdd\x62\x2a\x4d\x03\xca\xc6\x00\xa5\x51\xc0\x96\xa1\xc8\x86\x1a\xb5\x15\x22\xe5\x11\xa1\x43\xda\x4a\x61\x02\xe0\x2d\xd6\x50\x60\xcb\x1e\xb1\x0f\x6a\xe7\xdd\x7c\x73\xcb\x6a\x2f\xd9\xe3\xeb\xe6\x05\xf4\x59\xba\xc8\xe2\xa5\xe5\xa9\x19\x63\xb2\x70\xf2\xef\x75\x4b\x6b\x9a\xa1\x89\xb0\x4a\x39\x4f\x33\x53\xc2\x53\x12\x1f\x54\xc5\xd2\xda\xd3\x55\x51\xfe\x44\x9d\x8b\xa7\x3a\xc7\xbf\xc7\x88\xbd\x72\xcd\x6c\xd7\x12\xde\xcf\x30\x53\xe6\xf3\x6e\x5c\x51\x1f\xdf\x9d\x5b\xaa\x96\x6f\x9f\x5b\xe2\x3b\x73\x4b\x6d\xfa\xc7\xe7\x96\xf8\xce\xdc\xd2\x28\xbf\x33\xb7\xfc\x09\x56\x4c\x36\x78\x37\x53\x79\x76\x20\xe7\x5a\x97\x86\x24\x19\x12\x3f\xfb\x8c\x03\x20\xf5\xcf\x3f\x21\x59\xcf\x48\x68\xd7\xe8\x7c\x3f\x89\xe0\x51\x07\xb5\xea\x33\xed\xeb\x9c\x0b\x1a\x98\xcd\x3b\x56\xb8\xa7\x1f\x84\x93\xe2\xba\xc7\x7a\x66\x12\x7a\x5f\x05\xbe\x8a\x77\xbf\x55\xaf\x38\xa7\x1e\xef\xf1\xbe\x81\x9e\xd9\x37\xe0\x3f\xf6\xa5\x67\xeb\xf7\xdb\x28\x38\xee\x7f\xe6\xc9\x46\xc0\x6c\x9d\x0d\xe0\x98\x4f\xad\x7a\x9a\x4f\x93\xac\x82\x8d\x61\x8c\xd7\xa0\x76\x42\x52\x66\x3b\xa3\x17\xd9\x11\x4c\x96\x58\xee\x65\xe6\x95\xad\xed\xd7\xe4\x7a\xcc\x35\x7b\xf6\xe8\x85\x39\x29\x31\x2a\x31\x67\xdc\xa7\xcc\xa3\x13\xb4\x35\x5a\x76\x3d\xd7\x7d\xea\x5e\xc3\xc5\x06\x47\x4f\xd8\xfb\x8c\x17\xeb\x43\x94\xf6\x53\x3a\xef\xb5\x62\x65\x99\x15\x77\x6e\xd1\xda\xcf\x7b\xe4\x19\x58\x05\x85\x85\x52\x49\x25\x51\x00\x36\xe0\x32\x52\x29\xa2\x11\xb8\xe5\x08\x83\x7a\x0b\xa1\xf1\x36\xe2\x60\xd2\xaa\x22\xa9\xaa\x86\x84\x5b\x2c\xd2\x4c\xdf\x3a\x24\x96\x52\x52\xd1\xad\xb6\x66\xa6\xff\x5f\x00\x00\x00\xff\xff\xc2\x31\xc3\x3c\x10\x1c\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xc1\x6e\xdb\x30\x0c\xfd\x17\x9d\x7d\xea\xb0\x61\xc8\xad\x28\xd0\x9d\xb6\x02\x6b\x6e\x45\x50\xd0\x32\x93\x08\x93\x29\x43\xa2\x9c\x1a\x45\xff\x7d\xb0\xa3\xc4\x2e\x62\xd9\xce\x92\xa6\xd9\x29\x01\xf4\x28\xf3\x91\x8f\x8f\x7a\x7a\x15\xd2\x90\x63\x20\x16\x33\xb6\x1e\x13\xa1\xa8\xf0\xec\xc4\xec\x69\x91\x08\x82\x1c\xc5\x6c\xfb\x93\x08\xe3\x39\x1c\xbd\xee\x4e\x44\x22\xb8\x2a\xea\x7f\x8e\xad\xa2\x95\x78\x5b\x24\xa2\x80\x0a\x52\x8d\x62\xb6\x04\xed\x30\x11\x8e\x81\xf1\xa7\x67\x48\x95\x56\x5c\x89\x99\x28\xbc\xc5\x36\x74\xe9\x49\xb2\x32\x24\xde\x92\x6e\x3a\x21\x7a\x9f\xcf\xfe\xa3\xcf\x16\xa5\xc2\x12\x6d\x7b\x05\x64\x99\x45\xe7\x9a\x1b\x76\x28\xc8\x8d\x27\x6e\x31\x5e\x11\xdf\x7c\xfd\xd6\xa4\x18\x30\x50\x14\xd6\x94\x11\x6e\xce\x4b\x59\xdf\xb9\xbf\x20\x35\x46\x4f\x24\x48\x86\x76\xa0\x31\x9a\xd1\xaa\xb3\x61\xd0\x8f\xbe\x28\x74\x35\x56\xfc\x2e\xb5\xf1\xe4\x4a\x85\x9b\x13\xaa\x2f\x0d\xb1\x05\xc9\xb7\x59\x36\xd2\x01\xc2\xcd\xc3\x86\x7a\xfb\xd4\xd2\x74\xc8\xbf\x02\xee\xde\xd8\xbb\x70\xf9\x3b\xc6\xe7\x2e\x79\x9c\xdb\xd2\x9a\x7c\x98\x13\x9b\x93\x55\xc7\x16\xc8\x2d\xd1\xde\x6f\x3f\x76\x85\xd2\xcb\x50\xaa\x1c\xb4\x9b\xa2\xbb\xef\x97\x99\xf9\xe9\xaa\x33\x53\x24\x77\x25\x7a\x93\xa0\xf5\x98\x8f\x35\x18\x3c\x59\x75\x75\x3a\x3e\xe6\xe3\xcf\xe1\x34\x52\xb7\x8f\x54\xdd\x31\xc3\x37\x60\xfc\x2d\xd1\x15\xf2\x6d\x09\x4a\xd7\xc9\xdc\x59\xcc\x14\x4f\xd2\xf1\xc5\xfc\x73\xda\xf6\xd2\x2a\x57\x7d\x0d\xed\x0a\xa3\x21\xf7\xc3\x9a\x0d\xaf\x7f\x03\xe3\x30\x1a\x5f\x0a\x65\xfb\x30\x9d\xb9\x58\x83\xc5\xb9\xf9\xac\x59\x98\x3c\xe1\x67\xdb\xff\x8d\x55\xdc\x5e\xdf\x23\xe0\x18\x33\x4b\x41\x03\x49\x7c\x58\xf6\x13\x08\xc7\x1f\xaa\xf5\xe8\x1e\x71\x55\x9e\x1a\x7d\xf9\xa7\x63\xac\x9c\x9d\x36\x56\x8c\xee\xcb\xcd\x81\xfa\xb3\x41\xc7\x18\x1f\x4a\x38\x74\x9e\x38\x38\x3a\x92\x2d\xe4\xa8\x19\x97\xde\x5a\x24\x9e\xab\x1c\x1f\x19\xf2\xe2\xaa\x0d\x6e\xca\xca\x5a\x83\x5d\xe1\x27\xd9\xd1\x19\x1f\x7a\xff\x97\xb5\x74\x38\xba\x02\x29\x1b\xf1\x1f\xd0\xda\x6c\x82\xc5\xf4\xb0\xb4\x98\x83\xa2\x7a\xbe\xcf\x2f\xc6\x7d\xf0\x96\x63\x8f\x59\x1c\xd4\x08\xb4\x4e\x41\xfe\x69\xc2\x81\x0c\x55\xb9\xf1\xae\x4f\x06\x8a\x32\x7c\xc1\x6c\x77\xf7\xf8\x1b\x25\x12\x10\x93\xd1\x1e\x1e\x3e\xbd\xc3\x97\xa0\xfd\xf0\x96\x9e\xb7\xaa\x0a\x20\x2c\x91\xf8\x9f\x29\x0d\xe8\x20\x12\x11\x97\xc5\x49\xc4\xb6\x8b\x18\xf4\x99\x88\x1d\xdb\xaa\x63\x3b\x35\xb0\x0c\x22\x21\xd3\xcc\x3c\x12\x3c\xe1\xfd\xf6\x58\x6f\xb0\xfb\x77\xb4\x43\x05\x17\x7f\x03\x00\x00\xff\xff\x5b\xc2\x1f\x42\xe9\x11\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x0d\x96\xe4\xaa\x0a\xde\x12\x20\x20\x2e\xc7\xdf\xfd\x2f\xe1\x1d\x35\x49\x25\xe9\xea\xae\x4a\xcf\xf4\x64\xce\xbb\xd3\x75\xa6\x6e\x2e\x1a\x45\x04\xf9\x00\x4b\xa1\x7f\x18\x84\x14\x80\x9d\x22\x28\x02\x34\x14\xaf\x00\xe0\xc4\x67\x40\xf8\xe6\x5f\x00\x60\x75\x6d\xf9\x43\x35\x50\x07\xda\x4a\xa9\xe0\x90\xc7\x3c\x2a\x7e\x50\x83\xd4\xe8\xd3\xa4\xa2\xf1\xa4\xa2\xa1\x42\x29\x65\x52\x4b\x9d\x54\x72\x18\x48\x32\x0e\x2a\x81\x5f\xa9\xc9\x3c\x2d\x7d\x49\xda\xa4\x3a\x74\xb9\x8a\xfa\x49\x2d\xb6\x50\xb5\x01\x9b\x9f\xb3\xb9\x75\x04\xce\x31\x48\x88\x30\xa9\xeb\x08\xa2\x1c\x40\x5c\x1b\x54\x06\x98\x54\xd5\xa8\x25\x14\x9d\x54\xcd\x0b\xb5\xb0\x82\xe4\xa5\x6f\x5e\xfa\x7a\x88\x60\xe4\x26\xbf\xe2\xc2\xa4\x06\x29\x16\x12\x2f\x54\x5b\xe4\x10\x42\x03\x60\x9e\x23\x28\x2e\x72\x88\xae\xb5\x18\xf2\x5c\x9b\x6a\x5a\xa8\x01\x24\xe4\x94\x26\x35\x96\x49\x2d\x45\xa9\x16\x57\x07\xd5\xf7\xb5\x49\xea\x3b\x69\xd0\x8a\x24\xc7\x28\x5d\x96\xb0\xec\xef\xa4\x0e\x4a\xe8\xfd\xbd\x13\xed\xfd\x19\x04\x0d\x0c\x14\x08\x00\x8d\x0c\xc1\x19\x09\x99\x33\x34\x94\xfe\x8f\x66\x5b\x40\x01\x03\xc1\xb0\xf4\x0d\x60\x60\xce\x5c\x1f\x5d\x52\xef\xdf\x27\xeb\x33\xf0\x58\xb9\x11\x8c\xf7\x8d\x61\x19\xc3\xb0\xbf\x25\x5d\xef\x90\x6a\x9f\x5f\x60\x7e\xc2\xf8\x37\xdb\x15\x70\x68\xd0\x1c\xcb\xeb\x32\x96\xeb\x73\x6b\xe7\xd1\x8d\xf9\xdd\x58\x0b\x40\x04\x87\x01\xf5\xc8\x67\x1f\x39\xd0\x1c\x7b\x5d\x63\x40\x70\x01\x9a\x7b\xc8\xc6\xda\x59\x36\x99\xbb\x6d\x74\x79\x38\xf1\x9b\x3e\xbf\xfa\x43\x7d\xc8\x24\x0c\xb9\x38\x39\x52\x64\xae\xda\x27\x3d\x48\x9d\x50\xe6\xe7\xc4\xfd\x17\x3c\xd7\x70\xe6\xb9\xa1\x22\x58\xb4\xe3\xc8\x6f\x8f\x48\x48\xa7\x11\x49\xca\xef\x92\xc2\xf7\xdf\x5e\x24\x66\x09\xfa\xba\xba\x86\xad\xfc\x6a\x3c\xf3\x9b\xea\xfd\xfc\x7e\xba\xe7\xa1\xb6\x5f\xdc\x73\xaa\xee\xbc\xe2\xda\xbf\xab\xa3\xe3\xc8\x0a\x9d\xaf\xf9\xfd\xf6\xe8\xee\xc3\xfe\xbb\xbf\x68\xff\xab\x4b\xa7\xfd\x77\x1f\xf6\xdf\xfd\xd5\xfb\xdf\xe2\xc9\xe6\xaf\xcc\x71\xa5\xef\xdb\x3b\xce\x90\x4e\x12\x64\xd1\xfb\x25\x38\xe5\x85\x98\xf2\x37\x4f\x32\xf6\xfe\xbc\xae\xdf\xa7\x19\xd7\x29\xcb\x7a\x1c\xb9\x93\x06\x73\x3e\xcb\x5f\xb0\xdd\x2f\xff\x4f\x57\xc0\x2d\xfd\xe2\x09\x26\xcc\xe7\x15\x7b\xf8\x1d\x2b\x5e\x38\xd4\xc4\xdf\xd4\x19\x09\x67\x7c\x24\x21\x28\xa2\x11\xff\x18\x3e\x92\xf2\x1a\x1f\x49\x7a\x0f\x1f\x29\xfc\x1c\x3e\x52\x3c\xe3\x23\x75\xe1\xb1\x6b\xbd\xa5\x8f\xfc\x74\x47\x4c\xfd\x41\x7e\xbb\xf9\x6d\xa7\x37\xc6\xbb\x67\xb7\x7b\xde\xef\xa0\xac\x52\xf8\x9a\xdb\x8e\x14\x8f\xdc\xc6\xf4\x93\x68\x0e\x2d\x94\x93\x65\x6b\xb2\x33\x0f\xf5\xb7\xf9\xd2\xa7\x3c\x04\xab\xbf\x68\x9b\xfe\x83\xff\xf7\x7f\x8f\xff\xc7\x14\xe1\xaa\x65\x8f\xe8\x26\x29\x62\x83\x0d\x1f\x4d\xbb\xec\xf6\x33\x23\xe0\x6e\xcf\x10\x1f\x63\xf9\x26\xca\x22\x4c\xdd\x15\x56\x15\x4f\xea\x7d\xb8\x12\x01\xf7\xb1\x56\x3b\x9d\xb3\x76\x5a\xb7\xc7\x11\x5d\xbb\x3f\xe0\xf5\xe1\xf1\xdc\xe7\x24\x18\x3c\x5c\xda\x83\xdf\x35\xb3\xf5\x1d\x14\xb9\x88\x76\x2e\x4a\xa9\x59\x96\x54\xb1\x4a\x4d\x35\xfb\x22\xa9\x20\x37\x8f\x4c\xbe\x60\x35\x6e\xae\x14\x70\xc8\x19\x9a\x4f\x44\x01\xab\x24\x02\x88\xd9\xb2\xcf\x2e\x05\x12\xe3\x77\xf5\x2a\xf6\x53\x7c\x68\x65\xa0\xd9\xbe\xed\xf1\x7e\xcf\x7b\xbc\x12\x8c\x14\x31\xd3\x38\xff\xba\x25\x76\x6a\x3e\xfb\x3f\xcb\xc5\xf0\xd8\x6f\xf6\x2c\x87\xf8\xce\x5d\x92\x9f\x02\xd0\x78\x97\xef\xd2\xb6\x00\xc2\x01\x56\xcf\x13\x00\x7e\x8c\x13\x9c\xa7\x57\xa8\x33\x47\x72\xfb\xca\xd7\x35\x1b\x0a\x1b\xbe\x3f\x32\xd0\xf4\xa1\x76\x49\xf7\x81\xd0\x4f\x0b\x5b\x30\xc2\xa6\x8d\x0b\x2f\xa1\x15\xd3\xbd\x7e\x29\x42\x0c\x79\xe8\xd6\x94\x94\xff\xff\xd7\x91\x6b\xd6\xd3\x35\x6a\x91\xd3\x01\x9f\x0f\x7b\x8d\x51\x4c\x9e\xd8\x6b\x4c\x67\xfc\x18\x53\x9c\x92\xd7\x81\xfb\xfb\x69\xd1\xa9\x79\x79\x7f\xa1\x82\x74\x6c\x48\x1d\x11\x2e\x48\x2e\x56\x13\xdf\x11\xe4\x78\x56\x13\x73\x8a\x58\xa9\x4d\x7f\xb8\xcf\xae\x0e\x0e\x50\xd2\xf2\x66\xf2\x30\xde\x74\xab\xb7\x31\xbb\xcd\xdb\xdc\xa2\x55\xc2\x5d\x8e\x8b\x96\x57\xea\x67\x2d\x42\xca\xa1\x9f\xef\x7d\x67\x2c\xdc\x25\x0f\x40\xe1\xbe\x8b\x5c\x9e\xef\xe2\xc2\xdf\x6d\xfb\x05\xb8\x7a\x6a\x45\xc8\x4a\x9b\xc4\x6e\xe4\x68\x4a\xec\x33\xbd\x5f\xf8\xbb\xed\xf4\x3a\x48\xac\x38\x1d\x12\x9b\x56\x77\x9b\x96\xdd\xb3\x5b\x2f\x35\xfb\x3f\x79\x16\x6d\xc8\xf7\x92\x57\xb3\x4b\xf3\xfb\x56\x4a\x23\xa1\x58\x30\x55\xca\x16\x92\x86\x4c\x09\xd4\x5a\x76\xde\x4a\x8c\x41\x28\x45\xdf\x5d\x60\xe6\x88\xa8\x64\x4d\x24\x72\x69\x42\x2e\xb9\xda\x4c\x2f\x22\x5f\x9a\xd9\x58\x0a\xab\x0d\x8e\xec\xc1\xc0\x1e\xc1\xad\x99\x84\xb5\x4d\x01\xe9\x80\x8a\x2b\x0f\x5f\xa6\x43\x33\x7e\x2e\x22\xd8\x3c\x78\xf5\xf9\xe4\x95\xab\xc9\x13\x5c\x5e\x03\x9c\xfb\x85\xf0\x14\x97\xd7\x28\x87\x9e\x63\x95\x77\x63\xce\x3f\x8e\xb6\x5b\xa4\x7f\x68\xfb\x8c\xb6\x07\x62\x6b\x89\xff\xa8\x86\xb7\x5a\x4e\x9a\xdb\x9a\x37\x35\x7b\x64\xd0\xbb\x55\x1a\x9b\xeb\xd8\xa8\xbf\x83\xd0\x4c\xbc\x89\xf9\xcd\xf6\x7f\x2c\x2b\xa1\x5f\xdd\x25\x58\x4e\x1c\x64\xc0\x9f\xab\x86\xbc\xcb\xc1\xf3\x2c\x28\x41\x3f\x0b\xb9\x6b\xb9\x9b\x9a\xbe\x66\x3b\xd7\xff\xbe\xd0\x50\xde\xe3\x04\x84\xdc\xcf\x9f\x57\xfe\xf2\x7b\x33\xe1\x63\x26\x93\xe0\x96\x1a\xca\xcc\x7c\x21\xf6\x56\x7f\x8a\x3b\x78\xcd\x44\xf7\xe6\xa3\x16\x21\x92\x5b\x4e\xca\x57\x98\xf5\x46\x4c\xbd\xae\x97\xe9\x66\x5e\xf6\xb2\xd7\x2e\xfb\x35\x63\xff\xd1\x27\x6e\x67\x45\xff\xd6\x9d\xff\xfd\x67\x83\x9f\xdb\x60\xd7\xe6\xd5\x2e\xe4\x8a\x5d\x0c\xbc\xd2\xdf\x72\x73\x97\x84\x11\x67\xb4\x8c\x64\xb5\x47\xcb\x4c\xa3\x8d\x66\xdb\x8c\x1d\xd1\x21\x8b\xe7\x91\xe1\x33\x9a\x56\x2c\x6c\x84\x38\x5b\xc1\x7a\x64\x39\xae\xae\x20\x52\x99\xd1\x92\x5b\x22\x16\xca\x6c\xba\xbd\xa3\x5f\x5a\x10\x62\x4d\xfc\xbc\x6d\xc6\x13\xaf\xa2\xa0\x61\xc7\xb4\xc6\x4b\xd3\x9e\x17\x1e\x41\xfc\xa3\x25\xf0\xac\x41\xe2\xc0\x6d\x06\xa7\xff\xa7\x75\xae\x23\x7d\x60\x0b\x7e\x68\xf3\xb3\xac\xe7\xa8\x6c\x36\xe7\xce\x98\x0a\x9d\x3b\xd5\xe7\xd1\xb1\x3b\xe6\xa2\xd6\x9e\xdc\xce\x98\xca\x64\xae\x64\xb6\xcb\xa1\xbd\xef\x58\xdf\x89\xd9\xa6\x07\xff\xe7\xdc\xd8\xb3\x4b\xb9\xee\x8b\x7a\xdf\x02\xd5\xe2\x1c\x50\x05\x6d\xb9\x61\x6e\x55\xc5\x39\x70\x95\x6a\x4c\x6a\xb5\x36\xc9\xd8\xc8\x07\xc4\x16\x43\x09\xdc\xc8\x18\xac\xd5\xc0\x42\xcd\x9b\xf9\xfe\xd9\xec\xfe\x9d\xca\x97\x7b\x5e\xf5\x8a\xce\xf0\xdf\x09\xf2\xd6\x09\x32\x68\x71\xa1\x1f\x2b\x40\x87\x9a\xa4\x7e\x52\x93\xdc\xd5\xd1\x98\x66\x8d\x67\x3b\x91\xdc\x45\x4f\xbd\x55\x7c\x17\xeb\x94\x51\xf3\x7d\xd0\x70\xd2\x78\x4f\xa3\x49\xd3\x3d\xcd\x4d\x9a\xed\x69\xfd\xd4\x91\x00\x72\xfe\xac\x11\x19\xa2\x80\x0e\x04\x72\xb4\x56\xc1\x53\xfe\x12\x05\xa3\xb9\x27\xd6\x2a\xa4\x27\x6b\xa5\xfb\xea\x4b\x7f\x7b\x1e\x59\x11\x35\x76\xb4\xbd\x55\x00\x2f\x46\xf8\xff\xd1\x0a\xe0\xc5\x88\xf2\x96\x0a\xe0\xd8\xdb\xb2\xf9\xc9\x6e\x65\xe9\x05\xde\x3b\x7c\x5b\xbc\x33\xb7\x1a\x54\xee\xe6\x63\x22\x0e\xb9\x9d\x0f\xda\x90\x4f\x40\xa1\x02\x94\x7d\x45\x8e\x4d\x6d\xb8\x97\x89\x3e\x29\x0e\x2c\x39\x4f\x5a\x98\xd5\x1c\xf4\xd9\xc6\x59\xea\x53\xb4\x05\xeb\x55\xff\x39\xd6\xfb\xac\x6d\xd1\x26\xc3\x7e\xde\x1a\x8c\x11\x5b\x3f\x3b\x7c\x55\x0b\xfc\x65\x14\x36\x22\xfd\xcf\x51\xa4\xfb\xb2\xd5\xbe\xc4\x96\x3a\xa2\x19\x7f\xf6\x25\xcb\xad\x8c\xb9\x26\xa3\xfc\xc6\x0d\x0b\x3e\xdc\xb0\x60\x36\x6e\x42\x9f\xfa\xf3\x17\x7f\x4f\x6e\x58\x8c\x9b\x4e\xcb\x5c\xe3\x77\x0d\x0c\x3b\xff\x80\xb3\xb7\x3d\x74\x7f\x3e\xe3\xee\x99\x76\xcf\x6e\xf7\xcc\xf3\xb9\x63\xca\x9d\x0f\xb5\xe8\xff\x64\x96\x07\xad\x9e\xe3\x73\xab\x61\x7a\xe7\x47\x3c\xdf\xa9\xad\x1a\xcd\xa8\xfd\x45\xdd\xe4\x36\x6f\xfd\x24\x6a\xbf\x8b\x97\x5d\xd4\xfe\xec\xcc\x56\xc4\x10\xf2\xb3\x6a\x2f\x86\x68\x1f\x22\x16\xde\x62\x92\x90\x4e\xf7\x4f\x31\x64\x70\xee\x5c\x0b\xc6\x90\xd3\xd7\xb5\x60\x0c\xb5\xae\xb5\x60\x0c\x35\xbf\x53\x0b\x1e\xef\xa5\xe0\x46\x84\x1a\xd9\xaf\x95\xbc\xfb\x6e\x1e\xbd\x57\xfb\xbc\x93\xbf\x5d\x86\x2e\x56\xf8\x57\xfb\x7c\x5f\x62\xd7\x70\xda\xd5\x7b\x5d\xf7\x54\xb7\x30\x05\x7b\x52\xdd\x3a\x65\x3e\x36\x3c\x7f\x5b\xed\xe3\xe7\xe2\xfd\xaf\xab\xbd\xcf\x6f\xbf\x5d\xe7\x68\x89\x8f\xb2\x2c\xf7\x4e\x97\x53\x31\x4b\x99\x39\x29\x37\xbd\xda\xf0\xf8\xf8\xb8\xad\xfc\x40\x1f\x7b\x2c\x7d\xd7\x2e\xcc\x9c\xe2\xb2\x92\x26\xe2\x37\xaf\x76\x23\x47\x9b\x57\x4b\x83\xab\x3a\x10\xc1\x76\x37\xfe\x56\xee\xf6\x67\xc7\x85\x7a\x1d\xaa\xc3\x9b\x39\xa7\x27\xc8\xe5\x2f\xd8\xe3\x85\x93\x5b\xbd\x7b\x80\x8f\x76\x69\x64\x3c\xe3\xe4\xf5\x17\x0f\x0b\x3a\xaa\xec\xc4\xb7\x3a\xb2\xd0\xf8\x34\xa7\x4c\x33\xd3\xbe\xf6\x97\xb4\xf4\x47\x73\xfd\xac\xfe\xf8\x86\x6f\xea\xb5\x29\x7f\x37\xa2\x00\xf0\xe5\xfb\xbf\x79\x5e\x7e\xf5\x4c\xab\xc4\x4e\x77\xbf\xa7\x24\x68\x3b\xcb\x18\x79\xe0\xb9\x5a\x64\x60\x3b\x32\xee\xde\x69\x5d\x6d\xa1\xb9\x5a\x60\xe4\x2d\x3b\x57\x4b\x79\x21\xb3\x39\xce\x36\x4a\x3f\x89\xe6\x28\x33\xf2\x79\xf6\x16\x3d\xcd\x86\xea\x3e\xc2\x52\x80\xd8\x21\x07\xf9\xe8\xa3\x27\x07\x62\x04\x25\x17\xe0\xc2\x56\x72\x31\xe7\xbd\x54\xcd\x35\x68\x4b\x02\x11\x10\x9b\x85\x2a\xd5\x53\x45\x81\x02\x5e\x39\x8a\x48\xa3\x16\xa5\x78\x17\xb1\x4b\x1a\x28\xfc\x2f\x00\x00\xff\xff\x80\x03\x55\xbc\x84\x3e\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

