// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xc1\x6e\xc2\x30\x0c\xfd\x17\x9f\x7b\x82\x5b\x6f\x93\x76\xdd\x17\x20\x54\x19\x62\x36\x4b\xc5\x89\x62\x87\xad\x43\xfc\xfb\x54\xd4\x12\xca\xa0\xdb\xd8\x04\xda\x31\xd2\xb3\xfd\xfc\xde\x73\x66\x5b\x58\x7a\x51\x43\x31\x28\x2d\x26\x2a\x80\x25\x24\x53\x28\x67\x5b\x10\x5c\x13\x94\x50\xa1\x73\x11\x0a\xb0\x26\xb4\xcf\xf6\x45\xaa\xb0\x9b\x17\x3d\x22\x44\x1f\xbc\x52\x0b\xf2\xc9\x4e\xeb\xd5\xd0\x92\xe6\x06\x89\xc5\xa6\x13\xd8\x15\x07\x04\x3b\x12\x63\x6b\x32\x46\x2d\xb2\x3c\xef\x67\x04\x6c\x70\x51\x13\x94\x2b\xac\x95\x8a\x7d\x3b\x7a\x4a\x86\x0b\xae\xdb\x9a\x12\x36\x4c\xaf\xb9\x74\x95\x64\x69\xec\x65\x3f\x20\x6f\xd7\x55\x5f\xb3\x9e\x23\x4c\xf6\xe2\x23\xbf\xd3\x60\xc3\x6f\x91\x13\x2f\x3d\xe8\x7a\x8a\x1b\x6f\xad\x1c\x63\x24\x2b\x16\x36\xc6\xfa\x7e\x24\x2f\xe8\x98\x6d\xae\x46\x7d\xee\x40\xb7\x91\xfa\x24\xeb\x9f\xa3\xac\xe7\xb3\x9c\x1b\x2f\x1a\x23\x9d\x4e\x66\xf3\xdb\x84\x94\x64\xe9\x1d\xb9\x4b\xf3\x7b\x58\x0a\x0e\xed\x7f\x07\xa0\x0a\x91\x94\xec\x3e\xf6\x1f\x0e\x6d\xd4\xfb\xe3\xf3\xfb\x95\xf3\x28\x5e\x9a\xb5\x4f\x7a\x4e\x56\x16\x47\x6f\xe4\x7a\xb6\x5f\xab\x7c\x28\xe8\x7a\xfd\x44\xf5\x87\xa3\xb3\xeb\x40\xb4\x21\xb1\xbf\xa6\x99\x27\x3e\x0e\x7e\xd5\xe1\xcc\xf9\x47\x00\x00\x00\xff\xff\x1e\xed\x65\x73\x99\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x51\x76\xf3\xbc\x0a\xdc\x12\x20\x81\x60\x39\xb2\x25\xed\x7f\x09\xf7\x80\xe4\xc4\xb1\x93\x36\xfd\xfe\x97\xdb\x9c\xb6\x89\x6c\x03\x1a\x86\x01\x45\xc0\x5f\x19\x98\x04\x20\x27\x41\x10\x04\xd0\xc6\x45\xd2\x58\x3f\x65\x07\x84\x7f\xfc\x11\x00\x48\x0c\x19\x45\x12\x70\x1e\xba\x6f\x43\x11\xb3\x7b\x31\xe2\xa2\x20\x89\xca\x6e\x65\x54\x8e\x55\x4c\x3c\x57\x13\x5a\x29\xbc\xe7\xb9\xca\x32\x57\xb9\xc3\xae\x4d\x75\xae\x96\x75\xef\x5e\xb7\xa1\x60\x6b\xb5\xe5\xb9\xda\x6c\x14\x95\xd6\x63\x95\x52\x9d\xab\xa3\x4a\x22\xa9\x6d\xae\xaa\xad\xd5\xbd\xe3\xbe\xef\x75\xae\x76\xe5\xc2\x9b\xc7\xae\x30\x1a\x6f\x29\x23\x47\xc4\x8e\xcb\x63\xd5\x57\x36\x14\x00\x14\xa8\xbe\x53\x82\x0a\x29\x70\x64\x14\x41\x48\x58\x58\xdc\x4e\x06\xc6\x27\x9e\x9a\x50\x14\x1d\xf1\x0c\x02\x04\x4a\x80\x8a\xbe\x62\xf3\x7d\x8a\x4f\x38\xef\x21\x00\x34\x64\x50\x60\x34\x58\x9f\x41\x41\x93\xba\x2f\xe0\xcd\xef\x0f\x88\x10\x60\xc4\x7e\xdc\x0a\xbb\x1d\xff\xbf\x6c\xf8\xd5\xee\x38\x6e\x0c\xf3\x65\xf1\xab\x08\x61\x17\x07\x8a\x4e\x2b\x48\xb2\xac\x24\xf7\xea\x3b\x74\x5f\x04\xe0\x04\x71\x2e\x54\x48\x68\xc7\x2e\x8e\x08\xdd\xb2\xa5\xc3\xfa\xdc\xb5\x82\x21\x24\x83\x91\x1e\x28\x62\x86\x0b\x8a\xc8\xf9\x27\x14\xc7\xee\x51\xfb\x4e\x0f\x0b\x82\x7f\xb2\x90\xb5\xb9\x85\xe3\x69\x7d\xef\x3f\x2b\x24\xbe\x5a\x41\x71\x6c\x72\x16\xa0\xb8\x7e\xe0\xa5\xc9\x99\xaa\x91\x0f\xc7\x6e\xe6\xd0\xdc\x0a\x02\xb9\x8d\x1c\xf9\xf2\xbb\x67\x7d\xad\x0c\x93\xad\x2c\x6a\x8e\x4c\x27\xc7\x59\x73\x2a\x0c\x96\x4d\xd8\xeb\x2f\xb7\xdd\xf8\xc0\x31\x5e\xa7\xe8\xdb\xb8\x46\xdf\x8b\x20\xf0\xc0\x13\xd7\xdc\x3e\x28\xb9\xd7\x19\xc3\x37\x9c\x8a\xff\xf4\x81\x59\xf4\xe0\xc4\x3b\x66\x11\xf4\x2b\xb3\x00\x8d\x7e\x61\x02\x65\x7e\x9f\x89\x40\xdb\xf1\xc5\x3b\xda\xb1\xf6\x1e\x61\xb0\x34\xf1\xd5\xd3\x3e\xe7\x6e\xd6\xce\xae\x48\x0b\xc3\x47\xa4\xc9\xf2\xff\x39\x4f\xa4\xd9\xe7\xe8\x47\xba\x44\x4f\xc3\xff\x16\x7e\xe1\xc9\xeb\x2e\x0c\x0c\xcf\x55\x7d\xcf\x9c\x5b\xf4\x9a\x24\xcf\xba\xed\x23\x6c\x21\xa4\x44\xa1\x12\xf9\xa9\x72\xee\x4b\x00\x65\x7a\x8b\x7a\x04\x7d\x83\xdb\x7d\xe5\xc4\x51\x38\xc7\x02\x93\xd5\x30\x6b\x5d\x23\x7a\x97\x82\xa5\x49\xb4\xac\x51\xa0\x1b\x68\xc3\xaa\x04\x43\xc8\xf0\xb2\xa7\x0b\x6f\xee\xac\xa1\x6f\xfd\xc4\x7a\xea\x7b\xf4\x11\x57\xd1\xc0\x67\x77\x85\x8a\xfb\xbd\x9e\x38\xbb\x7f\x4d\x4c\x86\x47\xf5\xad\xa7\x84\x37\xe7\xc4\xcc\x36\xc0\xf4\x3f\xf7\x6a\x5e\x81\xc8\x79\x76\x06\x8f\xe2\x51\xa5\xe8\x56\x31\x6c\xec\x83\x8b\x7a\x2c\x69\x69\x78\x58\x7b\xd6\xe2\xd2\x79\x7c\xf9\x9d\x39\x01\xce\x29\xdd\x39\xa0\x88\xe2\x3c\x88\x5e\x98\xb1\x5c\x78\x94\x49\x03\x17\x7a\xcd\xf5\x56\x66\xae\x91\x03\x91\x9c\x5e\xf9\x77\xf1\xe2\x3e\xfc\xea\x91\x61\x88\x1a\x9d\x3d\x51\x91\x42\x05\x39\x07\x4a\x36\xbb\x96\xc2\x9d\x29\x65\x14\xeb\xad\x27\x4d\xb6\xb7\x52\x4b\xd3\xad\x95\xd2\xad\x74\xde\xd5\xbc\x1c\x46\xcf\xa3\xc8\xde\xb6\xad\xd7\x9a\x24\x4b\x96\x4e\x5a\x55\x8c\x6b\x51\xcd\x47\x1d\x9c\x79\x5e\x69\x55\xd2\x1b\x8f\x77\xbc\x1c\xa7\x63\xcf\xb5\x5d\xf6\x1c\x6c\x2d\x0f\x9c\x7e\xfb\x71\x5a\xdc\xf2\x41\x06\x46\x9e\x91\xa8\xce\x62\xc0\xfc\x97\xfc\x8d\x72\x8b\x09\x19\x83\x3b\x0c\x57\xfd\xe5\xe9\x5f\xd3\x4b\x6e\xb5\xe2\x4b\x6e\x99\xf0\xc7\xdc\xd2\xe7\xdc\xda\x54\x70\x77\x84\xc0\xb9\xda\xb3\x22\x3c\xe7\x95\x74\xf6\x11\xbd\x69\x53\x64\xbb\x57\xa4\xc6\xa9\x58\xab\xd9\x36\x16\x4c\x25\x51\x19\x3d\xe5\xba\xf7\xbd\x2b\xd7\x6e\x5a\xf7\x3e\x76\xed\xfb\xb0\xae\x63\x24\x61\x25\x20\x68\x9b\xb2\xd2\x7f\xe9\x8f\x1f\x3a\x23\x6f\xe9\x87\xce\xc8\x1e\xe6\x17\x33\x17\x77\xf8\xe7\x99\xeb\x6d\x9f\xad\x74\x74\x84\x98\x0e\xec\xa4\xd7\xd1\x0b\x5d\xdd\x26\x0a\x1f\xbb\xe9\x07\x55\x5c\x11\xcb\xec\xde\xd1\x59\xbf\x50\x30\x09\x0c\xed\x9d\x86\xf9\xd1\xa0\x5c\x15\x8b\x37\x83\x83\xe7\x7f\xae\x44\x29\x74\x66\x28\xc3\xca\x5a\x64\x78\xe5\x4d\x1a\x87\x46\xcb\xde\xfc\x6f\x8d\xec\x1e\x77\xf8\x8a\x21\x97\xd1\x3d\x8e\xd7\x09\xc9\xf3\x1c\xfb\x6f\x0b\x5d\xd9\xba\x66\xcd\xe7\x67\xeb\xf8\xf1\x59\xc3\xbc\xf6\x36\x71\x3b\x57\x9b\xd1\x78\x74\xcd\x98\x75\x41\x8a\x3c\x38\xf4\x2f\xba\x24\x7e\x2a\xf8\xa0\x01\x05\xae\xfa\x5e\x50\xbf\xd0\x80\x42\x3f\xeb\xfb\xb7\x1a\x50\xf2\xfe\x49\x03\x1e\xfc\x0d\xa5\x7b\x3b\x27\xc8\xef\x9d\x85\x40\x93\x9d\x3a\xcb\xe4\xef\xdc\x83\x5e\xf5\xaf\xd4\xa6\x79\xe1\x1e\x18\xb8\x3d\xe7\x2f\x3e\x9e\xb1\xfd\x99\xd9\x2b\xdb\x63\x42\x7c\x64\xf7\x59\x9f\xf1\x0e\xfe\x6b\xb4\x7d\x9d\x5b\xdc\x5a\x74\xdc\x87\xc5\x98\x11\x27\x46\x80\xb6\x26\xcf\xc9\xc4\x32\xf2\xcf\xf1\xfe\xb2\x5f\xc5\xf5\xfc\xf4\xec\x9a\x39\xcf\xac\xb4\xb8\x6b\xc8\x31\xd5\x29\xcf\x18\x34\x19\x69\x89\xae\xe5\xf9\x55\xa6\x43\x19\xd0\x54\x4e\x91\x69\xc6\x5f\x91\x3c\x6a\xec\x6d\x8f\x7b\xc4\x12\x53\xb6\xf9\xf4\x9a\x16\xc3\x50\x69\x4e\x8c\x16\x28\x5a\x36\xb0\xcc\xac\x82\x12\x53\x18\xa8\x58\xcc\xda\x04\x2b\xfa\x85\x60\x30\x50\x4d\x1e\x11\xa7\xa8\xc0\x5a\x57\x05\x46\xc5\xe6\xe7\x29\xf7\xe0\x67\x54\x48\x8b\xfe\x80\x60\x9a\x67\xa5\xf8\xea\x56\xb9\x4c\xfd\xf1\x2b\xf3\x9c\xa4\x34\x31\x9f\x6a\xba\xde\x93\x06\x5e\x0d\x6c\xd5\xc1\xf4\x69\xf8\x0e\x9d\xc3\x67\xd7\x98\xa9\xc3\x76\xa5\xb8\x3f\x32\x72\x74\x84\xa9\xb2\xef\xce\xc7\x9a\x6e\xcc\x63\x3b\x55\x28\x33\x6f\x67\xe6\x96\xfc\xfd\xb7\x40\x3e\x19\xdb\x7b\xbe\xd3\xcd\x6b\x7e\xf1\xfa\xe4\xbb\xf1\xf5\xfc\x65\xdc\x0f\x84\xe7\x5e\xcf\xbc\x5b\xf9\xca\x27\x86\x99\x77\x81\x3b\x77\x1d\x21\x67\x2f\xf3\x25\x8b\xf7\x93\xc9\x29\xce\xc5\xf5\x53\xa4\x1e\xe7\xda\xe5\x43\x29\x51\xfe\x82\x13\xd0\x8d\xd9\x73\xca\x93\x98\xf3\x22\x2a\x82\x7b\x6f\x5e\x0a\x4e\xf3\x1e\xfe\xf2\x4c\x14\x4f\x11\xf3\xe9\x9c\x52\x5d\xfd\x79\xaa\xee\x9a\x2a\x8f\x53\xd3\xcc\xe1\x9d\x7b\x6b\x76\x89\x27\x0e\xa6\xee\x47\x7f\x0a\x6e\x7f\x17\xcd\x3b\xdb\xaf\xde\xc3\x13\x79\xad\x1c\xd1\x4a\x7c\xbb\xe5\xd3\xd1\x9c\x95\xfd\x54\x0c\x88\xae\xe3\xee\xa3\x9a\x1c\x11\x4c\x3d\x73\x76\x30\x2b\xe1\x71\xb5\x4c\x65\x88\x7b\x10\xf1\xb9\xae\xc4\xce\x0f\x7e\x9e\xcf\x4e\x27\x2e\x84\x5a\xd6\x14\x17\x75\x49\xb3\x2e\xce\x3b\x9f\x99\x98\xda\xa9\x89\xe3\x9b\x0b\x6f\xb1\xb3\xc3\x2d\x1e\xa7\x07\x97\x20\x4e\x38\xde\xfb\x4e\xdf\x70\xcc\x59\x22\x37\xf7\xed\xe7\x1d\xa5\x23\xc2\x7a\x4c\x33\x4b\x6b\xa7\x26\xed\xbb\x7f\xa8\xde\x96\xa9\xd4\x52\x0b\x25\xe0\x10\xbe\xa2\xb2\x19\x94\x26\x5b\x81\xde\x53\x19\x22\x94\x85\x09\xeb\xc0\xba\xf7\xa6\x23\x6b\x6b\xb9\x5a\xb6\xbd\x53\xcb\xd8\x04\x47\xcf\x36\x9a\x62\xe9\x9e\xa0\xff\x05\x00\x00\xff\xff\x51\xd7\x83\x1a\x18\x16\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xc1\x6e\xdb\x30\x0c\xfd\x17\x9d\x7d\xea\xb0\x61\xc8\xad\x28\xd0\x9d\xb6\x02\x6b\x6e\x45\x50\xd0\x32\x93\x08\x93\x29\x43\xa2\x9c\x1a\x45\xff\x7d\xb0\xa3\xc4\x2e\x62\xd9\xce\x92\xa6\xd9\x29\x01\xf4\x28\xf3\x91\x8f\x8f\x7a\x7a\x15\xd2\x90\x63\x20\x16\x33\xb6\x1e\x13\xa1\xa8\xf0\xec\xc4\xec\x69\x91\x08\x82\x1c\xc5\x6c\xfb\x93\x08\xe3\x39\x1c\xbd\xee\x4e\x44\x22\xb8\x2a\xea\x7f\x8e\xad\xa2\x95\x78\x5b\x24\xa2\x80\x0a\x52\x8d\x62\xb6\x04\xed\x30\x11\x8e\x81\xf1\xa7\x67\x48\x95\x56\x5c\x89\x99\x28\xbc\xc5\x36\x74\xe9\x49\xb2\x32\x24\xde\x92\x6e\x3a\x21\x7a\x9f\xcf\xfe\xa3\xcf\x16\xa5\xc2\x12\x6d\x7b\x05\x64\x99\x45\xe7\x9a\x1b\x76\x28\xc8\x8d\x27\x6e\x31\x5e\x11\xdf\x7c\xfd\xd6\xa4\x18\x30\x50\x14\xd6\x94\x11\x6e\xce\x4b\x59\xdf\xb9\xbf\x20\x35\x46\x4f\x24\x48\x86\x76\xa0\x31\x9a\xd1\xaa\xb3\x61\xd0\x8f\xbe\x28\x74\x35\x56\xfc\x2e\xb5\xf1\xe4\x4a\x85\x9b\x13\xaa\x2f\x0d\xb1\x05\xc9\xb7\x59\x36\xd2\x01\xc2\xcd\xc3\x86\x7a\xfb\xd4\xd2\x74\xc8\xbf\x02\xee\xde\xd8\xbb\x70\xf9\x3b\xc6\xe7\x2e\x79\x9c\xdb\xd2\x9a\x7c\x98\x13\x9b\x93\x55\xc7\x16\xc8\x2d\xd1\xde\x6f\x3f\x76\x85\xd2\xcb\x50\xaa\x1c\xb4\x9b\xa2\xbb\xef\x97\x99\xf9\xe9\xaa\x33\x53\x24\x77\x25\x7a\x93\xa0\xf5\x98\x8f\x35\x18\x3c\x59\x75\x75\x3a\x3e\xe6\xe3\xcf\xe1\x34\x52\xb7\x8f\x54\xdd\x31\xc3\x37\x60\xfc\x2d\xd1\x15\xf2\x6d\x09\x4a\xd7\xc9\xdc\x59\xcc\x14\x4f\xd2\xf1\xc5\xfc\x73\xda\xf6\xd2\x2a\x57\x7d\x0d\xed\x0a\xa3\x21\xf7\xc3\x9a\x0d\xaf\x7f\x03\xe3\x30\x1a\x5f\x0a\x65\xfb\x30\x9d\xb9\x58\x83\xc5\xb9\xf9\xac\x59\x98\x3c\xe1\x67\xdb\xff\x8d\x55\xdc\x5e\xdf\x23\xe0\x18\x33\x4b\x41\x03\x49\x7c\x58\xf6\x13\x08\xc7\x1f\xaa\xf5\xe8\x1e\x71\x55\x9e\x1a\x7d\xf9\xa7\x63\xac\x9c\x9d\x36\x56\x8c\xee\xcb\xcd\x81\xfa\xb3\x41\xc7\x18\x1f\x4a\x38\x74\x9e\x38\x38\x3a\x92\x2d\xe4\xa8\x19\x97\xde\x5a\x24\x9e\xab\x1c\x1f\x19\xf2\xe2\xaa\x0d\x6e\xca\xca\x5a\x83\x5d\xe1\x27\xd9\xd1\x19\x1f\x7a\xff\x97\xb5\x74\x38\xba\x02\x29\x1b\xf1\x1f\xd0\xda\x6c\x82\xc5\xf4\xb0\xb4\x98\x83\xa2\x7a\xbe\xcf\x2f\xc6\x7d\xf0\x96\x63\x8f\x59\x1c\xd4\x08\xb4\x4e\x41\xfe\x69\xc2\x81\x0c\x55\xb9\xf1\xae\x4f\x06\x8a\x32\x7c\xc1\x6c\x77\xf7\xf8\x1b\x25\x12\x10\x93\xd1\x1e\x1e\x3e\xbd\xc3\x97\xa0\xfd\xf0\x96\x9e\xb7\xaa\x0a\x20\x2c\x91\xf8\x9f\x29\x0d\xe8\x20\x12\x11\x97\xc5\x49\xc4\xb6\x8b\x18\xf4\x99\x88\x1d\xdb\xaa\x63\x3b\x35\xb0\x0c\x22\x21\xd3\xcc\x3c\x12\x3c\xe1\xfd\xf6\x58\x6f\xb0\xfb\x77\xb4\x43\x05\x17\x7f\x03\x00\x00\xff\xff\x5b\xc2\x1f\x42\xe9\x11\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x0b\x76\x04\x2b\x0a\xdd\x12\x1f\x51\x58\x8e\xdf\xfd\x2f\x61\x0e\x6a\x75\x57\x57\x75\x92\x4e\xde\xcc\x3b\x93\x9c\x74\x2a\x94\xa2\x20\x5c\x2e\x26\x82\x7f\x07\x10\x8a\x00\x81\x23\x42\x44\x80\x01\x92\x22\x8f\xfd\x95\x2a\x20\xfc\xf1\x2b\x02\x00\x0b\x04\x8c\x91\x21\x8e\xd6\x3a\xb0\x22\x86\xb9\x8a\x48\x52\x88\x0c\x26\x3d\xa7\xc2\x53\x8a\x69\x2c\x29\x2a\x46\x68\xad\x2d\x69\xd9\x63\x89\xd1\x48\xea\xd2\x80\x2d\x1f\xd2\xa2\x89\xf6\x58\x02\x5c\x52\x46\xae\x5d\x62\x5a\x52\xb2\x2d\x8d\x03\x82\xa6\xb5\x1a\x09\x2d\x69\xa8\xd9\xc4\x32\x2c\x69\x4a\x4b\x2a\x31\x18\x08\x8f\x25\x2d\x65\x49\x63\xcc\xb1\x59\x8b\x4b\xda\x61\x4b\x5b\x88\x20\x75\x8d\x65\xd0\x25\x4d\x90\x41\x89\xd7\x7e\x99\xf7\x58\x93\xa6\x56\xc2\x96\x86\x6d\xb1\xd9\x00\x08\x61\x6b\x88\x7b\x67\x99\xc7\xc8\x56\x97\x6d\x9c\xb7\xc5\xd9\x40\xac\x96\xb2\xa4\xb5\x2e\x69\x6b\x91\x7a\xe3\xbe\xa4\xbd\x4b\x92\xe2\x27\xa0\x30\x9a\x14\x0e\x28\xee\x35\xf0\xd3\x7d\x48\xa7\x44\x23\x42\x40\x96\xe8\xe3\x03\x08\x46\x20\x50\x50\x12\x52\x34\x50\x04\x54\x56\x54\x14\xff\x21\x7f\x0b\x68\x28\xa0\x20\x68\xb0\xff\xf6\x19\xac\xec\xba\xa5\xf8\x78\x84\xb5\x62\x08\xbe\x3f\xf5\x93\x71\x3d\xfe\x7b\xeb\xf0\xb7\x54\x7d\x5d\x81\xf5\x6d\xf3\xc7\x57\x74\xbd\x38\x30\xea\xd6\x92\x70\x6b\x61\x9d\x3b\xf4\x3d\x4d\x2d\xbc\xac\x82\x0c\x8c\x86\xf1\x75\x87\xae\xd9\x68\xe9\x5e\xb6\x29\x18\x02\x1b\x0c\x7e\xfa\x44\xf3\xd5\x27\x79\xae\x10\x21\x7b\x0c\x93\xeb\x9e\x19\x22\x18\x23\x50\x60\x9f\x15\x24\x3c\x3d\x66\x6e\x9c\x3c\xd7\xfe\x7a\xad\x7a\xf3\x7f\x9d\xfe\xaf\x70\xd6\xf6\x89\xa6\x2e\x57\x4d\x63\xbc\xdf\xb5\x22\xc6\x79\x4e\xcb\x02\x5f\x4d\x7c\x35\x3f\xa9\xad\x8d\xa0\x7e\xea\x83\x8b\x36\x08\xcb\x1f\x22\xe8\x3a\x0f\x7d\x1c\x2e\xfa\x88\x6b\x44\x48\x14\xce\x71\x36\x86\x81\xe1\xf9\xd4\xbe\xb4\x97\xa4\xfd\xd9\xde\x44\x76\xde\x9b\xd2\x75\x6f\xf6\x99\xa6\xc3\xd6\x54\xeb\xd9\x8a\xd7\x99\x9f\x5b\x54\xe3\x9b\x58\xf8\xcc\x22\x6d\xf1\x6c\x51\x2f\x9f\xfa\xe6\x11\xc1\xcb\x16\x88\xcb\x22\xab\x67\x0f\x31\xf2\x3f\x8c\x86\x82\x70\xd6\xc7\xb7\xfd\x7d\x65\xe9\xb4\xae\xb4\x73\x2c\xb1\xdc\xf2\x73\x62\x56\x4d\xf9\x3c\x2a\x5e\xe3\x83\x93\x2e\x9d\x3e\xb6\x94\xe7\x89\x29\xe8\xe9\x7c\xf4\x94\xb7\x1a\x4e\xcf\x7c\x7a\xa6\x13\xae\xc8\x81\x56\xdf\xa2\x0a\x97\x8f\xf3\xf3\x84\x2a\xb5\x97\xb3\x4d\x2d\xfd\x01\x99\x5a\x18\x67\x1d\xc3\xfe\x1c\x65\x3d\xcd\xa8\x98\xf5\xc1\x3f\x47\x4e\x87\x17\x75\xe3\xd4\x8e\x6f\x67\x10\xd9\x7d\x94\x86\xc4\x20\x12\x08\x82\xc4\x1e\x25\x51\x4c\xc9\x7e\xc7\x1a\x68\x55\x0b\x5a\xd5\x60\xad\xf8\xba\x5f\xf6\xfa\x12\xa7\x55\xbb\x26\xc1\xac\x5a\x07\x72\x86\x59\x8d\x08\x2c\x68\xf2\x1a\xa2\x41\xc8\x82\x67\xa6\x90\x57\x11\x02\x15\x03\x11\x03\x23\x43\x83\x34\xb4\x4a\xe9\xd8\xa5\x97\x5e\x53\x93\xd2\x30\x8c\x84\x81\x52\xc3\xae\x61\x70\x6b\xc0\x18\x2a\x8c\x54\x88\x0c\xbb\x14\x02\xc8\x55\x6b\xaa\x5c\x8c\xc4\x96\xc6\x6f\xb0\x3b\xb3\x47\x0b\xa0\xaf\x38\x63\x67\xd9\x75\x58\xe8\xa8\xdc\x95\xdc\xeb\x79\x62\xa4\x57\x14\x97\xb6\xeb\xf9\x85\x4e\x8a\xe7\x71\x53\xf6\x8a\xdf\x17\x7f\x79\xfc\x2e\x7f\x1d\xfb\x83\xb9\xc7\xe5\x2b\xf3\xa7\xc0\xa4\x84\xd1\xb1\x0b\x57\xe4\x48\x58\x19\xf5\x4b\x4d\x0a\x12\xd2\x83\x3f\xfe\xf4\xe5\x35\xdb\x50\xd9\x3f\x27\x72\x26\x3f\x97\xcd\x08\xe2\xc1\x60\xfc\x73\xd6\x98\xa1\xf1\x62\xb9\xe8\xbb\x5d\x82\x9f\xfb\xe7\xf6\x9e\xf4\x3c\xfd\x2c\x16\x55\xae\xab\xe5\x6b\xfd\x96\x6c\x6b\x4f\x0b\xb3\xfc\x6c\x5d\x5a\xc2\x9a\xbb\xa5\x20\xce\x8e\xc8\x39\xd1\x66\x34\xd2\x82\x24\xe7\x50\xf3\x99\x14\x35\x3e\x59\xb7\xe7\x5a\x28\x38\x31\x1e\x51\xca\x9e\x13\x21\xfa\x9c\x0f\xac\x7d\x9f\x0d\xac\xce\x90\x58\xc8\x3c\xb7\xc8\xbd\xa0\xc1\xc0\x77\xb5\xed\x4b\x18\xdf\x78\x33\xbe\x6a\x27\x70\x5e\x78\xf6\xa5\xef\x8d\x83\xe7\xc0\xab\x0d\x92\x97\x0d\x6f\x76\xac\x5f\xeb\x5c\x19\x6a\x5e\x49\xd9\x73\x74\xe6\x30\xae\xfd\xfa\x4a\xd1\xee\x2b\x1d\xde\xfa\xda\x37\x8a\xcf\x95\x2e\x7e\x71\x1c\x10\x11\x23\xcd\x47\xe5\x76\xfc\x17\xf2\x1a\x40\x60\x73\xbc\x9d\x76\x90\xf3\x5f\x6c\xfd\x11\xab\xca\x15\xab\x6c\x7a\xe5\xec\x0b\xc3\x34\x5a\x1b\x24\x94\x1b\x96\x4e\x55\xad\x44\xab\x54\x20\xea\xa8\x9c\xb4\xe5\x6c\x42\x25\xa7\x81\x91\x6b\xc8\x88\x91\x74\x88\xe4\xd0\x86\x10\x17\xee\xc3\x3d\xfa\x13\x56\x2d\xa4\x9a\xb1\x9c\xb0\x3c\xb0\x8a\x16\xa7\x16\xdf\xd1\xe6\xd5\xeb\x1d\xd2\xc2\x31\xbe\x45\x27\x7a\xdb\x75\x93\x39\xc6\xac\x88\x0b\x57\x7c\x4b\x42\x6f\x70\x30\xdd\xf8\x5f\x8a\xf1\x86\x83\x29\xc1\xb7\x38\x08\x8e\x34\xdf\xe3\x02\xc6\xbd\xe2\x5b\xfc\x33\x74\xd4\xf8\x6f\xe3\x9f\xd7\x21\x8c\x1b\xfb\x5e\x50\x4f\xe1\xf7\x1e\x1d\x57\x7e\x9b\x46\xd5\xa8\xfa\xe4\x8d\x7e\x76\x1a\x94\x67\xc7\xaf\xa9\x4b\x52\xd1\xb4\xf9\xec\x37\x1d\xff\xcd\x1b\xac\xc1\x33\x66\x72\x6a\x3a\xec\x70\x8f\x60\x78\x74\x7a\x7a\x44\xd7\x8a\x66\x8f\x2f\x82\x97\x7c\xe0\x57\x0f\x86\x79\x1f\xe1\xb1\xee\xc0\xb4\x11\x55\x63\x50\xbe\x62\xe4\x29\xe7\xe0\xe0\x6b\x57\x6d\xbe\x67\xd7\xa3\x62\xbc\x34\x6d\xf6\x8e\xa0\x9a\x34\x5d\x50\x3a\x3c\x3a\x57\xb5\x2b\x3f\xd7\x1c\xef\x38\xfd\x65\xde\x7f\x83\x70\x76\xe4\xbf\x4c\x5b\xf1\xb0\x55\xa3\xef\xf1\xe8\x87\xaf\x39\xf6\x8c\x89\xf9\x19\x35\xfe\x3f\x9c\x98\x23\xe4\xc4\x4b\xb7\x20\x18\x59\x14\xb0\xe0\xcc\x0d\x71\xd7\x2d\xe3\xe1\x75\x2b\xd0\xbc\x1f\xf0\x55\x82\x57\xb5\xf5\xae\x64\x49\x61\x72\x22\x9d\xe7\xee\x6f\x95\x10\xd7\xdb\xdc\xc5\x4f\xc8\xcc\x11\xc1\x14\x35\xf8\xea\x3e\xc6\xff\x4e\xe2\x3e\xd8\x73\xe2\x3a\x0d\xf7\xa5\xc1\xf3\x8c\xd6\xe9\x9c\x25\x3e\x2e\xd6\xe7\xa9\xa9\xcc\x9d\xc3\xfb\x8a\xa2\x2c\x0b\x8d\xc1\x23\x63\xee\x29\x4a\x52\x92\xe0\x56\x4e\x0b\x26\xdf\x56\xb8\xfc\x4d\x3b\xf2\x2e\xe3\x66\x4c\x84\xe7\x29\x0b\x5c\x19\xe1\xe4\x04\xd6\x84\xf9\x86\x82\xd6\xaf\xfc\xc3\xba\xdd\x38\x91\x0d\xbe\xa0\x20\xa8\xec\xa8\xce\x80\xe7\x77\x7e\x26\x4e\x81\x20\xc3\x0b\xbe\x32\x4f\x8b\xe5\x8e\x33\x4a\x77\x59\x1a\x46\xbd\x31\x03\x75\x88\xa3\x0e\xac\xa3\x47\x61\x06\xee\xd4\x73\x89\xda\xfb\x90\x8a\x83\x92\x21\x8e\x6c\xcd\xc2\x20\x0d\xa0\xa3\x5b\x10\x1a\x69\x66\xe2\x81\x40\x0a\x1f\xf5\x61\xfc\xbe\x07\xcb\x3c\x73\xf4\x7f\x9c\x19\xc7\x6a\x34\xef\xac\x96\x9e\xf0\xd2\x13\xad\xbc\xd7\xe8\xda\xf6\x8d\x1a\x03\xaa\x3a\x06\x28\xce\xe7\xb8\xf0\x20\xae\x37\x8e\xfe\xe4\x78\xe0\xf6\xaf\xf5\xe0\xe1\x89\x75\xaf\xe0\x0c\x64\xdf\xc3\xc9\xa3\x4f\x9a\x97\xa5\x0b\xe3\x66\x3e\x3e\x65\xb4\x64\xf1\x2c\xe3\x25\x3b\x6e\xe4\xce\x48\x7b\xee\x6b\x9f\xd1\x38\xbb\xf9\xa2\xe1\x16\x8b\x85\xae\xf8\x58\x68\x28\x5f\x62\xb1\xb0\xfd\x50\x91\xe5\xd7\x9d\x49\xa9\xef\x58\xea\x43\xd3\x8f\x3c\x4b\xbf\xe2\x59\xab\x2b\xfc\x37\xbb\xc1\x69\x4d\x5e\x77\xa0\xeb\xee\xf4\x86\xfa\xaf\x56\xe2\x37\xbc\x19\x17\xfb\x98\x98\x36\x51\xd6\x67\x79\x1c\x2f\x7c\x9b\xb8\xe8\xe6\x36\xa0\x9a\x3a\x86\x3c\xa2\x1e\x3d\x77\x8e\x2b\x46\x60\xa2\x49\xa5\x75\xe2\x15\x87\xca\x95\xe9\x1a\xbc\xc7\xd4\xa7\x7c\xe2\x5d\x8d\x6d\x7e\xce\x67\xf1\xb8\xa8\x21\x06\xd2\xfc\xbe\x7e\x7a\x66\xbc\xc7\x68\xe5\x2f\xdf\xdc\xe6\x1c\xa8\x6d\x66\x7a\x89\xe7\xc3\xa3\x08\x75\xf2\xcb\xef\x6f\x33\xc2\xbe\xcd\x08\x41\xc3\x10\xfa\xcd\x0d\xc6\x07\xb7\x19\x7c\x3e\x39\xf0\x0e\x83\x8e\x88\xb7\xb7\xa7\xa8\xb3\xe6\x19\xaf\xdf\x3b\x6b\x97\x0c\x67\x77\xe0\xe7\x8c\xfa\x60\x8f\xbf\x66\x8d\x0d\xae\xfc\xba\x79\xaf\xf8\xca\x8e\x5c\x4a\xea\xe8\xf5\x59\xf7\xe5\x7b\xfc\x81\x05\x91\xf2\x42\x9e\x57\x26\x74\xeb\xfd\x9b\xb4\x5b\x37\xde\x62\xba\xd5\xb9\x30\xab\x59\x4b\xd7\xfb\xe7\x96\x1a\xf3\xad\x4f\x6f\xaa\x3f\xf4\xe9\x2d\xeb\xa3\x4f\x6f\xef\xf8\xdf\xb9\x4f\x9f\x33\x7a\xac\x77\x74\xe2\x1f\xfc\x30\xf9\x4c\x6b\xf1\xf3\xbe\x92\xbf\xc7\x82\xef\x7b\xe8\x0e\xe5\x9f\xf6\xd0\xcf\xdd\x5f\x7a\x54\xe4\x7d\x07\x6e\xf0\xaf\xf7\xaa\x3d\xe1\x9b\x5e\xf5\x95\x5f\xfd\xd4\xcf\x7d\x71\x77\x62\x60\xce\x0f\x0e\x6e\xb0\x7d\x69\xaf\xdc\xfc\xd5\x6f\xfc\xe8\x25\xfb\xf1\x7f\x9f\x1d\x77\xbd\x96\xc5\x11\x79\xe5\xd5\xf4\x2d\x3e\xff\x67\xe5\xde\xfd\x13\xfe\x1f\x9c\x73\xaf\x3b\xf6\x4d\xfe\xe5\x0e\xef\xfb\x58\xbc\x64\xe2\xbc\xf9\xc5\x85\x99\xfb\x66\xfe\xe6\x45\x5a\x6c\xe9\xeb\x18\xa1\xd5\x9f\x89\x39\xe8\x38\x9e\x4d\x6e\x72\x59\x09\x4e\xde\x9c\x23\x4e\xff\x47\xf4\x2a\x99\x46\x7f\xbe\xdd\x1d\xc2\x88\x71\xc9\x7d\xb6\xc7\xc3\x8b\x06\x67\xb7\x32\x73\x77\xe8\xca\x63\xd2\x30\xef\x30\xb7\x7f\x54\xd6\x6c\x08\x18\x9e\xcc\xe6\x65\xad\x35\xe7\x31\xc3\xfa\x31\xc3\xc2\x93\x83\xae\x55\xe9\xc6\x02\x37\x8b\x5b\xf8\x1f\x01\x66\x32\x53\xca\x29\x27\x62\x10\x25\x68\x11\xd1\x1c\xaf\x59\x4b\x54\x6d\xad\xd8\xe0\x12\x62\xe9\x66\x22\xd9\x44\x98\x30\x65\x85\x00\x2c\xb9\x68\xcd\x91\x7a\x68\x11\x2d\x5b\x69\xaa\x5e\xe2\xff\x13\x00\x00\xff\xff\x72\xfd\xae\x1c\xca\x1f\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xcd\x4e\x03\x31\x0c\x84\xdf\x65\xce\x39\x21\xc1\x61\x5f\x01\x71\xe2\x58\x55\xc8\xed\xba\x95\x45\xea\xac\x36\xce\x42\xa8\xf6\xdd\x51\xab\xec\x8f\x56\x2d\xad\x40\x1c\x13\xcf\x38\x5f\xec\x59\x1d\xb1\x0d\x1a\x8d\xd4\x50\x59\x9b\xd8\x41\xb4\x49\x16\x51\xad\x8e\x50\x3a\x30\x2a\xbc\xbd\x73\x86\x83\xe5\xe6\x74\x8a\xd6\x8a\xee\xd1\xaf\xdd\x50\xdf\xb3\xc1\x21\x24\x5b\x1a\x27\x53\x12\xb5\x87\xc7\xa7\xb3\xab\xa1\x4c\x1b\xcf\xa8\x76\xe4\x23\x3b\x44\x23\xe3\x97\x64\xb4\x11\x2f\x96\x51\xa1\x13\xfe\x98\xbc\xbb\xa4\x5b\x93\xa0\xe8\xdd\x9c\xb6\xb8\xef\xc5\x75\x53\xbd\x23\x9f\xf8\x32\x5b\x91\xc4\xc5\x8f\xee\xa2\xd6\xa0\x83\xe8\xf7\xec\x5d\xb0\x13\xee\xd8\x80\xea\xba\xe5\x18\xe7\x70\xa2\x62\x42\x5e\xbe\xf8\x5f\x19\x17\x69\x98\xde\x1f\x11\x7f\xdc\xf8\x1c\xfc\x4f\x1b\x27\x0d\x9a\x0f\x21\xc5\x4b\x63\x13\xad\xf9\x93\xeb\x81\x76\x98\x62\xb9\x7e\xbe\x12\x84\xd1\x55\x1a\xde\x0a\xce\x35\xfd\xed\x20\xbd\x9e\x83\x54\xea\xdc\xb1\x1a\xfa\xf5\x77\x00\x00\x00\xff\xff\xc0\xf2\x74\xa1\x75\x03\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x6d\x96\x23\x37\x08\xbc\x52\x01\x02\xc1\x71\xd4\xfa\xb8\xff\x11\xf2\x90\xdc\x63\x8f\xbd\x49\x66\xf3\x5e\xb6\xfb\x87\x65\x2c\xa1\xaa\x82\xc2\x86\x7c\x0b\x94\x0d\x28\x62\x04\x23\xc0\x48\xab\xc9\x7a\x3c\xb5\x83\xf0\x1f\x1f\x03\x20\x8a\x42\x66\x62\x21\xb3\xbb\x4e\x27\x2a\xfb\x16\xd3\xea\x30\xf1\x56\x78\x5e\x33\x4e\xb4\xc7\x89\xf6\x32\xcc\xc6\xf4\x1d\x25\x9a\x27\xba\xfa\xa4\xde\x7b\x3b\x51\x19\x5a\xf5\xca\x3b\x1c\x6b\xe8\x25\x85\x34\x73\xd4\xc4\xff\x15\xcd\xc8\x95\xdf\x8b\x81\x8b\x93\xa8\x93\x13\x28\xe0\x82\xfc\x06\x03\xc3\x40\xcb\x19\xe4\x14\x40\x71\x02\x83\xb6\x32\xb9\x8f\x1e\x6b\xce\x93\xca\xc1\x41\xb1\x4f\x79\x01\xb9\xb8\x38\x9c\xbd\x48\x55\x44\x09\xd3\x54\x91\xac\x87\x2a\x5e\x5e\x4b\xac\x77\xc6\x54\x9c\x71\xdf\xe1\x08\x82\x04\x96\x3c\x59\x8c\xf2\xc6\x82\xa8\xff\x59\x16\x8a\x10\xd1\x90\xc3\x67\x5c\xc1\x4f\x26\xc0\x17\x52\xe2\xf8\x25\x52\x32\xb4\xec\x00\x46\x83\xec\xfe\x52\x32\x23\x88\xae\xcc\x70\x9f\x2e\xfe\x7e\x7a\xdf\x27\x6d\x3e\x15\x7b\xcf\x16\x08\x22\xfb\x27\x15\xed\x74\x1f\x39\xdf\xbf\x39\xfb\xd6\xe1\x9c\x08\x38\x92\x73\xee\x64\xb8\xec\xce\xa7\x86\xec\x33\x25\xe7\xcc\x4c\x8b\x22\x10\x0c\x0a\xca\x5d\x41\xbe\xd7\xa0\xdc\xeb\x74\xf0\xa5\x76\x3b\x67\xda\x27\x9d\xd2\x20\x0e\x0a\x67\xdd\x18\xbd\xec\x4f\x38\x53\x75\x55\x7e\xed\x89\x80\x26\x16\x3a\xeb\xbf\xe3\xc3\xd0\x92\x3b\xb3\x5e\x77\x1f\x01\x5a\x44\x3e\x75\x71\x22\x4b\x6d\x8e\x43\x96\xbd\x6a\xeb\xb8\xd1\xfe\x58\x11\xe6\xf8\xb1\x22\x8c\xf6\x7f\x2b\x92\x91\xc0\x43\x13\x75\xfa\x1d\x26\x3e\x7f\xce\xc4\xd6\xef\x30\xa1\x9a\x99\x6e\x1e\x59\xa5\xcc\x93\x6e\x49\x7c\x87\xcb\x6b\x35\xeb\x9a\x58\xd6\xfb\x45\xdd\xdb\xe8\xad\x5a\x94\xd6\xd1\xb8\x48\xad\x4a\xa2\xb3\xeb\xe0\x2a\xfd\xaa\x2c\x1e\x73\xcc\xc5\x2a\x6e\x36\x5d\x43\x3a\x77\x4e\x76\x5f\xdc\x1f\xac\x5d\x9e\x6a\x39\x3b\x41\x92\xa9\x97\xed\x76\x7a\xfe\x96\x78\x7e\xa5\xd6\xee\xa9\x2b\xb3\xa4\x05\xd3\x81\xbc\xdd\x90\xba\x68\x66\xcf\xcf\xbb\x1a\x04\x81\xa7\x46\xaf\x75\x3b\x33\x26\xf6\x14\xca\xfa\x9e\x2c\x65\x3c\xb2\x88\x3f\x9c\xfc\xa9\x69\x16\xe1\x3b\xc2\xcc\x9c\x93\xe7\xbc\xdf\xfd\xd0\xf8\x9e\x42\x82\x77\x07\x90\x7d\xba\x22\xdd\x40\x7a\xd0\xd4\xf5\x6d\xda\xec\x95\x96\xfa\xf5\x6f\xf7\x6f\x4f\x22\xfd\x70\x1d\x67\xfd\xd3\x77\x7b\x2e\xd5\x80\xea\xd3\xa5\x9f\x68\x72\x72\x00\x8d\x4c\x8d\x6b\xab\xad\xb2\x40\x9d\x31\x49\xea\x45\x55\xc3\xfb\xae\x3a\xcd\xd1\x47\x84\x8c\x55\x64\x5a\x91\x35\xc6\x9a\xac\x03\xa5\x0f\x88\x74\xd4\x16\x5e\x98\xbd\x5b\xa5\x72\x09\xc0\xf1\x57\x00\x00\x00\xff\xff\xc4\x37\x9f\x14\xd2\x07\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

