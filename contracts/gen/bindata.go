// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xc1\x6e\xc2\x30\x0c\xfd\x17\x9f\x7b\x82\x5b\x6f\x93\x76\xdd\x17\x20\x54\x19\x62\x36\x4b\xc5\x89\x62\x87\xad\x43\xfc\xfb\x54\xd4\x12\xca\xa0\xdb\xd8\x04\xda\x31\xd2\xb3\xfd\xfc\xde\x73\x66\x5b\x58\x7a\x51\x43\x31\x28\x2d\x26\x2a\x80\x25\x24\x53\x28\x67\x5b\x10\x5c\x13\x94\x50\xa1\x73\x11\x0a\xb0\x26\xb4\xcf\xf6\x45\xaa\xb0\x9b\x17\x3d\x22\x44\x1f\xbc\x52\x0b\xf2\xc9\x4e\xeb\xd5\xd0\x92\xe6\x06\x89\xc5\xa6\x13\xd8\x15\x07\x04\x3b\x12\x63\x6b\x32\x46\x2d\xb2\x3c\xef\x67\x04\x6c\x70\x51\x13\x94\x2b\xac\x95\x8a\x7d\x3b\x7a\x4a\x86\x0b\xae\xdb\x9a\x12\x36\x4c\xaf\xb9\x74\x95\x64\x69\xec\x65\x3f\x20\x6f\xd7\x55\x5f\xb3\x9e\x23\x4c\xf6\xe2\x23\xbf\xd3\x60\xc3\x6f\x91\x13\x2f\x3d\xe8\x7a\x8a\x1b\x6f\xad\x1c\x63\x24\x2b\x16\x36\xc6\xfa\x7e\x24\x2f\xe8\x98\x6d\xae\x46\x7d\xee\x40\xb7\x91\xfa\x24\xeb\x9f\xa3\xac\xe7\xb3\x9c\x1b\x2f\x1a\x23\x9d\x4e\x66\xf3\xdb\x84\x94\x64\xe9\x1d\xb9\x4b\xf3\x7b\x58\x0a\x0e\xed\x7f\x07\xa0\x0a\x91\x94\xec\x3e\xf6\x1f\x0e\x6d\xd4\xfb\xe3\xf3\xfb\x95\xf3\x28\x5e\x9a\xb5\x4f\x7a\x4e\x56\x16\x47\x6f\xe4\x7a\xb6\x5f\xab\x7c\x28\xe8\x7a\xfd\x44\xf5\x87\xa3\xb3\xeb\x40\xb4\x21\xb1\xbf\xa6\x99\x27\x3e\x0e\x7e\xd5\xe1\xcc\xf9\x47\x00\x00\x00\xff\xff\x1e\xed\x65\x73\x99\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x51\x76\xf3\xbc\x0a\xdc\x12\x20\x81\x60\x39\xb2\x25\xed\x7f\x09\xf7\x80\xe4\xc4\xb1\x93\x36\xfd\xfe\x97\xdb\x9c\xb6\x89\x6c\x03\x1a\x86\x01\x45\xc0\x5f\x19\x98\x04\x20\x27\x41\x10\x04\xd0\xc6\x45\xd2\x58\x3f\x65\x07\x84\x7f\xfc\x11\x00\x48\x0c\x19\x45\x12\x70\x1e\xba\x6f\x43\x11\xb3\x7b\x31\xe2\xa2\x20\x89\xca\x6e\x65\x54\x8e\x55\x4c\x3c\x57\x13\x5a\x29\xbc\xe7\xb9\xca\x32\x57\xb9\xc3\xae\x4d\x75\xae\x96\x75\xef\x5e\xb7\xa1\x60\x6b\xb5\xe5\xb9\xda\x6c\x14\x95\xd6\x63\x95\x52\x9d\xab\xa3\x4a\x22\xa9\x6d\xae\xaa\xad\xd5\xbd\xe3\xbe\xef\x75\xae\x76\xe5\xc2\x9b\xc7\xae\x30\x1a\x6f\x29\x23\x47\xc4\x8e\xcb\x63\xd5\x57\x36\x14\x00\x14\xa8\xbe\x53\x82\x0a\x29\x70\x64\x14\x41\x48\x58\x58\xdc\x4e\x06\xc6\x27\x9e\x9a\x50\x14\x1d\xf1\x0c\x02\x04\x4a\x80\x8a\xbe\x62\xf3\x7d\x8a\x4f\x38\xef\x21\x00\x34\x64\x50\x60\x34\x58\x9f\x41\x41\x93\xba\x2f\xe0\xcd\xef\x0f\x88\x10\x60\xc4\x7e\xdc\x0a\xbb\x1d\xff\xbf\x6c\xf8\xd5\xee\x38\x6e\x0c\xf3\x65\xf1\xab\x08\x61\x17\x07\x8a\x4e\x2b\x48\xb2\xac\x24\xf7\xea\x3b\x74\x5f\x04\xe0\x04\x71\x2e\x54\x48\x68\xc7\x2e\x8e\x08\xdd\xb2\xa5\xc3\xfa\xdc\xb5\x82\x21\x24\x83\x91\x1e\x28\x62\x86\x0b\x8a\xc8\xf9\x27\x14\xc7\xee\x51\xfb\x4e\x0f\x0b\x82\x7f\xb2\x90\xb5\xb9\x85\xe3\x69\x7d\xef\x3f\x2b\x24\xbe\x5a\x41\x71\x6c\x72\x16\xa0\xb8\x7e\xe0\xa5\xc9\x99\xaa\x91\x0f\xc7\x6e\xe6\xd0\xdc\x0a\x02\xb9\x8d\x1c\xf9\xf2\xbb\x67\x7d\xad\x0c\x93\xad\x2c\x6a\x8e\x4c\x27\xc7\x59\x73\x2a\x0c\x96\x4d\xd8\xeb\x2f\xb7\xdd\xf8\xc0\x31\x5e\xa7\xe8\xdb\xb8\x46\xdf\x8b\x20\xf0\xc0\x13\xd7\xdc\x3e\x28\xb9\xd7\x19\xc3\x37\x9c\x8a\xff\xf4\x81\x59\xf4\xe0\xc4\x3b\x66\x11\xf4\x2b\xb3\x00\x8d\x7e\x61\x02\x65\x7e\x9f\x89\x40\xdb\xf1\xc5\x3b\xda\xb1\xf6\x1e\x61\xb0\x34\xf1\xd5\xd3\x3e\xe7\x6e\xd6\xce\xae\x48\x0b\xc3\x47\xa4\xc9\xf2\xff\x39\x4f\xa4\xd9\xe7\xe8\x47\xba\x44\x4f\xc3\xff\x16\x7e\xe1\xc9\xeb\x2e\x0c\x0c\xcf\x55\x7d\xcf\x9c\x5b\xf4\x9a\x24\xcf\xba\xed\x23\x6c\x21\xa4\x44\xa1\x12\xf9\xa9\x72\xee\x4b\x00\x65\x7a\x8b\x7a\x04\x7d\x83\xdb\x7d\xe5\xc4\x51\x38\xc7\x02\x93\xd5\x30\x6b\x5d\x23\x7a\x97\x82\xa5\x49\xb4\xac\x51\xa0\x1b\x68\xc3\xaa\x04\x43\xc8\xf0\xb2\xa7\x0b\x6f\xee\xac\xa1\x6f\xfd\xc4\x7a\xea\x7b\xf4\x11\x57\xd1\xc0\x67\x77\x85\x8a\xfb\xbd\x9e\x38\xbb\x7f\x4d\x4c\x86\x47\xf5\xad\xa7\x84\x37\xe7\xc4\xcc\x36\xc0\xf4\x3f\xf7\x6a\x5e\x81\xc8\x79\x76\x06\x8f\xe2\x51\xa5\xe8\x56\x31\x6c\xec\x83\x8b\x7a\x2c\x69\x69\x78\x58\x7b\xd6\xe2\xd2\x79\x7c\xf9\x9d\x39\x01\xce\x29\xdd\x39\xa0\x88\xe2\x3c\x88\x5e\x98\xb1\x5c\x78\x94\x49\x03\x17\x7a\xcd\xf5\x56\x66\xae\x91\x03\x91\x9c\x5e\xf9\x77\xf1\xe2\x3e\xfc\xea\x91\x61\x88\x1a\x9d\x3d\x51\x91\x42\x05\x39\x07\x4a\x36\xbb\x96\xc2\x9d\x29\x65\x14\xeb\xad\x27\x4d\xb6\xb7\x52\x4b\xd3\xad\x95\xd2\xad\x74\xde\xd5\xbc\x1c\x46\xcf\xa3\xc8\xde\xb6\xad\xd7\x9a\x24\x4b\x96\x4e\x5a\x55\x8c\x6b\x51\xcd\x47\x1d\x9c\x79\x5e\x69\x55\xd2\x1b\x8f\x77\xbc\x1c\xa7\x63\xcf\xb5\x5d\xf6\x1c\x6c\x2d\x0f\x9c\x7e\xfb\x71\x5a\xdc\xf2\x41\x06\x46\x9e\x91\xa8\xce\x62\xc0\xfc\x97\xfc\x8d\x72\x8b\x09\x19\x83\x3b\x0c\x57\xfd\xe5\xe9\x5f\xd3\x4b\x6e\xb5\xe2\x4b\x6e\x99\xf0\xc7\xdc\xd2\xe7\xdc\xda\x54\x70\x77\x84\xc0\xb9\xda\xb3\x22\x3c\xe7\x95\x74\xf6\x11\xbd\x69\x53\x64\xbb\x57\xa4\xc6\xa9\x58\xab\xd9\x36\x16\x4c\x25\x51\x19\x3d\xe5\xba\xf7\xbd\x2b\xd7\x6e\x5a\xf7\x3e\x76\xed\xfb\xb0\xae\x63\x24\x61\x25\x20\x68\x9b\xb2\xd2\x7f\xe9\x8f\x1f\x3a\x23\x6f\xe9\x87\xce\xc8\x1e\xe6\x17\x33\x17\x77\xf8\xe7\x99\xeb\x6d\x9f\xad\x74\x74\x84\x98\x0e\xec\xa4\xd7\xd1\x0b\x5d\xdd\x26\x0a\x1f\xbb\xe9\x07\x55\x5c\x11\xcb\xec\xde\xd1\x59\xbf\x50\x30\x09\x0c\xed\x9d\x86\xf9\xd1\xa0\x5c\x15\x8b\x37\x83\x83\xe7\x7f\xae\x44\x29\x74\x66\x28\xc3\xca\x5a\x64\x78\xe5\x4d\x1a\x87\x46\xcb\xde\xfc\x6f\x8d\xec\x1e\x77\xf8\x8a\x21\x97\xd1\x3d\x8e\xd7\x09\xc9\xf3\x1c\xfb\x6f\x0b\x5d\xd9\xba\x66\xcd\xe7\x67\xeb\xf8\xf1\x59\xc3\xbc\xf6\x36\x71\x3b\x57\x9b\xd1\x78\x74\xcd\x98\x75\x41\x8a\x3c\x38\xf4\x2f\xba\x24\x7e\x2a\xf8\xa0\x01\x05\xae\xfa\x5e\x50\xbf\xd0\x80\x42\x3f\xeb\xfb\xb7\x1a\x50\xf2\xfe\x49\x03\x1e\xfc\x0d\xa5\x7b\x3b\x27\xc8\xef\x9d\x85\x40\x93\x9d\x3a\xcb\xe4\xef\xdc\x83\x5e\xf5\xaf\xd4\xa6\x79\xe1\x1e\x18\xb8\x3d\xe7\x2f\x3e\x9e\xb1\xfd\x99\xd9\x2b\xdb\x63\x42\x7c\x64\xf7\x59\x9f\xf1\x0e\xfe\x6b\xb4\x7d\x9d\x5b\xdc\x5a\x74\xdc\x87\xc5\x98\x11\x27\x46\x80\xb6\x26\xcf\xc9\xc4\x32\xf2\xcf\xf1\xfe\xb2\x5f\xc5\xf5\xfc\xf4\xec\x9a\x39\xcf\xac\xb4\xb8\x6b\xc8\x31\xd5\x29\xcf\x18\x34\x19\x69\x89\xae\xe5\xf9\x55\xa6\x43\x19\xd0\x54\x4e\x91\x69\xc6\x5f\x91\x3c\x6a\xec\x6d\x8f\x7b\xc4\x12\x53\xb6\xf9\xf4\x9a\x16\xc3\x50\x69\x4e\x8c\x16\x28\x5a\x36\xb0\xcc\xac\x82\x12\x53\x18\xa8\x58\xcc\xda\x04\x2b\xfa\x85\x60\x30\x50\x4d\x1e\x11\xa7\xa8\xc0\x5a\x57\x05\x46\xc5\xe6\xe7\x29\xf7\xe0\x67\x54\x48\x8b\xfe\x80\x60\x9a\x67\xa5\xf8\xea\x56\xb9\x4c\xfd\xf1\x2b\xf3\x9c\xa4\x34\x31\x9f\x6a\xba\xde\x93\x06\x5e\x0d\x6c\xd5\xc1\xf4\x69\xf8\x0e\x9d\xc3\x67\xd7\x98\xa9\xc3\x76\xa5\xb8\x3f\x32\x72\x74\x84\xa9\xb2\xef\xce\xc7\x9a\x6e\xcc\x63\x3b\x55\x28\x33\x6f\x67\xe6\x96\xfc\xfd\xb7\x40\x3e\x19\xdb\x7b\xbe\xd3\xcd\x6b\x7e\xf1\xfa\xe4\xbb\xf1\xf5\xfc\x65\xdc\x0f\x84\xe7\x5e\xcf\xbc\x5b\xf9\xca\x27\x86\x99\x77\x81\x3b\x77\x1d\x21\x67\x2f\xf3\x25\x8b\xf7\x93\xc9\x29\xce\xc5\xf5\x53\xa4\x1e\xe7\xda\xe5\x43\x29\x51\xfe\x82\x13\xd0\x8d\xd9\x73\xca\x93\x98\xf3\x22\x2a\x82\x7b\x6f\x5e\x0a\x4e\xf3\x1e\xfe\xf2\x4c\x14\x4f\x11\xf3\xe9\x9c\x52\x5d\xfd\x79\xaa\xee\x9a\x2a\x8f\x53\xd3\xcc\xe1\x9d\x7b\x6b\x76\x89\x27\x0e\xa6\xee\x47\x7f\x0a\x6e\x7f\x17\xcd\x3b\xdb\xaf\xde\xc3\x13\x79\xad\x1c\xd1\x4a\x7c\xbb\xe5\xd3\xd1\x9c\x95\xfd\x54\x0c\x88\xae\xe3\xee\xa3\x9a\x1c\x11\x4c\x3d\x73\x76\x30\x2b\xe1\x71\xb5\x4c\x65\x88\x7b\x10\xf1\xb9\xae\xc4\xce\x0f\x7e\x9e\xcf\x4e\x27\x2e\x84\x5a\xd6\x14\x17\x75\x49\xb3\x2e\xce\x3b\x9f\x99\x98\xda\xa9\x89\xe3\x9b\x0b\x6f\xb1\xb3\xc3\x2d\x1e\xa7\x07\x97\x20\x4e\x38\xde\xfb\x4e\xdf\x70\xcc\x59\x22\x37\xf7\xed\xe7\x1d\xa5\x23\xc2\x7a\x4c\x33\x4b\x6b\xa7\x26\xed\xbb\x7f\xa8\xde\x96\xa9\xd4\x52\x0b\x25\xe0\x10\xbe\xa2\xb2\x19\x94\x26\x5b\x81\xde\x53\x19\x22\x94\x85\x09\xeb\xc0\xba\xf7\xa6\x23\x6b\x6b\xb9\x5a\xb6\xbd\x53\xcb\xd8\x04\x47\xcf\x36\x9a\x62\xe9\x9e\xa0\xff\x05\x00\x00\xff\xff\x51\xd7\x83\x1a\x18\x16\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4f\x4f\xe3\x4e\x0c\xfd\x2e\x73\xce\x89\x9f\x7e\xab\x55\x6f\x2c\x12\x7b\xda\x45\x02\x6e\x08\x21\x67\xe2\xc2\x68\x27\x9e\xd1\x8c\x27\x25\x8b\xf8\xee\xab\xa4\x69\x12\x44\x26\x7f\x68\xa1\x3d\xb5\xd2\xd8\x8e\x9f\xfd\xfc\xec\xbb\x17\x21\x0d\x79\x06\x62\xb1\x62\x17\x30\x11\x8a\x6c\x60\x2f\x56\x77\xf7\x89\x20\xc8\x51\xac\xb6\x3f\x89\x30\x81\x9b\xa7\x97\xdd\x8b\x48\x04\x97\xb6\xfa\xe7\xd9\x29\x7a\x14\xaf\xf7\x89\xb0\x50\x42\xaa\x51\xac\xd6\xa0\x3d\x26\xc2\x33\x30\xfe\x0a\x0c\xa9\xd2\x8a\x4b\xb1\x12\x36\x38\xec\x5c\xd7\x81\x24\x2b\x43\xe2\x35\xe9\xa7\xd3\x78\xb7\xf9\xb4\x1f\x7d\x70\x28\x15\x16\xe8\xba\x10\x90\x65\x0e\xbd\xaf\x23\xec\xac\x20\x37\x81\xb8\xb3\x09\x8a\xf8\xec\xff\x6f\x75\x8a\x8d\x0d\x58\xeb\x4c\x11\xc1\xe6\x83\x94\x55\xcc\x36\x40\x6a\x8c\x9e\x09\x90\x0c\xed\x8c\xa6\x60\x46\xab\xce\x86\x41\xdf\x04\x6b\x75\x39\x55\xfc\x3e\xb4\xe9\xe4\x0a\x85\x9b\x3d\xaa\x2f\x0d\xb1\x03\xc9\xe7\x59\x36\xd1\x01\xc2\xcd\xd5\x86\x06\xfb\xd4\xc1\xf4\xc8\xbf\x1b\xbb\x4b\xe3\x2e\x9a\xe0\x6f\x10\x1f\xba\xe4\x71\x6c\x6b\x67\xf2\x71\x4c\x6c\xf6\x66\x1d\x3b\x20\xbf\x46\x77\xb9\xfd\xd8\x09\x52\x2f\x43\xa9\x72\xd0\x7e\x0e\xef\xbe\x7f\xcd\xcc\xcf\x67\x9d\x99\x43\xb9\x13\xe1\x9b\x04\xad\xa7\x74\xac\xb6\xc1\xbd\x59\x57\xa5\x13\x62\x3a\xfe\xd0\xbc\x46\xea\xf6\x99\xac\x5b\x32\x7c\x23\xc2\xdf\x01\x7d\x44\x3e\x2f\x40\xe9\x2a\x99\x0b\x87\x99\xe2\x59\x3c\xfe\x32\xfd\x9c\xb7\xbd\xb4\xca\xd5\x50\x43\xfb\xc4\xa8\xc1\xfd\x74\x66\xc3\x4f\xd7\xc0\x38\x6e\x8d\xcf\x56\xb9\x21\x9b\xde\x5c\x3c\x81\xc3\x5b\x73\xac\x59\x98\x3d\xe1\x07\xdb\xff\xb5\x54\x9c\x9f\xde\x11\xb0\x44\xcc\x52\xd0\x40\x12\xaf\xd6\xc3\x00\x9a\xe7\x4f\xe5\x7a\x74\x8f\xf8\x32\x4f\x8d\xfe\xfa\xd3\x31\x56\xce\x5e\x1b\x4b\x46\xff\xdf\xd9\x3b\xf6\x67\xa3\x8a\x31\x3d\x94\xf0\x5e\x79\xe2\xc6\xd1\x91\xec\x4c\x16\xcd\xb8\x0c\xce\x21\xf1\xad\xca\xf1\x86\x21\xb7\x27\x2d\x70\x73\x56\xd6\x13\xb8\x47\x3c\x92\x1c\x1d\xf0\xd0\x3b\xaa\xb4\xc4\x11\x5a\x70\x90\xfb\x51\x71\x51\xa4\x58\x81\x56\x7f\x3f\xb7\x0b\x51\x01\x69\x53\x1c\x15\x90\x65\xa7\xca\x47\x24\x6d\x5a\x90\x7b\xcc\xf0\x16\x29\x9b\x50\x6d\xd0\xda\x6c\x1a\x61\x1e\xc0\xe6\x30\x07\x45\x95\x2a\x1e\x67\x84\xa7\xd7\x8e\x04\x7d\x8d\x9e\x7f\xb4\xeb\xe5\x80\x07\xd6\x24\x73\xda\x10\xdb\x36\x0d\x6c\x89\x77\xee\xa0\x75\x0a\xf2\x4f\xed\x0e\x64\xa8\xcc\x4d\xf0\x43\x25\x50\x94\xe1\x33\x66\xbb\xd8\xd3\xc7\x69\xc4\x21\xa6\x1f\xad\x79\xf3\xe9\x9d\x7d\x01\x3a\x8c\x9f\x67\xb7\x9d\x9c\x34\x46\x58\x20\xf1\x87\x21\x8d\x50\x39\xe2\x11\x67\xf6\x5e\xc0\xb6\x17\x18\xe8\x03\x01\x5b\xda\xaa\xa5\x9d\x1a\xb9\x02\x22\x2e\xf3\xb6\x78\xc4\x79\xc6\xe1\x7e\x53\x9d\x2e\x97\x6f\x60\x37\x15\xbc\xff\x17\x00\x00\xff\xff\x65\x66\x60\xde\xe2\x13\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x09\xd2\xeb\x2a\xae\xde\x92\x46\x10\xcb\x01\x03\xfb\x5f\xc2\x2b\x01\x4e\x1c\xdb\x19\xfe\xd7\x7d\x6f\xf5\x9f\x3a\x39\x89\x6c\x83\xc6\x4f\x03\x09\xe0\x2f\x01\xa5\x00\x20\x1c\x10\x02\x02\x74\xd3\x18\xb8\xaf\xbf\x00\x0d\x02\x00\x41\x0e\x00\xc0\x0a\x82\x21\x30\x84\x5e\x6b\x03\x36\x44\x19\xcf\x54\x8d\x06\x81\x21\x69\xcb\xb1\xf0\xa0\xa2\xc5\x49\x45\xc3\x00\xb5\xd6\x49\x2d\xeb\x5e\x62\x4c\xa4\xdb\x5c\x01\x1b\xed\xd4\x62\x91\xd6\xbd\x04\x69\x52\x19\x79\x6b\x1a\xe2\xa4\x32\x2e\x6a\xe8\x20\x16\xe7\x6e\xa4\x79\x52\x65\xcb\x49\x53\x86\x49\x8d\x7d\x52\x35\x48\x02\xe5\x3e\xa9\x1b\x4f\x6a\x08\x39\xd4\x54\xc3\xa4\x36\x5b\xd4\x2a\x01\x74\x9b\xf7\x32\xc2\xa4\x46\xc8\x60\xc4\x93\x5f\xe6\x75\x6f\xd2\x6a\xa9\xc8\xa2\xea\x92\x38\xa5\x0e\x20\xb2\x56\x08\x8b\xb3\xcc\xbd\xe7\xb4\x4d\xd9\xb8\x2c\x89\x73\x02\x4d\x5b\x29\x93\x5a\x65\x52\x37\xa9\x21\xd4\x66\x93\xda\xc3\xa2\xf6\x0e\xb9\xa4\xc9\xaf\xa0\x4e\x6a\xad\x81\x5a\xe5\x36\xa9\xb4\x38\x6b\xb9\x08\x95\x38\x57\x10\xa9\x1a\xb5\xb8\x0d\xcd\xad\x55\x58\x50\x5d\xef\xe0\xd6\x7e\x50\x9d\x32\xbc\x40\xc2\xa6\xc1\xef\x17\x50\x0c\x40\x60\x60\xa4\x64\x98\xc0\xdc\xb2\x6c\x68\xa8\xfe\x8f\xfc\x2a\x60\x42\x05\x03\xc5\x04\xeb\xbb\x3f\xc1\xc6\xbe\xb6\x16\xbf\x1f\x61\xee\x28\x9b\xf3\x67\x04\xfe\x3c\x8f\xff\xd7\x1a\x7e\x95\xc5\xf7\x55\x98\xaf\x34\xfe\xf9\x8e\xbe\x2e\x76\x0c\xb6\x56\x89\x69\xad\xc2\x36\x38\x74\x9e\xc6\x2a\x3c\xa4\x02\xc8\xc0\x98\x30\xbc\x72\xe8\x2b\x27\x9a\x6b\x4f\xd9\x0c\x12\x02\x27\xe8\xfc\xd4\x49\xa2\xb3\x4e\x72\xf2\x1d\x02\xe4\x15\x0b\xc0\x23\x62\x14\x43\x00\x12\xf6\xa7\x24\xd7\xa7\xc6\x92\x0b\xa7\xcf\xbd\xdf\xef\xb5\x5d\xf4\x5f\x5d\xff\x8a\xe9\xb8\xda\x2f\x2b\xb5\x7a\x5a\x89\x20\xde\x73\x6d\x88\x61\xd8\x69\x4a\xe0\xbb\x35\xdf\xcd\x2d\xb5\x56\x23\x94\x5f\x75\x70\x5a\x0d\x64\xea\x43\x73\xf6\x35\xf7\xf5\x78\x3b\x73\x27\xee\x97\x31\xd6\xa3\x9f\xf5\x9e\x20\xe1\xd1\x6a\x6f\xe5\xa5\xa0\xff\x6f\x79\xa3\xd1\x91\x37\xcb\xe7\x95\xf2\x6f\x2b\xed\xb2\x1a\xe9\x51\x8a\xd7\x27\x7f\x97\x68\x6b\x37\xbe\xf0\x9b\x44\x89\xfa\x51\xa2\xce\xbf\xea\xe6\xe1\xc1\x53\x16\x08\x53\xa2\x4c\x47\x0d\x31\x96\xff\xd0\x1b\x4a\x48\xc7\xf5\xe4\xcc\xdf\x5b\x49\x87\x74\x1b\x1d\x7d\x89\xc3\x25\x3e\x1d\xb3\x10\xca\xcb\x5d\xf1\xec\x1f\x6c\x30\xd7\xf4\x7b\x7b\x79\x5a\xcc\xc0\x0e\xf6\xb1\x43\xdc\x9a\x1c\x3e\xf3\xe1\x33\x1d\x70\x45\x77\xb4\xfa\x88\x2a\x5c\x7e\x8e\xcf\x27\xaa\x20\x52\x39\xca\x54\xfb\xdf\x91\x09\xd1\x8e\xba\x17\xc0\x3f\xf0\xe1\x0c\xf0\xf1\x69\x82\x9b\x58\x41\x64\x38\xfa\x8b\xf0\xcf\xf6\x3d\x7b\x32\x32\xe2\x71\x25\xbd\xc3\xc7\xf7\xdc\x32\xcf\xbc\x85\x20\x51\x02\xa2\xd4\x47\x64\xda\x42\xd2\x15\x81\x5e\xf3\x64\xb7\x62\xec\x1a\x44\x55\x08\x44\x43\x0b\x1a\x29\xc4\x98\xe0\x0f\x7f\x23\x3f\x8e\x3c\x36\xf3\xd5\xdc\xf1\x95\x47\xf6\x0c\x18\x86\x24\x2b\x6b\xc2\xc8\xab\x3b\xb6\xcb\xc8\x97\x04\x49\x2c\x7a\x96\x33\x51\x4a\xe2\xd8\xa1\xe4\x79\x8e\xc0\x34\x81\x6a\x82\x44\x09\x13\xc4\x6e\x9b\x96\x86\x4d\x5b\x69\x5b\xac\x5a\x2a\x4a\x8f\x28\x14\x2b\x36\x93\xce\xb5\x02\xa3\x6c\xd0\x63\x21\x4a\xd8\xb4\x10\x40\xde\x6c\x8b\x1b\x97\x44\x9a\xe6\x8a\x1f\xb2\x4b\x66\x1d\xba\xf6\x1d\x87\x77\x4f\xb9\x76\x09\x11\x94\xa2\x91\x6b\x39\x0c\x1f\xf1\x9c\xe7\x54\x3e\xc7\xa7\x72\x31\x3c\xde\xe7\x34\x79\x8d\xcf\x93\xbe\x3c\xc2\xa6\xbe\x76\xfe\x60\xf0\x38\x75\x95\xfc\x93\x30\x19\x61\x70\x74\xc5\xe9\x2d\x9a\x83\x5e\x7c\xf9\xfb\x4a\x06\x2a\xf1\x51\xf1\x7e\xfb\xf3\xaa\x22\xa1\xb1\xbf\x0f\x6c\x8f\x6e\x97\x55\xb3\x84\xbd\xc6\xf2\x77\xe7\xa8\x98\x85\xb3\xe4\xed\x8e\x4b\x70\xbb\xff\x2e\xef\x61\x9d\x83\x9e\x5b\x37\x3d\xef\xd6\xd3\xe9\xae\x00\x64\x87\x58\x71\xdb\x0e\x6a\x1d\xcf\xee\x54\x50\xaf\xdf\xc8\xab\xb6\x55\x73\x05\xf2\x1a\xd2\x65\xf3\xcf\xc5\xd0\xc2\xa1\x4f\x40\x94\x04\x18\xc6\xbe\xa8\x65\x7f\x46\xbb\x3f\xf3\x83\xb4\xf7\xd1\xc0\xe6\x35\x1c\x2b\x25\x8f\x2d\x72\x2d\x98\xef\x03\xa8\x4b\xbe\x18\xfa\x8d\x36\xc3\xeb\xea\x04\x5e\xb9\x1e\x75\xe9\xbc\x59\xf5\x18\x38\xc9\xd0\xa7\x0c\x37\x1c\xdb\xfb\x35\x67\x84\x26\xcf\xf5\xec\x31\x3a\x62\x18\x27\xbf\xbe\xd3\x46\x37\x3b\xc1\xdb\x9d\xe2\x2b\x52\xd0\xe3\xd3\x43\x2f\x8e\x03\xaa\x9a\xc8\xf2\x5e\x5b\x78\x86\x52\xf2\x2c\x45\x90\xc6\xfd\xe9\xc9\x41\xf4\x78\xfe\xbb\xac\x5f\xb1\xaa\x9c\xb1\x2a\x0d\xad\x1c\x75\x91\x30\xf6\x5a\x3b\x29\xe5\x8a\xa5\xd1\x66\xa9\x84\xb4\x51\x81\x60\x7d\xe3\x68\x35\xe7\xa4\x54\x72\xec\xe8\x7d\x4f\x46\x0c\x64\x5d\x35\x4b\xed\x4a\x5c\xb8\x75\xd7\xe8\x37\xac\x9a\x48\x35\x7c\x39\x46\x79\x60\x15\xcd\xaa\x5f\x9d\xa3\x55\xf9\xcf\x6b\x48\x13\xc7\xf8\xe2\x9d\xe8\xad\xe5\x85\xe6\x18\x33\x3d\x2e\x9f\xf1\x2d\xe6\x72\x83\x83\xb1\x9c\xe3\x33\x96\x7e\xc1\xc1\xb8\xa5\x8f\x38\x08\x8e\x34\x9f\x71\x01\xc3\x8e\xbc\x77\xf8\x97\xd0\x51\xe3\xbf\x8d\x7f\x9e\x87\x30\x2c\xec\x7b\x41\x3d\x83\x3f\x6b\xd4\xe4\x5c\x5f\x9a\xaa\x05\xb3\x67\x65\xeb\xb6\x33\x31\x1e\xdd\xa9\x55\xef\xb3\xd5\xe2\xaa\xb8\xb7\xd1\xf1\xbd\xc9\xcd\x27\x6d\xb0\x89\x47\x0c\x90\xf7\xb3\xbb\x1c\xae\x11\x94\x47\x2f\x6a\xbb\x77\x4d\x6f\x76\xff\x22\x78\x89\x07\x7e\xd5\xa0\x8c\x09\x8a\xfb\xba\x03\xd3\x42\x54\x2b\xd5\xf8\x82\x91\xcf\x98\x83\xbd\xa2\x3c\xaf\xe6\x3c\xfb\x3a\xa6\x89\xc7\x4a\x69\xf5\x17\x08\xd6\xc0\xe2\x09\xa5\xe5\xd1\x5b\x5b\x3b\xd7\x87\xd6\xfb\x0d\x4e\xbf\x8b\xfb\x0f\x08\x97\xf6\xf8\xd7\x21\x2b\xee\xb2\x5a\x70\x1e\xf7\x8e\xfd\x1c\x63\x4f\x9f\x18\xef\xc1\xc2\xff\x82\xc5\x1c\x21\x07\x5e\xba\x04\x92\x28\x05\x85\x24\x5e\xb9\x21\xae\xbc\x95\x92\x79\xde\x12\x1a\x13\x0c\xdf\x45\x3c\xab\x8d\x6b\x19\x59\xa3\x8c\x9a\xc8\x86\xdd\xfd\xaa\x11\xe2\xbc\x0a\x51\xa3\xaf\xd0\x5c\xff\xa9\x66\x13\xdf\xdd\xef\xf1\xef\x5b\x73\x1d\xac\x67\xc2\xb4\x86\xeb\x32\xc1\xd3\x46\xd3\x3a\x47\x8a\xdf\x57\xf0\x69\x35\xd3\xc1\x39\xdc\x67\x14\x63\x9d\x68\x0c\x36\xa7\x39\xa9\x77\xf5\x9e\x57\x5c\xca\x21\x81\x8d\xfb\xe0\xf4\x9d\x96\xe7\x9d\xee\x1b\x3e\x21\x4f\x2b\x2b\x9c\x2b\xc2\x51\x13\x64\x6a\xcc\x17\x14\xcc\x7c\xae\x3f\xb2\xd0\xa5\x26\xca\xb2\x9d\x50\x10\x4c\x97\x57\x67\x7d\xe9\xcf\xdd\x26\x5e\x02\x41\x0e\x2f\xf8\xca\x3c\x24\xd6\x2b\xce\x18\x5d\x69\xb1\x27\x6a\x95\x19\xa8\x41\xe8\x5b\xc7\xad\xb7\xa0\xcc\xc0\x8d\x5a\x2e\xc1\x5a\xeb\xba\x61\xa7\x98\x10\x7b\x4e\x35\x49\x27\x13\xb0\xde\x92\x28\xf5\x68\x16\xfd\xf5\xe8\x20\x7f\xe9\x14\xf9\xbe\x4b\xcc\x3c\x62\xf4\x1f\x8e\x8c\x7d\x37\x1a\x53\xb5\xb9\x8e\xbc\xf4\x44\x33\xee\x2d\xf8\x6a\x6b\xe6\xc7\x80\x66\x8e\x01\x86\xe3\x73\x98\x78\x10\xe6\x15\x47\x7f\x72\x3c\x70\xf9\xe7\x7e\xf0\xd0\xc4\x9c\x7c\x78\x05\xb2\x26\x85\xfa\xe8\x93\xc6\x40\x78\x62\xdc\x88\xc7\x27\x8d\x26\x2d\x1c\x69\x3c\x69\xfb\xcc\xf0\x88\xb4\xc7\xce\xfb\xe9\x8d\x01\xa1\x44\x31\xb9\xf8\x62\x89\x67\x7c\x2c\x66\xc6\x27\x5f\x2c\xa7\xf9\xdf\x35\x23\xeb\x9f\x3b\x93\x0d\xef\xaa\xd4\xc7\x4a\x5f\xeb\x2c\x7b\x57\x67\xcd\xae\xf0\xdf\xec\x06\xc7\x3c\x86\xe7\x94\x76\x4e\x77\x2f\xa8\xff\x2a\x25\x7e\xa8\x9b\xf1\x91\xed\xc4\x3c\x8a\xae\xaf\xdd\x76\x5b\x58\x73\x8b\xb4\xe9\x98\xf6\xe4\x35\x21\x05\x51\xb9\xc6\x77\xca\x0a\x96\x03\x2b\x6b\xae\x41\xeb\xf0\x8b\xc7\x34\x1b\x96\x7e\x87\x87\x1d\x70\xf7\x79\xda\x01\x2b\x6e\x1d\xa9\xc3\xc8\x25\x2b\xce\xd9\x25\x1a\x36\x8b\x06\xfc\xe0\x2e\x5f\xe6\x9b\x5b\xd0\x0c\xdc\x71\xbf\xe3\x75\xfe\xf3\x8a\x03\xae\x77\x85\x94\x74\x65\x4b\xeb\x57\x89\x6e\x70\xed\x89\x2c\x2f\x56\x83\x95\xfb\x06\x92\x9b\x82\x25\xff\xb6\x3c\xb1\x82\x68\x34\xbb\x68\xf1\xec\x99\xfd\x5b\xb7\xe3\xf7\xce\x0c\xba\xc7\xfa\xcc\x49\xa9\x4c\x49\xac\x25\xb2\xe6\x51\x10\xb8\xc4\xad\x61\x95\x9c\x06\x77\x98\xac\x03\x3a\x5e\x9d\xad\x71\x38\x6d\x7a\x58\xc5\x31\xee\x69\x8d\x71\x16\x80\x33\x06\x02\xd0\x6f\xd6\xa9\xf1\x5c\x5f\x9e\xad\x53\x6d\xfb\x66\x1d\xcf\xef\x23\xcf\xd5\xac\x7b\x4f\x6b\xae\xab\x88\xb2\x90\xa3\x79\x46\xb2\x7c\x63\x3b\xd6\xa6\x94\x21\xce\x93\x8a\x6d\xcc\xac\x6e\xfd\xf1\x9f\xd2\x40\xff\xe6\x9f\x0d\xbe\xfb\xa7\x8e\xaa\xa0\xe9\xe6\xef\xd2\xc7\x3b\xf9\x3b\xab\x75\xa1\x4f\xd5\x8c\xbd\xad\x67\x3c\xbf\xbc\xb9\x92\xdf\x55\x38\xc3\xab\x4f\x3e\x6c\x61\xd6\x28\x96\xf6\xca\x61\x5c\xf9\x62\x8f\x51\x8d\xfd\x9b\x96\x68\xdb\x65\xfe\x7a\xb6\x44\xa5\x8f\x96\x90\xf9\xfd\x14\xb1\xc5\xa5\xda\xe3\xec\x5f\x97\xaa\xd3\x37\xff\xea\xfc\xd9\xbf\x46\x6d\x64\xe2\xd1\x34\xef\xf7\x5e\xe6\xde\x76\x2f\x52\xe2\x44\xbc\x7f\x53\xd6\x4b\xff\x7f\x91\xb5\xf0\xd7\x58\x9a\x3d\x62\x6f\xf6\x88\xa5\x5e\xcb\x1e\x4b\x9f\x3b\x03\xaf\xc2\xee\x23\xc6\xe3\xc2\xfd\x3e\xb5\x47\xa7\xe0\xbe\xa1\x53\xa7\x08\xde\xb9\x9c\x22\xf8\xb1\xab\x90\xc5\xfb\x3e\xf1\x7f\xd1\x0a\x08\xd7\xf3\xbf\x57\x2b\x20\xc4\xf0\xd1\x0a\xb8\x74\x35\xba\xe8\x1b\x2b\xc8\x3b\x7d\xb8\x96\xa7\x76\x13\x24\xf1\xba\x7e\x60\x7f\x3e\x9e\x5c\x9f\x5f\x23\xdb\xad\xb9\xb9\x17\x50\x5f\xcf\x26\x64\x9d\x4d\x88\x98\x74\xa5\xbf\x9c\x47\xfc\x70\x36\xc1\xc7\x8c\x0e\x90\x70\xd6\xfc\x5e\xbf\x26\x9c\x13\xa1\xe1\x3d\xb4\xf2\x3b\xd9\xe8\x60\x13\xcf\xff\x57\x0d\x3e\x69\x38\x66\x7d\xe4\x4f\xda\x63\x16\xf4\xd7\x19\xd0\x50\xc7\x8b\x3d\xbd\x9d\x1e\xb5\xf9\x61\xd6\xe1\xd4\x60\xde\x8b\xfc\x36\x4b\x75\x1e\xbf\xcc\x34\x9c\x6f\x5a\x9d\xc4\x69\x7a\x8f\x98\xe2\x79\x9e\x8e\x98\xf1\xd2\xa9\x8a\x17\xfa\x88\xb9\x9d\x25\x28\x91\xf9\x3c\x69\x47\xdc\xe8\xf3\xa4\x1d\xc7\xaf\x61\xe6\xa4\x1d\xb1\xc1\xe7\x49\xfb\x78\x82\xee\x26\x7f\xfc\x45\x76\xf5\x0e\x89\x10\x7e\x9f\x0c\xf3\xe7\x6a\xfe\xe3\x14\x1c\x49\xf4\x3f\x9d\x82\x3f\xb9\x3f\x4d\x99\x91\xd7\x39\x7b\x82\x7f\x7b\xda\x8c\x94\xcb\xcd\xb4\xf9\x30\x21\xf9\x73\x2c\x50\xe5\x93\x8f\xc9\xdf\x67\xb4\x97\x58\xa0\x39\x1f\x78\x39\xb5\xfa\xd0\x41\x19\xde\x46\xd4\x75\x9a\xfc\xe6\xe4\xc6\xb1\x11\xc3\x63\x32\xb1\xfc\xe0\xfe\x74\xf4\xf7\x1e\x71\x5a\x7e\xe9\x89\x8d\x6e\xba\x6a\xf9\xec\xf5\xaf\xf3\xcb\x11\xa7\x6c\xc5\xe4\xf9\x3b\x83\x1b\x5f\x0c\xef\x7d\x71\x79\xbd\x98\x0e\x3f\x1c\x53\x8c\x31\x9f\x7b\x4e\x4a\x47\x8e\x98\x9e\x3a\xb5\xbd\x7c\x95\x3d\xf2\xbd\x3f\xda\xbb\xd4\x84\xff\x4c\x7f\x8a\xfc\xad\xfe\x47\xf9\x52\xff\xe3\xaa\x3a\xc1\x70\x4e\x3a\x51\xd6\x09\xee\x9f\xb4\xbf\xfa\x3f\x1a\xf5\x02\x3f\xad\xb0\xef\x77\xd3\xf5\x7e\xc0\xaf\xf4\x8a\xd9\xaf\x9c\xf0\x7e\x2e\x82\xb2\xcf\x7d\x16\x02\x8b\xe5\x39\xef\xe4\x99\x55\x96\x54\x8f\x5f\x88\x3d\x73\xb5\x5f\x21\xe7\xf6\xf0\x0b\xb6\x8d\x58\x63\x6f\xcf\xab\xbb\x3e\x72\x99\x74\xcf\xb3\x2e\xdb\xcb\x0a\x64\x3c\xfb\x47\x94\x6d\x9e\xa3\x92\xc9\x38\x9b\x5e\x3c\x6e\x79\x3e\x0d\x32\xfb\xc9\xf3\x5e\x74\x99\xd7\xad\x79\xdb\xcc\xed\x01\x20\x3b\x94\x52\xcc\x31\x47\x62\x50\x23\x08\xc9\x62\x63\x68\x92\x2d\xa7\x16\xb4\x11\x9a\x52\x20\x92\x80\x8d\xd3\x16\x62\xce\x10\x1a\x40\x87\x5a\xbd\x6f\xe2\x14\xd9\x2a\x75\xdd\x74\xeb\xda\x01\x28\xfd\x5f\x00\x00\x00\xff\xff\xc1\xe2\xf2\xbb\x26\x2a\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\xc1\x6b\xea\x40\x10\xc6\xff\x97\x39\xef\xe9\xc1\x7b\x87\x1c\xbd\x3e\x4a\xa1\x42\x7b\x10\x91\x31\x19\x75\xe8\x3a\x1b\x76\x67\x53\x53\xf1\x7f\x2f\xca\x6a\xd2\x36\x51\xa9\xb4\xe9\x2d\x64\xbf\xd9\xfd\xcd\x37\x1f\x33\xd9\x42\xee\x24\x28\x8a\x42\xa6\x3e\x92\x01\x96\x32\x6a\x80\x6c\x32\x35\x20\xb8\x26\xc8\xc0\x92\xe8\xea\x7e\xf1\x40\x15\x07\x76\x12\xc0\x80\x8b\x9a\x64\xdb\xa3\x0a\x0c\x68\x5d\xee\xbf\x22\x8b\xfe\xf9\xfb\x0f\x76\x53\x03\x25\xd6\x38\xb7\x04\xd9\x02\x6d\x20\x03\x41\x51\xe9\x2e\x2a\xce\xd9\xb2\xd6\x90\x41\xc5\xf4\xd2\xd4\x2e\xa2\xe4\xca\x4e\x60\x67\xce\xb0\x9d\x1e\xad\xc8\xef\x91\xba\xdf\x4e\x9a\x39\x7b\x5d\x3d\xb1\xae\x1e\xc9\xff\x22\xf4\xd9\x33\xd5\x4d\x71\x50\xcf\xb2\x6c\x63\x2f\x49\x07\xa0\x4d\xd5\xd7\xe2\x9a\xe6\xbc\x42\x1b\xe9\xec\x20\xc2\x87\x8e\xae\xa2\x16\x27\x47\xd1\x90\xec\xa5\xa7\xef\xc6\xbf\x25\xe3\xca\x6b\x1a\x2e\xe2\xfd\xc6\x57\x4e\xf7\x5e\x9f\x2e\xc0\xa2\xf0\x14\x42\x1b\x9d\x85\x95\xd1\xf2\x2b\x0d\x14\x8e\xc3\x7e\xb8\x14\xdc\x11\x5a\x94\x9c\x46\x49\xfb\x63\x29\x68\x20\x4e\x56\x9e\x9d\x6e\xdb\xe0\x9b\xa6\x8b\xe2\xa4\x5e\xbb\x18\xba\xac\x63\x29\x68\x43\xc5\x91\x36\x51\xd0\x86\xf2\xa8\xce\x77\xd0\x98\x56\x4d\xba\xae\x95\xdc\x0e\xf3\xfb\x0b\x2e\x8f\x6b\xfc\x69\x5c\x49\x4b\x15\x89\x7e\xb5\xbb\x59\xfa\xfd\xbf\x67\x97\xf4\xe0\xf6\xee\x9e\x3e\xfd\xe5\x5d\x34\x3e\x2c\xa2\xf7\x3d\x4d\xdf\x02\x00\x00\xff\xff\x50\x51\xb2\x5b\xcb\x07\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x6d\x96\xeb\x36\x08\xdd\x12\x9f\x02\x96\x63\x7d\xed\x7f\x09\x3d\x48\xf6\xc4\x93\xe4\xbd\x66\xda\xd3\x77\x9a\xfc\x88\x07\x4b\xe8\xc2\x85\x2b\xa6\x40\x7e\x05\x94\x0a\x80\x70\x41\x28\x08\x10\xae\x56\x78\x9e\x1f\x6b\x80\xf0\x0f\x3f\x05\x00\x58\x41\xb0\x14\x56\xd6\xa3\x17\xed\x8e\x28\xeb\x94\xae\xe6\x50\x58\x87\xd2\x01\x76\x5a\x1b\x6d\x6b\x09\x1e\xcd\x75\x6c\x6b\xf7\x6d\xf5\x43\x68\xd4\x11\xcb\x8a\x14\xa7\x75\xa0\x17\x63\xd8\x56\x1b\xdb\x5a\xad\x0d\xec\x72\x6c\x6b\xc7\x6d\x6d\xd2\x4b\xe9\xc3\xb7\x75\xd8\x69\xd5\x5a\x26\x86\x2e\x2b\x41\xd9\xd6\xd9\x06\xb6\xd6\xb6\x07\xc2\xa6\xa6\x35\x23\x72\x98\x5d\x2b\x0b\x6a\x62\x3b\x32\x5b\x5f\xd6\xb4\xd4\xcc\x22\x49\xd5\x92\xeb\x05\x14\x03\x1c\x33\xc7\x04\x80\xdb\xe2\x10\x08\x1c\x30\xf9\xe1\xa9\xf5\x37\x9e\x92\x97\x7c\x4b\x4a\xe9\xef\x5a\x3b\xf8\xfd\xda\x02\x24\x8e\xac\x8e\x8e\x90\xe7\x32\xe4\x5f\x90\x67\x17\xc0\xe9\x04\xe8\x18\x00\xe2\x19\x29\x3e\xf0\x9d\xcf\x94\x3b\x95\x82\x02\x63\xed\x72\x01\x74\x76\x76\x70\x72\x61\x53\x08\x89\xa2\x2b\xc6\x43\x42\x15\x6e\xdf\x07\x42\x64\x79\x42\x88\xd6\xfe\x2c\x42\x85\x60\xd6\xe0\x85\x95\x91\x83\x1e\x28\x01\x1e\x48\x3d\xfe\x57\x48\x25\xec\x8e\xf4\x42\xd9\xdb\x6f\xaa\x43\x89\xef\x6b\x27\xbd\x8d\x08\x0b\x1c\xb9\x87\xe0\x00\xde\x7b\xb1\xe4\x6e\x93\xdb\x6e\x42\x7c\x9f\x8f\x7d\x52\xbb\x9f\x44\x64\x4f\x6b\x89\x66\xca\x48\xc7\x47\xf5\x3f\x9f\x1c\x10\x88\xe5\x77\x1d\x91\x2b\x55\xb4\x06\x6c\x2f\x4b\x49\x70\x75\xc1\x78\xf4\x16\xb0\x13\xe2\xc6\x51\xea\x37\x1c\x6b\x3f\xea\x7e\x67\xd9\xb9\x4b\x8b\xf2\xaf\x98\xa7\x4f\x72\x50\x71\x4e\xbe\x96\xee\x91\x1f\x6a\x73\xe4\xa9\xb9\x76\xa3\xcb\x27\x82\xd8\xd8\x17\xc7\x80\x80\x2a\x91\xec\xd4\xe4\x55\xbf\x61\x74\xba\xa2\xf1\xf4\x7f\xf2\xbe\xaa\x07\x92\xf9\x5c\x49\xe0\xbc\x4f\xdc\xba\xa6\xe8\x94\xa7\xe1\xc4\x08\x08\x02\x0c\xcc\x55\x81\xbe\x9e\x77\xe4\x35\xce\x73\xd0\x79\xf9\x4c\xb9\x4e\x65\x3e\x80\x1d\x30\x9c\x74\x65\xd5\x65\xfd\x82\x13\x9a\xab\xd2\xbd\x3f\x13\x6d\x7a\xdc\xcf\xbf\x62\x80\x60\xc7\xf7\x3d\x3a\x15\xe6\x57\x26\x1d\xb1\x24\x9b\x4b\x23\x99\xc6\x9d\x05\x87\x0b\xed\xc7\x19\xe1\x82\x1f\x67\x84\x85\xfe\xeb\x8c\xa4\x25\xe0\xcc\x89\x3a\xfe\x24\x92\x56\x3e\x8f\xe4\xb0\x9f\x44\x82\x96\x9e\xae\x38\x92\xa5\xf4\x93\x9a\x91\xf8\x76\x2c\x77\x36\x6d\x0e\x98\xa5\xb5\x8a\xcd\x8f\xde\x0e\x2b\x21\x47\x83\x83\x84\xcd\x14\x59\x47\xd3\x4e\xc6\xad\x1a\xb1\xc7\xe8\x63\x92\xb2\x97\x32\x5c\x83\x1b\x35\xca\xe8\xbe\x62\x3f\xa3\x76\x7e\x64\xcb\xc9\x31\xbb\x51\xc9\x65\x69\x1e\x3e\xde\x25\x9e\x77\xd9\x5a\x35\x55\xd3\x4b\x36\x54\xea\x9e\xae\x6e\xc8\xbc\x68\x7a\xcf\xdf\x8b\x0d\x04\x91\x55\x89\x77\xde\xb6\xd2\xc6\xd2\xe2\xe4\x77\x7b\x71\x3d\xbd\xb0\x9f\xda\xf3\x9a\xd3\x24\xe1\x3b\xc2\xf4\x9c\xfa\xbb\xbf\xdf\xfb\xe1\xa0\x2f\x2d\x86\xe7\x0e\xc0\xf2\xda\x15\xd9\x0d\xa7\xf6\x48\xb5\x7f\xd9\x11\x32\x8e\x8f\xeb\x48\x5a\xfd\xb3\x1d\xa1\x4f\xea\xb7\x6e\xa2\xf9\x56\xa1\x95\xdb\x2f\x15\x5a\xa5\x7f\xa4\xd0\xaa\xf5\x23\x85\x86\x4b\xa1\x1f\x0a\xf6\x63\xe6\x34\xe4\x09\x6f\x56\xb1\xd8\xd7\x5c\xfc\x77\x9f\x24\xe8\x45\x2f\x29\xb9\x4b\xc5\x5c\x77\xa0\x45\xe6\xb0\x5c\xde\x7f\x8e\x71\x94\x17\x8c\x8c\x8b\x85\xc9\x4f\x6f\xb6\xb5\xdf\xb9\x49\x8e\xf3\xae\x86\x70\x7a\xcc\x10\x99\x31\x07\x21\xdc\x37\x7c\xe1\x9c\xd3\x69\xb1\x91\x1d\x2f\xbb\x5f\xf7\x3b\xe2\x4f\x6f\xcc\xac\x9a\xac\x97\xdc\xe5\x7e\xe7\x77\x55\xeb\xae\xdf\x22\x33\xfb\x3e\x9f\xc6\x62\x2d\xf0\xf7\x3c\x67\x4d\xfa\xd3\xcc\x25\x74\xd5\x6c\xda\x3c\x73\x4c\xbb\x0e\x4e\x5d\xd2\xf5\x6e\xab\xcc\x75\x9f\x5f\x53\x6c\x7d\x97\x6f\x9b\x15\x5a\x67\xa1\x5e\x41\x5b\xd7\x36\x18\x2b\xd7\x81\xcd\x99\xa2\xf9\x1c\x16\x44\xa1\x00\x54\x68\x50\x17\xab\xdc\x2c\xc7\x8e\x8e\x3a\x10\xfb\x10\x72\x3d\xfb\xe7\xec\xe3\x13\xc1\x9a\x16\x2e\x1d\x7b\x51\x9c\xdb\xdd\xfb\x8a\xca\xd7\x84\xb5\x19\x71\xd6\x35\xa5\xe2\xba\x1e\xc0\x60\xf7\x1a\x01\xad\x08\xf3\x97\x5f\x32\x79\x57\x0e\x83\xb6\x66\x54\xcc\x7f\xc4\x6e\x3a\x5b\xf6\x4c\x27\x73\x65\xb0\x2e\xc5\xd8\xfd\x6c\xfc\x35\x25\x3a\x65\x4e\x61\xf9\x5b\x4f\xb4\x7d\xa2\x6d\x4f\x39\xc5\x01\x1c\x58\xb4\x90\x1d\x76\x18\x31\xa8\x13\x10\x55\x35\xb3\xdc\x0f\xd8\x0d\x5b\x85\x5e\x2a\xd7\x88\x56\x1d\x7a\x9f\xa3\xd7\xea\xc4\xa2\x5d\x44\xbb\x21\xf6\x60\xcf\x5b\xcb\xa5\x8f\x38\x00\x28\xfe\x0a\x00\x00\xff\xff\x62\x0b\x27\x67\xc2\x0e\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

