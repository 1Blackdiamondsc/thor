// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xc1\x6e\xc2\x30\x0c\xfd\x17\x9f\x7b\x82\x5b\x6f\x93\x76\xdd\x17\x20\x54\x19\x62\x36\x4b\xc5\x89\x62\x87\xad\x43\xfc\xfb\x54\xd4\x12\xca\xa0\xdb\xd8\x04\xda\x31\xd2\xb3\xfd\xfc\xde\x73\x66\x5b\x58\x7a\x51\x43\x31\x28\x2d\x26\x2a\x80\x25\x24\x53\x28\x67\x5b\x10\x5c\x13\x94\x50\xa1\x73\x11\x0a\xb0\x26\xb4\xcf\xf6\x45\xaa\xb0\x9b\x17\x3d\x22\x44\x1f\xbc\x52\x0b\xf2\xc9\x4e\xeb\xd5\xd0\x92\xe6\x06\x89\xc5\xa6\x13\xd8\x15\x07\x04\x3b\x12\x63\x6b\x32\x46\x2d\xb2\x3c\xef\x67\x04\x6c\x70\x51\x13\x94\x2b\xac\x95\x8a\x7d\x3b\x7a\x4a\x86\x0b\xae\xdb\x9a\x12\x36\x4c\xaf\xb9\x74\x95\x64\x69\xec\x65\x3f\x20\x6f\xd7\x55\x5f\xb3\x9e\x23\x4c\xf6\xe2\x23\xbf\xd3\x60\xc3\x6f\x91\x13\x2f\x3d\xe8\x7a\x8a\x1b\x6f\xad\x1c\x63\x24\x2b\x16\x36\xc6\xfa\x7e\x24\x2f\xe8\x98\x6d\xae\x46\x7d\xee\x40\xb7\x91\xfa\x24\xeb\x9f\xa3\xac\xe7\xb3\x9c\x1b\x2f\x1a\x23\x9d\x4e\x66\xf3\xdb\x84\x94\x64\xe9\x1d\xb9\x4b\xf3\x7b\x58\x0a\x0e\xed\x7f\x07\xa0\x0a\x91\x94\xec\x3e\xf6\x1f\x0e\x6d\xd4\xfb\xe3\xf3\xfb\x95\xf3\x28\x5e\x9a\xb5\x4f\x7a\x4e\x56\x16\x47\x6f\xe4\x7a\xb6\x5f\xab\x7c\x28\xe8\x7a\xfd\x44\xf5\x87\xa3\xb3\xeb\x40\xb4\x21\xb1\xbf\xa6\x99\x27\x3e\x0e\x7e\xd5\xe1\xcc\xf9\x47\x00\x00\x00\xff\xff\x1e\xed\x65\x73\x99\x06\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x51\x76\xf3\xbc\x0a\xdc\x12\x20\x81\x60\x39\xb2\x25\xed\x7f\x09\xf7\x80\xe4\xc4\xb1\x93\x36\xfd\xfe\x97\xdb\x9c\xb6\x89\x6c\x03\x1a\x86\x01\x45\xc0\x5f\x19\x98\x04\x20\x27\x41\x10\x04\xd0\xc6\x45\xd2\x58\x3f\x65\x07\x84\x7f\xfc\x11\x00\x48\x0c\x19\x45\x12\x70\x1e\xba\x6f\x43\x11\xb3\x7b\x31\xe2\xa2\x20\x89\xca\x6e\x65\x54\x8e\x55\x4c\x3c\x57\x13\x5a\x29\xbc\xe7\xb9\xca\x32\x57\xb9\xc3\xae\x4d\x75\xae\x96\x75\xef\x5e\xb7\xa1\x60\x6b\xb5\xe5\xb9\xda\x6c\x14\x95\xd6\x63\x95\x52\x9d\xab\xa3\x4a\x22\xa9\x6d\xae\xaa\xad\xd5\xbd\xe3\xbe\xef\x75\xae\x76\xe5\xc2\x9b\xc7\xae\x30\x1a\x6f\x29\x23\x47\xc4\x8e\xcb\x63\xd5\x57\x36\x14\x00\x14\xa8\xbe\x53\x82\x0a\x29\x70\x64\x14\x41\x48\x58\x58\xdc\x4e\x06\xc6\x27\x9e\x9a\x50\x14\x1d\xf1\x0c\x02\x04\x4a\x80\x8a\xbe\x62\xf3\x7d\x8a\x4f\x38\xef\x21\x00\x34\x64\x50\x60\x34\x58\x9f\x41\x41\x93\xba\x2f\xe0\xcd\xef\x0f\x88\x10\x60\xc4\x7e\xdc\x0a\xbb\x1d\xff\xbf\x6c\xf8\xd5\xee\x38\x6e\x0c\xf3\x65\xf1\xab\x08\x61\x17\x07\x8a\x4e\x2b\x48\xb2\xac\x24\xf7\xea\x3b\x74\x5f\x04\xe0\x04\x71\x2e\x54\x48\x68\xc7\x2e\x8e\x08\xdd\xb2\xa5\xc3\xfa\xdc\xb5\x82\x21\x24\x83\x91\x1e\x28\x62\x86\x0b\x8a\xc8\xf9\x27\x14\xc7\xee\x51\xfb\x4e\x0f\x0b\x82\x7f\xb2\x90\xb5\xb9\x85\xe3\x69\x7d\xef\x3f\x2b\x24\xbe\x5a\x41\x71\x6c\x72\x16\xa0\xb8\x7e\xe0\xa5\xc9\x99\xaa\x91\x0f\xc7\x6e\xe6\xd0\xdc\x0a\x02\xb9\x8d\x1c\xf9\xf2\xbb\x67\x7d\xad\x0c\x93\xad\x2c\x6a\x8e\x4c\x27\xc7\x59\x73\x2a\x0c\x96\x4d\xd8\xeb\x2f\xb7\xdd\xf8\xc0\x31\x5e\xa7\xe8\xdb\xb8\x46\xdf\x8b\x20\xf0\xc0\x13\xd7\xdc\x3e\x28\xb9\xd7\x19\xc3\x37\x9c\x8a\xff\xf4\x81\x59\xf4\xe0\xc4\x3b\x66\x11\xf4\x2b\xb3\x00\x8d\x7e\x61\x02\x65\x7e\x9f\x89\x40\xdb\xf1\xc5\x3b\xda\xb1\xf6\x1e\x61\xb0\x34\xf1\xd5\xd3\x3e\xe7\x6e\xd6\xce\xae\x48\x0b\xc3\x47\xa4\xc9\xf2\xff\x39\x4f\xa4\xd9\xe7\xe8\x47\xba\x44\x4f\xc3\xff\x16\x7e\xe1\xc9\xeb\x2e\x0c\x0c\xcf\x55\x7d\xcf\x9c\x5b\xf4\x9a\x24\xcf\xba\xed\x23\x6c\x21\xa4\x44\xa1\x12\xf9\xa9\x72\xee\x4b\x00\x65\x7a\x8b\x7a\x04\x7d\x83\xdb\x7d\xe5\xc4\x51\x38\xc7\x02\x93\xd5\x30\x6b\x5d\x23\x7a\x97\x82\xa5\x49\xb4\xac\x51\xa0\x1b\x68\xc3\xaa\x04\x43\xc8\xf0\xb2\xa7\x0b\x6f\xee\xac\xa1\x6f\xfd\xc4\x7a\xea\x7b\xf4\x11\x57\xd1\xc0\x67\x77\x85\x8a\xfb\xbd\x9e\x38\xbb\x7f\x4d\x4c\x86\x47\xf5\xad\xa7\x84\x37\xe7\xc4\xcc\x36\xc0\xf4\x3f\xf7\x6a\x5e\x81\xc8\x79\x76\x06\x8f\xe2\x51\xa5\xe8\x56\x31\x6c\xec\x83\x8b\x7a\x2c\x69\x69\x78\x58\x7b\xd6\xe2\xd2\x79\x7c\xf9\x9d\x39\x01\xce\x29\xdd\x39\xa0\x88\xe2\x3c\x88\x5e\x98\xb1\x5c\x78\x94\x49\x03\x17\x7a\xcd\xf5\x56\x66\xae\x91\x03\x91\x9c\x5e\xf9\x77\xf1\xe2\x3e\xfc\xea\x91\x61\x88\x1a\x9d\x3d\x51\x91\x42\x05\x39\x07\x4a\x36\xbb\x96\xc2\x9d\x29\x65\x14\xeb\xad\x27\x4d\xb6\xb7\x52\x4b\xd3\xad\x95\xd2\xad\x74\xde\xd5\xbc\x1c\x46\xcf\xa3\xc8\xde\xb6\xad\xd7\x9a\x24\x4b\x96\x4e\x5a\x55\x8c\x6b\x51\xcd\x47\x1d\x9c\x79\x5e\x69\x55\xd2\x1b\x8f\x77\xbc\x1c\xa7\x63\xcf\xb5\x5d\xf6\x1c\x6c\x2d\x0f\x9c\x7e\xfb\x71\x5a\xdc\xf2\x41\x06\x46\x9e\x91\xa8\xce\x62\xc0\xfc\x97\xfc\x8d\x72\x8b\x09\x19\x83\x3b\x0c\x57\xfd\xe5\xe9\x5f\xd3\x4b\x6e\xb5\xe2\x4b\x6e\x99\xf0\xc7\xdc\xd2\xe7\xdc\xda\x54\x70\x77\x84\xc0\xb9\xda\xb3\x22\x3c\xe7\x95\x74\xf6\x11\xbd\x69\x53\x64\xbb\x57\xa4\xc6\xa9\x58\xab\xd9\x36\x16\x4c\x25\x51\x19\x3d\xe5\xba\xf7\xbd\x2b\xd7\x6e\x5a\xf7\x3e\x76\xed\xfb\xb0\xae\x63\x24\x61\x25\x20\x68\x9b\xb2\xd2\x7f\xe9\x8f\x1f\x3a\x23\x6f\xe9\x87\xce\xc8\x1e\xe6\x17\x33\x17\x77\xf8\xe7\x99\xeb\x6d\x9f\xad\x74\x74\x84\x98\x0e\xec\xa4\xd7\xd1\x0b\x5d\xdd\x26\x0a\x1f\xbb\xe9\x07\x55\x5c\x11\xcb\xec\xde\xd1\x59\xbf\x50\x30\x09\x0c\xed\x9d\x86\xf9\xd1\xa0\x5c\x15\x8b\x37\x83\x83\xe7\x7f\xae\x44\x29\x74\x66\x28\xc3\xca\x5a\x64\x78\xe5\x4d\x1a\x87\x46\xcb\xde\xfc\x6f\x8d\xec\x1e\x77\xf8\x8a\x21\x97\xd1\x3d\x8e\xd7\x09\xc9\xf3\x1c\xfb\x6f\x0b\x5d\xd9\xba\x66\xcd\xe7\x67\xeb\xf8\xf1\x59\xc3\xbc\xf6\x36\x71\x3b\x57\x9b\xd1\x78\x74\xcd\x98\x75\x41\x8a\x3c\x38\xf4\x2f\xba\x24\x7e\x2a\xf8\xa0\x01\x05\xae\xfa\x5e\x50\xbf\xd0\x80\x42\x3f\xeb\xfb\xb7\x1a\x50\xf2\xfe\x49\x03\x1e\xfc\x0d\xa5\x7b\x3b\x27\xc8\xef\x9d\x85\x40\x93\x9d\x3a\xcb\xe4\xef\xdc\x83\x5e\xf5\xaf\xd4\xa6\x79\xe1\x1e\x18\xb8\x3d\xe7\x2f\x3e\x9e\xb1\xfd\x99\xd9\x2b\xdb\x63\x42\x7c\x64\xf7\x59\x9f\xf1\x0e\xfe\x6b\xb4\x7d\x9d\x5b\xdc\x5a\x74\xdc\x87\xc5\x98\x11\x27\x46\x80\xb6\x26\xcf\xc9\xc4\x32\xf2\xcf\xf1\xfe\xb2\x5f\xc5\xf5\xfc\xf4\xec\x9a\x39\xcf\xac\xb4\xb8\x6b\xc8\x31\xd5\x29\xcf\x18\x34\x19\x69\x89\xae\xe5\xf9\x55\xa6\x43\x19\xd0\x54\x4e\x91\x69\xc6\x5f\x91\x3c\x6a\xec\x6d\x8f\x7b\xc4\x12\x53\xb6\xf9\xf4\x9a\x16\xc3\x50\x69\x4e\x8c\x16\x28\x5a\x36\xb0\xcc\xac\x82\x12\x53\x18\xa8\x58\xcc\xda\x04\x2b\xfa\x85\x60\x30\x50\x4d\x1e\x11\xa7\xa8\xc0\x5a\x57\x05\x46\xc5\xe6\xe7\x29\xf7\xe0\x67\x54\x48\x8b\xfe\x80\x60\x9a\x67\xa5\xf8\xea\x56\xb9\x4c\xfd\xf1\x2b\xf3\x9c\xa4\x34\x31\x9f\x6a\xba\xde\x93\x06\x5e\x0d\x6c\xd5\xc1\xf4\x69\xf8\x0e\x9d\xc3\x67\xd7\x98\xa9\xc3\x76\xa5\xb8\x3f\x32\x72\x74\x84\xa9\xb2\xef\xce\xc7\x9a\x6e\xcc\x63\x3b\x55\x28\x33\x6f\x67\xe6\x96\xfc\xfd\xb7\x40\x3e\x19\xdb\x7b\xbe\xd3\xcd\x6b\x7e\xf1\xfa\xe4\xbb\xf1\xf5\xfc\x65\xdc\x0f\x84\xe7\x5e\xcf\xbc\x5b\xf9\xca\x27\x86\x99\x77\x81\x3b\x77\x1d\x21\x67\x2f\xf3\x25\x8b\xf7\x93\xc9\x29\xce\xc5\xf5\x53\xa4\x1e\xe7\xda\xe5\x43\x29\x51\xfe\x82\x13\xd0\x8d\xd9\x73\xca\x93\x98\xf3\x22\x2a\x82\x7b\x6f\x5e\x0a\x4e\xf3\x1e\xfe\xf2\x4c\x14\x4f\x11\xf3\xe9\x9c\x52\x5d\xfd\x79\xaa\xee\x9a\x2a\x8f\x53\xd3\xcc\xe1\x9d\x7b\x6b\x76\x89\x27\x0e\xa6\xee\x47\x7f\x0a\x6e\x7f\x17\xcd\x3b\xdb\xaf\xde\xc3\x13\x79\xad\x1c\xd1\x4a\x7c\xbb\xe5\xd3\xd1\x9c\x95\xfd\x54\x0c\x88\xae\xe3\xee\xa3\x9a\x1c\x11\x4c\x3d\x73\x76\x30\x2b\xe1\x71\xb5\x4c\x65\x88\x7b\x10\xf1\xb9\xae\xc4\xce\x0f\x7e\x9e\xcf\x4e\x27\x2e\x84\x5a\xd6\x14\x17\x75\x49\xb3\x2e\xce\x3b\x9f\x99\x98\xda\xa9\x89\xe3\x9b\x0b\x6f\xb1\xb3\xc3\x2d\x1e\xa7\x07\x97\x20\x4e\x38\xde\xfb\x4e\xdf\x70\xcc\x59\x22\x37\xf7\xed\xe7\x1d\xa5\x23\xc2\x7a\x4c\x33\x4b\x6b\xa7\x26\xed\xbb\x7f\xa8\xde\x96\xa9\xd4\x52\x0b\x25\xe0\x10\xbe\xa2\xb2\x19\x94\x26\x5b\x81\xde\x53\x19\x22\x94\x85\x09\xeb\xc0\xba\xf7\xa6\x23\x6b\x6b\xb9\x5a\xb6\xbd\x53\xcb\xd8\x04\x47\xcf\x36\x9a\x62\xe9\x9e\xa0\xff\x05\x00\x00\xff\xff\x51\xd7\x83\x1a\x18\x16\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x4d\x6f\xdb\x30\x0c\xfd\x2f\x3a\xfb\xd4\x61\xc3\x90\x5b\x5b\xa0\xbb\x6c\x2b\xd0\xf6\x56\x04\x01\x2d\x33\x89\x36\x59\x32\x24\xca\xa9\x51\xf4\xbf\x0f\x76\x14\xdb\x5b\x2c\x7f\x34\x69\x92\x9d\x12\x40\x24\xc5\x27\x3e\x3e\x32\x79\x7e\x65\x5c\x2b\x4b\xa0\x88\xcd\xc8\x38\x8c\x98\x50\x99\x23\xcb\x66\xcf\xf3\x88\x29\x48\x91\xcd\xb6\x1f\x11\xd3\x8e\xfc\xd1\xeb\xee\x84\x45\x8c\x8a\xac\xfc\x66\xc9\x08\xb5\x62\x6f\xf3\x88\x65\x50\x40\x2c\x91\xcd\x96\x20\x2d\x46\xcc\x12\x10\xfe\x70\x04\xb1\x90\x82\x0a\x36\x63\x99\x33\xd8\xb8\x2e\x9d\xe2\x24\xb4\x62\x6f\x51\x3b\x1d\xef\x5d\xe7\x53\x5f\xba\x88\x85\xa1\x75\xe3\xef\x84\xa2\xab\xcf\x5f\xaa\xbb\xbd\x09\x24\xbf\x9c\xa5\x1b\x90\xa0\x38\xde\x78\xf3\x26\xff\x51\x49\x2a\xad\x76\x46\xef\x4f\xd5\x20\x17\x98\xa3\x69\x42\x40\x92\x18\xb4\xb6\x8a\xb0\xb3\x82\x54\x3b\x45\xfd\x88\xb2\xcc\xe8\x3c\x50\x06\xeb\x38\x2f\x63\xd6\x01\x62\xad\xe5\xc8\x5a\x4c\x80\x19\x24\x08\x69\x02\xf9\xe8\xb2\x4c\x16\x43\x3c\x69\x43\x1b\x4e\x2e\x17\xb8\x39\xe0\xf5\xb9\x56\x64\x80\xd3\x75\x92\x0c\x54\x40\xe1\xe6\x7e\xa3\x3a\xeb\xd4\xc0\xb4\x48\x3f\xbd\xdd\x9d\x36\xb7\x3e\xf8\x99\x98\xb5\x34\x3a\xed\xc7\x44\xfa\x60\xd6\x91\x01\x65\x97\x68\xee\xb6\x97\x5d\x20\xf5\x12\xe4\x22\x05\x69\xc7\xf0\xee\xeb\x69\xe4\x69\x3c\xeb\xf4\x18\xca\x5d\x08\xdf\x38\x48\x39\xa4\x63\x95\x0d\x1e\xcc\xba\x32\x1d\x17\x1a\x39\x0b\x7f\x1a\x78\xb7\x8f\x64\xdd\x94\xe6\xeb\x11\xfe\x06\xe8\x0a\xe9\x3a\x07\x21\xcb\x64\x6e\x0d\x26\x82\x46\xf1\xf8\x64\xfa\x39\x6e\x7a\x49\x91\x8a\xae\x82\xb6\x89\x51\x81\xfb\x66\xf4\x86\xd6\x0f\x40\xd8\x6f\x8d\x2f\x99\x30\x5d\x36\xad\xbe\x58\x83\xc1\x27\x7d\xae\x5e\x18\xdd\xe1\x47\x9b\xff\x95\x54\x5c\x5f\xde\x12\x30\x45\xcc\xe2\xed\x3e\x76\xbf\xec\x06\xe0\x8f\x3f\x94\xeb\xc1\x39\x62\x8b\x34\xd6\xf2\xf4\x5b\x6e\xe8\x39\x5b\x65\x2c\x08\xed\xa7\xab\x3d\xf6\x27\xbd\x8a\x31\xdc\x94\xb0\xaf\x3c\x61\xe3\x60\x4b\x36\x26\x93\x7a\x9c\x3b\x63\x50\xd1\x93\x48\xf1\x91\x20\xcd\x2e\x5a\xe0\xc6\x8c\xac\x35\x98\x15\x9e\x49\x8e\x8e\xb8\xe8\xfd\x5f\xd2\xd2\xc2\x68\x33\x54\xc9\x80\xfe\x80\x94\x7a\xe3\x25\xa6\x03\xa5\xc1\x14\x84\x2a\xfb\xfb\x3c\x64\x1c\x16\x50\x0e\xf2\x01\xeb\xdf\xb5\xc7\x5d\x15\x06\xeb\x54\x87\xd8\x96\xa9\x43\xef\xf6\xdc\x41\xca\x18\xf8\xef\xca\x1d\x94\x56\x45\xaa\x9d\xed\x7a\x02\xa1\x12\x7c\xc1\x64\x17\xbb\x16\x1d\xe4\x8e\x74\xa0\xf2\xb5\x8f\x0f\xb7\x63\xb2\x48\x03\xd2\x13\x70\x58\x55\x8a\x65\xba\x15\xab\x79\xfb\xef\x7a\xf5\xcf\xff\x09\xde\x16\x73\x54\xf4\x5e\x88\x3d\x9b\x64\xc0\x21\xd4\xec\x01\x74\x8b\x1c\xa4\xeb\x47\xf6\xd4\xf4\xfe\x51\x20\xf5\x74\x6b\xc0\x23\xdc\xbc\x07\x01\xdb\xae\x4b\x20\x8f\x04\x6c\x6a\xa9\xa6\x56\xaa\x67\x64\x07\x5c\xc6\x8d\xdc\x80\xf3\x88\x2d\xfb\xb1\xdc\x33\xee\xfe\x82\xed\x5f\x70\xfe\x27\x00\x00\xff\xff\x24\x1a\x02\xe9\x3a\x14\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x07\x7a\xe3\x3a\x0e\xbe\x12\x0a\x41\x82\xc7\x61\xbd\xff\x11\xf6\x03\x49\x15\x4b\xb2\xe3\xe4\xed\xbe\x9d\x7c\x93\x91\x21\x09\x44\xfd\x51\x3c\x1e\xec\xc7\x81\x90\x07\x70\xec\x11\x3c\x02\x82\x97\xe0\xb9\xaf\x3f\xa1\x00\xc2\x1f\xff\x78\x00\x60\x01\x87\xde\x33\xf8\x5e\x6b\x03\x56\x44\x37\x4e\xc9\x12\x14\x3c\x83\x76\xec\x21\x97\x49\x8d\xb2\xa8\x51\x5a\x0a\x99\x27\x35\xd5\x49\x45\x45\x0f\xb5\xd6\x49\x6d\x3c\xa9\xc4\x18\x49\xca\xe4\x4b\xa0\x1b\x35\x6b\xa0\xf5\x2c\xd1\xe2\xc0\xc8\xa5\x89\x0f\x93\x2a\xeb\x34\xf6\x1d\x9c\x86\x79\x1a\x85\x36\xa9\xae\xa4\x28\x31\xc1\xa4\xa6\x75\x9a\x78\x17\x41\xb8\x4f\x6a\x0b\x93\xea\x7d\xf2\x35\x56\x3f\xa8\x0c\x65\x51\xab\xf3\x20\x65\x3e\xcb\xec\x26\x35\x40\x02\x25\x9e\xf2\xb2\xac\x67\xa3\x54\x8d\xd9\x2d\x6a\x58\xd6\x89\xb1\x03\x38\xb7\x38\xe8\x92\x2c\x71\xef\x29\x96\xa9\x1b\x57\xbf\xa8\x11\x24\x96\x9c\x27\xb5\x2f\x3b\xd4\xea\xa9\x55\x6e\x83\xea\x30\x4d\x6a\x4b\xd9\x51\x0e\x3a\xa9\xdc\x25\x48\x36\x6f\x29\xf4\x2a\x99\x1d\x8a\x59\x18\x2d\x12\x76\xea\xa0\x34\x7b\x5e\x9a\x78\x7b\xde\x81\xa0\x37\x93\x83\x92\x90\x62\x04\x45\x40\x65\x45\x45\xb1\xbf\x64\x77\x01\x23\x0a\x28\x08\x46\x58\x9f\xed\x0d\x56\x36\xde\x92\xed\x79\x84\x79\xa2\x0c\xf9\x94\xc0\xde\xe7\xf1\xef\xe2\x61\x77\x1d\xd9\xb9\x02\xf3\x27\x8e\xbf\x76\xa2\xf1\xc5\x8e\x5e\x17\x17\x0d\x8b\x0b\xeb\x90\xd0\x64\x1a\x5c\x78\x44\x1e\x40\x02\xc6\x88\xfe\x55\x42\xe3\x1c\x69\xf2\x9e\xba\x29\x44\x04\x8e\xd0\xf9\xb0\x49\x82\xab\x4d\x52\x1e\xd9\x63\x77\x5d\x02\x93\xd0\xb4\xda\x9e\xcf\x7a\x7d\xbe\x74\x93\xc8\x43\xb2\xfc\x20\x93\x65\xbe\x8f\xde\x03\x4d\x3e\x72\xb6\x70\x34\x63\xc8\x21\xeb\x7b\xd9\x5a\xbb\x9e\xd5\xbd\x71\x2b\xe9\xcc\xed\x0b\x4e\x84\xfc\xa8\xe5\x83\xd4\x8a\xe8\x87\x5f\xa7\x06\x76\x5a\xb7\xd3\x36\x4e\xfc\xb5\xfe\x17\x4e\xe0\xa6\x2d\xcc\xe3\x27\x7e\xfe\x6a\x7f\xf2\xea\x11\x94\xe1\x1c\x93\xbd\x47\x88\x78\xf6\xf0\x7b\x5d\x35\xfe\x59\x57\x65\x39\xcb\x96\xae\xf6\xa7\xf2\x1d\xa7\x4d\x57\xad\x7a\xd6\xe2\xf5\xcd\xef\x35\xea\xf4\x10\x07\xdf\x69\x14\x1b\x9d\x34\x62\x0c\xdf\xda\x66\x8f\xde\xa9\x0b\xf8\xa9\x51\xaa\x67\x0b\xb1\x21\xcd\x3f\x8a\x86\x82\xe5\xcc\xcf\xdf\xe4\x7b\xa7\xe9\xd0\xae\xd4\x7a\x7e\x5b\x9f\xf1\xad\x55\x77\x7e\x2a\x5e\xe3\x83\x93\xdb\x33\xbe\xa3\x1c\x1e\x53\xd0\x93\x7f\xf4\x94\xb3\xea\x4e\xd7\x7c\xba\xa6\x13\x06\xc9\x86\x6c\x1f\x11\x88\x1b\xfe\xda\x27\x08\xdd\x9d\xfd\xe0\xe0\x96\xdf\x5f\xa0\x52\x4f\x67\xdb\x3b\x92\xbf\x46\x19\x42\xf5\x67\x4e\x2e\xfd\xc6\x8b\xb3\x58\x8c\xe7\x9c\xb7\xcf\xc4\x7e\xf3\x81\x2e\x84\x5b\xd9\x61\x7d\x4d\x32\x0b\x87\x2e\xde\x89\x38\x02\x27\xbe\x79\x09\xe4\x43\x88\xbf\xeb\x65\x68\xd6\x25\xb2\xba\x23\x39\x0e\xbc\x61\xb8\xca\x89\xd6\x4e\xdc\x68\xe8\x0c\xc3\x4d\xe2\xf2\x8a\x5f\x76\x85\x88\xe3\x4e\xbd\xdd\x01\x71\xa3\x7a\xe1\xa8\x7f\xae\x76\xab\x89\xa6\xb1\x1b\x38\x11\x71\x54\xd0\x11\x3f\x76\x45\x10\xe7\x99\x04\xe3\xce\x93\x45\xdc\x1e\x71\xa3\x56\x4b\x04\xa1\x88\xa6\xd3\xaa\xd9\xb2\x6b\x3a\xda\x2d\x30\x6b\xaf\xc8\x7c\xd2\x2c\xf4\x98\x99\x53\x12\xac\xae\xf9\xd4\xaa\x68\xa7\x40\xcd\x65\xd4\x56\xd4\xe5\xe8\x6a\xc3\x1e\x4a\x4e\xa9\x01\x17\xdf\xa9\xba\xea\x12\x86\x26\x91\x22\xb1\x38\xb2\xea\x3c\x6a\x13\x5a\x1f\x71\x58\xda\xa8\x5b\x85\x3f\x72\x21\x59\x8d\x1e\xfe\x7e\x95\x85\xad\x8f\xf0\xd3\xa2\x53\x47\x18\xbc\xb6\x8a\xe7\x46\xd7\x41\x10\x9d\x06\xeb\x15\xd4\x09\x45\x67\xa8\x2a\x64\xdd\x82\xb5\x8e\x11\x44\x22\xc4\x61\x91\xd0\xb5\x48\x6e\xd8\xa4\xe5\x56\x42\x95\x5c\xd1\xf5\x80\x8e\x42\xc5\xa6\xae\x73\xad\xc0\xe8\x0a\xf4\x90\x89\x22\x36\xc9\x04\x90\x8a\x96\x50\x38\x47\x92\x38\x39\x7e\xa8\xb9\x89\x65\x44\x90\x9d\x38\x6c\x3c\xf5\x82\x19\x5d\x56\x4d\xab\x0e\x8f\x63\x19\x98\xb4\xa2\x48\xda\x35\x7f\xa5\x15\xc5\xf3\x73\x46\xeb\xfe\x12\x51\x2f\xf6\x32\xec\x99\xf6\xda\xe4\x83\xd1\x25\x6d\x76\x27\x10\xc7\xa4\x84\xde\xea\x0e\xce\x5c\xf5\x32\x11\xf7\x97\x9c\x2c\x92\xc3\x3e\x53\xfc\xf4\xc7\x7a\xb3\x88\xca\xf6\x7b\x54\xbd\x60\x7e\x59\x9d\x9f\xdf\x72\x63\x44\x38\x82\xf7\x51\xfd\x45\x73\x1f\x9f\xa4\x04\xf3\xfb\xf7\xfa\x9e\xf8\x1c\x76\xf6\x09\x54\xae\xa7\xa5\x2b\x7e\xf9\xcc\x7a\x42\x2a\xf3\xed\xa0\xb6\xf9\xee\xa2\x5a\xce\xb1\x92\x7d\x5c\x9d\xab\xaf\x4d\x82\xf5\xca\xe3\xba\x28\xaa\x3f\x26\x31\x7b\xb3\x5b\x4f\x6e\xe7\xa2\xe4\xf5\x4e\x40\xb0\x77\xbe\xd0\xf6\x39\x1b\x58\xad\x13\x66\xa1\x68\xc8\x46\x66\x05\x75\x71\xa6\xfd\xd4\x4f\x89\x1e\xac\xe9\x2f\xdc\xf1\x6a\x4b\x93\x8d\x9b\xe5\xc0\x8b\x0e\x23\x09\x9e\xf2\x57\x41\xf5\x3d\xcf\x99\xa1\xd1\xba\x20\xb6\x1c\x1d\x39\x8c\x53\x5e\x3b\x29\xf0\xed\xa4\xdd\x5a\xef\x6d\xb3\x23\x05\x3e\xda\xc6\xb0\x40\x44\x22\x69\xda\x3a\x2f\x20\xb3\x95\xd5\x70\x82\x38\xde\x8e\x27\x29\xb2\xff\x8b\xbe\x3f\xe2\x55\xbe\xe2\x95\x3d\x63\x56\x3e\xec\x11\x31\xf4\x5a\x3b\x09\xa5\x8a\xb9\x51\xd1\x98\x7d\x2c\x94\xc1\x6b\x2f\x1c\xb4\xa6\x14\x85\x72\x0a\x1d\x3d\x17\x97\x10\x3d\x69\x17\x49\xae\x76\x21\xce\xdc\xba\x59\xf5\x27\xbc\x9a\x68\x35\xe2\x59\x29\xec\x78\x45\x73\x7e\x12\x93\x68\xcd\x50\xf3\x1e\xd2\x1f\x2b\xa5\xca\xb5\xbf\x50\x69\x0f\x58\xa8\xfe\xda\x9f\x69\xa0\x1b\x16\x6a\x28\x1f\xb1\x10\x0c\x6d\x3e\x63\x03\xfa\x75\xe2\x23\x06\x5a\xed\xfa\xef\x63\xa0\xd5\x22\xf4\x0b\xff\x5e\x90\x4f\xe1\xf7\x16\xed\xd7\xf9\x24\x82\xaa\x57\x3d\xfa\x7e\xf3\x9d\x3a\xe5\xb1\x09\x8a\x6a\xd3\xb8\x68\x58\xf3\xc8\x87\x4d\xd0\xcd\x1a\xac\xce\x32\x06\xc8\x2a\xfa\xa6\x87\xc5\x37\xba\x7d\xaa\xd7\x2d\xba\x66\x34\x5b\x7c\xcd\x3e\x66\xcf\x07\x37\xfb\x94\xb8\x5b\x31\x22\x81\xa3\x38\xc0\x69\xa1\x6a\x0c\x86\xa2\xfe\x6d\xce\xc1\xd6\x6f\x4f\x6e\x87\x3f\xb6\xde\x46\x25\xf2\xe4\xb4\xa6\x2f\x84\x18\x59\xc3\x05\xa9\xdd\xbe\xa5\x88\xe9\x3a\x5f\xc5\x4c\x37\xac\x7e\x9f\xf7\x8f\x28\x77\xd5\x72\xf4\x42\xb2\xe9\xaa\xde\x64\xdc\x76\x1f\xd7\x1c\x3b\x62\x62\xfc\xf6\xea\xff\xbf\x1e\x5b\xe8\x85\xd3\xc6\xd6\xbf\x89\x8b\x14\xbd\x40\x74\x02\x11\x10\x57\xed\x4a\x2e\x5b\xed\x9a\x1d\xa0\x75\xad\xe2\xac\xb2\xcd\x7b\xc5\x4b\x70\xa3\x2f\xd2\xc1\xd9\xee\x2a\x21\xce\xbb\xd9\x6a\x2e\x42\x8a\x36\xb1\x25\xad\x6a\x9d\x32\xdb\x33\xe3\xb3\x79\x63\x7b\xc7\x4f\x6f\x98\x5d\x23\x1c\x3e\x9a\xde\x39\x53\xec\x39\xa4\xc3\x6b\x2a\x43\x72\x78\xae\x2a\xca\x32\xd1\xd8\x3a\x78\x18\x32\x91\x04\x25\x71\xa6\xe5\xd0\x60\x6c\x2e\x14\x2e\x9f\x69\x45\xde\xe5\xb9\x11\x13\xee\xf0\xb2\xc0\xb5\x2b\x1c\x7d\x41\x6a\xc8\x7c\x43\xc1\xd4\xca\x25\x26\x53\x97\x5b\x5f\x94\x7a\xbf\xcd\x18\xb2\xa2\x3a\xc3\xcb\xfc\x61\x3e\x19\x73\x49\xc6\x17\x7c\x65\x1e\x1a\xcb\x1d\x67\x94\x1e\xa7\x03\x6a\x95\x19\xa8\x81\xef\xa5\x63\xe9\xcd\x0b\x33\x70\xa3\x96\xb2\xd7\xd6\xba\x14\xec\x14\x22\x62\x4f\xb1\x46\xd7\x49\x9d\x41\x55\x74\x42\x3d\xa8\x06\xfb\xd9\xe7\xeb\x6f\xe6\x68\x7e\x9e\xa1\x13\xcf\xa8\xf8\xdf\x66\xc6\x76\x1a\x8d\xfd\xe4\xe4\xe3\x5e\x66\xb0\x99\xf7\xea\xf7\x59\x07\x94\x01\x55\x2d\xff\x15\xc7\xb5\x9f\x58\xe0\xe7\x1d\x43\x7f\x72\xe4\xed\x49\x37\xcf\x83\xdd\x12\xb0\x3a\x02\xfa\x38\xbf\x8d\x7c\x3c\x68\x34\x69\xfe\x4c\xe3\x49\xdb\xb6\xaf\x1b\xe7\x63\xfa\xdb\x7f\x56\x34\x7a\x84\x42\x41\xdd\x2d\x16\x0b\x5f\xf1\xb1\x70\x56\xbe\xc4\x62\x71\xf2\x43\x45\x96\x5f\x4f\x27\xa5\x3e\x75\xaa\x3b\xa7\x1f\xfb\x2c\x7d\xd7\x67\xcd\xc9\xf0\xdf\x9c\x08\x87\x36\x7e\xee\xbb\xe7\x9e\xfc\x07\xd4\x7f\xf8\x6d\xf8\x34\xdf\x5e\xf6\xa9\xdb\xde\x27\xc6\x81\x3c\xad\x3c\x57\xa8\xfc\xb9\x42\x8d\x59\xd9\xb8\x2f\x6c\x1f\x5d\x31\xad\x2b\xeb\x48\xc7\x75\xe4\x81\xfa\x45\x20\x26\x81\xa8\x86\xfc\x56\x03\x86\x3c\xd1\xa2\x7c\x93\xea\xd8\x91\x0f\x0e\x80\x71\xce\xfc\x0b\x57\xab\xf5\x5b\xbd\x0d\xac\xfe\xb4\xef\x38\x63\x6a\x4d\x6d\xfc\x36\x3b\xd6\x68\x35\xa1\x6a\xd0\xec\xe8\x53\x2d\xd0\xf4\xae\x1a\x58\x0e\xbe\xb9\x73\x7d\x67\xaf\x0f\xa6\xb1\xea\xab\xa5\x67\xaf\x31\xbd\x67\x73\xd6\xc2\x5e\xbb\xbb\x5b\xc0\x22\x64\xd3\xbc\xba\x9f\x35\x1f\x3d\x9b\xa8\x5b\xd6\x6c\x47\x5e\xad\xed\x91\x3f\xdb\xb2\xd7\x2f\x38\xce\xce\xaa\xf1\x61\xc3\x46\x75\xb3\xe1\xa8\xac\x30\x2b\xed\x7b\x5b\x6e\x27\xdf\xea\xe7\x6e\x39\xb3\x8f\x71\xce\x7b\xf5\xdb\xbc\x0f\x78\x68\x13\x78\xd4\xf9\xb3\x3f\x0f\x59\x76\x49\x3e\xfb\xf5\xad\x35\x9a\x7e\x63\x5f\x58\x72\xea\x27\x09\x46\x45\xfc\xd1\x2a\xa6\xf3\xb4\x8d\xcd\x6d\xe6\xbb\x11\xff\xe5\xfc\xbd\xd6\xf1\x33\xf7\x72\xab\x27\x6d\xb5\xfc\xb8\xeb\x74\x6b\xd7\xe9\x9c\xba\x2e\xf4\x9b\xfd\xe6\xfb\x5d\x67\xdc\xf0\xe6\xa5\x1b\x07\xd8\xb6\x75\x5b\xc7\xba\x5b\x98\x76\x4c\xe0\x0d\x13\x46\xdd\x72\x63\x5a\x9d\x57\x38\xae\xc9\xde\xd4\x7d\xb2\xf9\xf5\x44\xd3\x6f\xfb\xff\x6e\xd3\xc0\x6b\xe7\x6e\x54\x1d\x95\xf5\xbb\xed\x80\x79\xe6\xab\x0e\x9d\x75\xac\x94\xa7\x1f\x4d\x9b\x55\x29\xaf\x1b\xaa\x9e\xd3\x6d\x67\xd4\x8b\xbb\x75\x62\x6e\xf4\x5b\xbd\x5e\xf7\xfb\xbd\x26\xe6\xdb\x36\xa9\x37\xf9\xbc\x4d\x42\xb0\x92\x35\xb7\x49\x68\x3e\xf8\xb8\x4d\x9a\x6f\x94\x78\xaf\x9f\xfc\x68\x8d\xd7\x4d\x0f\x02\xdf\xf7\x2f\x6f\x27\xa0\x63\x53\xfb\xfb\x4d\x0f\x82\xd7\x7f\xbe\xe9\x39\x76\xcb\x2f\x5b\x14\xe4\xf5\x2d\x5b\x84\x7f\x7b\x9b\x82\x50\xda\xc3\x36\xe5\x75\x02\xf8\x69\xe3\xf0\x66\xc3\x67\x59\x87\x7e\xef\x5e\x97\x2d\xe3\x23\xd7\x67\xcf\xbc\xd6\xfe\x31\xa7\x8d\x0c\x44\x74\xfc\xb4\x0f\xfe\x26\x7f\xb6\xd9\xd6\x62\x1c\xd1\x15\xa5\xe3\x1b\xba\x1b\x47\x7e\xf2\xe2\xab\x54\x33\x1f\x23\xf2\xe8\x70\x07\xe2\x58\x76\xd2\xec\x62\x97\xe6\x62\x28\x35\x67\x48\xc4\xf4\xda\x77\xbc\x9e\xb8\x2c\x76\x8d\x98\x38\xa7\x5a\xc0\x38\xf9\xae\x8e\x67\x69\x72\xdf\xc3\xfe\x94\x3b\xf1\x15\x2f\x6e\x5a\x6f\x76\x6e\xeb\x7b\xa3\x99\xfd\x88\x6d\xcd\x92\x9c\xb7\x1e\x4f\x11\x8f\xff\xc7\x70\x54\x0e\xbb\x33\xba\xb3\xd3\xff\xb3\xb0\xce\x72\xd4\xbd\xed\xee\xb2\x08\x41\x99\x74\x43\x7d\xd3\xeb\x85\x83\x4d\x84\x32\xd0\x84\x68\xee\xa9\x49\xdd\xd8\xfd\x4f\x19\x89\xf2\x7c\x1b\x1c\xba\x63\x1a\x38\xce\xa2\xdb\x2c\xb4\x66\x99\x59\x69\x4c\x1f\xab\xa4\xa8\x2c\x62\x9e\x46\x31\x44\x44\x0a\x13\x2b\x4d\x02\x5c\xff\xf2\xad\x5e\x8f\xba\x33\x3c\x32\xde\x18\xd5\xd7\xae\xe2\xa9\xb6\xae\x6f\x0d\x63\x1d\xf6\xc9\x86\x34\x9b\xe6\xc7\xb7\xbc\x4a\x22\x7b\x1d\x93\x39\x2d\x0d\x4e\x7d\x72\x32\x49\x01\x92\x01\x0e\x85\x14\x52\x20\x06\x51\x82\x8c\x8e\x72\x0e\x25\xc7\x44\x0d\x12\xf5\xa6\x88\x5d\x7b\x22\x48\xae\x52\xc7\xde\x80\xbb\xf7\x49\xb9\x74\x6c\x39\xe6\x06\x05\x73\xeb\x4e\xaa\xf3\xec\x00\x28\xfe\x27\x00\x00\xff\xff\x2a\x7c\x1e\xc6\x92\x25\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xcf\x6a\xc3\x30\x0c\x87\xdf\x45\x67\x9f\x06\xdb\xc1\xaf\x30\x76\xda\xb1\x94\xa1\x36\x6a\x11\x73\xe5\x10\xc9\xd9\xbc\x92\x77\x1f\x2d\xce\x1f\x42\xbb\x16\x46\xc9\xd1\x96\x7e\xf2\x67\xf1\xad\x8e\xb0\x8d\xa2\x86\x62\xe0\xad\x49\xe4\x80\xa5\x4e\xa6\xe0\x57\x47\x10\x3c\x10\x78\xf8\xf8\xa4\x0c\x0e\x2c\xd7\xa7\x93\x5a\xc3\xb2\x87\x6e\xed\xfa\xfa\x9e\x0c\x1c\xc4\x64\xf3\xe0\x18\x4a\x2c\xf6\xf4\xfc\x72\x4e\xd5\x98\x71\x13\x08\xfc\x0e\x83\x92\x03\x35\x34\x7a\x4b\x86\x1b\x0e\x6c\x19\x3c\xb4\x4c\x5f\x63\x76\x97\x64\x6b\x1c\x05\x3a\x37\xa5\x2d\xe9\x7b\x71\xdd\x58\x6f\x31\x24\xba\xcc\x56\x5a\x74\xf6\xa3\xbb\xa8\x25\x4a\xdf\xb4\x24\x7b\xdd\xd0\x72\xf8\x6d\xb4\x13\xf1\x30\x00\xab\xaa\x21\xd5\x29\x1f\x0b\x1b\x63\xe0\x1f\x7a\x28\xe3\x4c\xe6\xf1\xfd\x01\xf1\x4f\x61\xa7\xe0\xff\x12\x16\x25\x4a\x3e\xc4\xa4\x97\xd6\xc6\x52\xd1\x37\x55\x3d\x6d\xbf\xc5\x72\xfd\x7a\xc5\x85\x21\x55\x06\xde\x72\xe7\x5a\xff\x6d\x97\xde\xcf\x22\x95\x3a\xb5\x24\x06\xdd\xfa\x37\x00\x00\xff\xff\xc6\x1c\x51\x50\x34\x04\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x5b\x12\xe4\x36\x08\xbc\x52\x03\x02\xc1\x71\x64\x3d\xee\x7f\x84\x14\xf2\x78\x9e\x9b\x64\x76\x53\xd9\x5a\xeb\xc3\x1a\x2c\xa1\xee\x46\x4d\x8d\x21\x47\x81\xb2\x01\x45\x8c\x60\x04\x58\xd7\x6a\xb2\x6e\x4f\xed\x20\xfc\xe2\x63\x00\x44\x51\xc8\x4c\x2c\x64\x76\xd7\xe9\x44\x25\x4f\xa9\xa4\xd5\x61\xe2\xad\xf0\x3c\x66\x9c\xd1\x51\x6e\xd1\x49\x6e\x55\xb0\xa3\xc4\x71\x46\x7b\x19\x66\x63\xfa\x19\xad\xfd\x8c\xae\x3e\xa9\xf7\xde\xce\x68\x1c\x5a\xf5\xc8\x93\x1d\x6b\xe8\x21\x85\x74\x9f\x97\xac\xee\xd1\x8c\xf4\xcd\xda\xc0\xc5\x49\xd4\xc9\x73\x37\x5c\x90\xbf\x60\x60\x18\x68\x39\x83\x9c\x02\x28\x4e\x60\xd0\xd6\x2b\xd7\xd1\x6d\xce\xb9\x53\x39\x38\x28\xf6\x2e\x2f\x20\x17\x17\x87\xb3\x17\xa9\x8a\x28\x61\x9a\xda\x52\x6f\xa1\x8a\xa7\x61\x89\xf5\xca\x98\x75\x60\x5c\x67\x38\x82\x20\x81\x25\x0f\x16\x63\xbd\xb1\x20\xae\xbf\x97\x85\x22\x44\x34\x64\xf3\x61\x89\xe0\x07\x13\xe0\x8e\x94\xa4\xfc\x51\x48\xe5\x18\xcf\x48\x2f\x94\x5e\x7f\x88\x92\x0c\x2d\x6f\x2f\xa3\x41\xb6\x37\x94\xcc\x08\xa5\xc4\xf3\xee\x66\xef\xbb\xdb\xcc\x55\xe1\x8f\xba\xbe\x67\x0b\x04\x91\xfd\x53\xad\xed\x74\x0e\x39\x5f\xdf\x9c\x7d\x6b\x70\xee\x08\x38\x92\x6f\xae\x64\xb8\x6c\xd7\xd2\x9a\xe9\x06\x25\xe7\xcc\x4c\x8b\x22\x10\x0c\x0a\xca\x55\x41\xbe\xe7\xa0\x5c\x3b\xd6\x89\x2f\x75\xdb\x39\xd3\xfa\xe9\xf2\x06\x71\x50\x38\xeb\xc6\xe8\x65\xbf\xe1\x4c\xd5\x55\xf9\xf9\xe6\x06\x34\xb1\xd0\x39\xff\x3b\x3e\x0c\x2d\xb9\x32\x6b\x75\xdd\x76\x40\x8b\xc8\xa7\x2e\x4e\x64\xa9\xcd\xf6\x31\xeb\xcb\xfd\x71\x5c\x68\xbf\x56\x84\xb3\xb6\x5f\x2a\xc2\xe6\xff\xb7\x22\x19\x09\xdc\x34\x51\xa7\x9f\x61\x32\xfb\xf7\x4c\xfa\xf8\x19\x26\x54\x33\xd3\xc5\x23\xab\x94\x79\xd2\x29\x89\xef\xe4\xf2\x5c\xcd\xba\x26\x96\xf5\x7e\x50\xf7\x36\x7a\xab\x16\xa5\x75\x34\x2e\x52\xab\x92\xe8\xec\x3a\xb8\x4a\x3f\x2a\x8b\xc7\x1c\x73\xb1\x8a\x9b\x4d\xd7\x90\xce\x9d\x93\xdd\x9d\xfb\x8d\xb5\xcb\x43\x2d\x67\x27\x48\x32\xf5\xb2\x9d\x4e\x8f\x6f\x89\xe7\x47\x6a\xed\x3b\x75\x64\x16\xc2\x76\xa6\xd4\xed\x86\xd4\x45\x33\x7b\xbe\xaf\x6a\x10\xc4\x2c\x35\x7a\xae\xdb\xd9\x5f\x62\x77\xa0\xac\xef\x99\xa5\x1d\xb7\x2c\xe2\x37\x27\x7f\x6a\x9a\x45\x78\x45\x98\x99\xb3\xeb\x9c\xe3\xd5\x0f\x8d\xef\x1d\x08\xef\x0e\x20\xfb\x74\x45\xba\x81\xf4\x44\x33\xc6\x7f\x74\x44\x21\x7c\x7d\x8f\x64\xd1\xef\x75\xc4\x2f\xeb\x52\x2c\x5e\xba\xf0\x9e\x69\xa9\xf7\x7f\x30\xff\xf6\x24\xfd\x8f\x6e\xc4\xa9\x4c\xf6\xa3\xdd\xaf\x6b\x24\xc2\x7b\xf7\xfa\x44\xe3\xa4\x06\x34\x32\x35\xae\xad\xb6\xca\x02\x75\x46\xc8\x6a\x3a\x04\xd2\xa0\x51\x8e\xe1\xa1\xe0\x19\x87\xac\xb6\x44\x71\x1c\x65\xba\x4f\x32\x3e\x08\x63\xcc\x1e\xc4\x52\xe7\x6c\x8b\x78\x8c\x83\x01\x70\xfc\x15\x00\x00\xff\xff\xf3\xc9\x8c\x37\xa6\x09\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

