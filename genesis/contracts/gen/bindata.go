// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdd\x6a\xfb\x30\x0c\xc5\xdf\x45\xd7\x7e\x82\xdc\xf5\x01\xfe\xf0\x67\xb7\x25\x0c\xa7\x51\x33\x41\x2a\x19\x4b\x6e\x97\x95\xbe\xfb\x68\xb0\x9b\x6e\xfd\x58\x18\xfb\x80\xdd\x05\x7c\x64\xfd\x74\x74\xe2\xe5\x1e\x56\xc2\x6a\x9e\x0d\x2a\x8b\x09\x1d\x10\x87\x64\x0a\xd5\xb2\x76\xc0\x7e\x83\x50\x41\x87\xf6\x3f\x4a\x10\xc5\xa8\xe0\x40\x92\x65\xc9\xbe\x28\xc0\x81\x0d\xe1\xf8\xe5\xdb\x36\xa2\xea\xb2\x86\x43\xed\x20\xf8\xc1\x37\x3d\x42\xb5\xf6\xbd\xa2\x03\x35\x6f\xf8\x2f\x99\x6f\xa8\x27\x1b\xa0\x82\x2d\xe1\x6e\xaa\x5e\x27\x5e\x19\x09\xc3\xc1\x9d\x93\xe5\xea\x13\xda\xa9\xef\x63\xc8\x5c\x17\x00\xe3\x0d\x45\xd5\x4c\xc7\x8d\x48\x3f\xa2\xe5\x33\x9f\xec\x49\x22\x29\xbe\x19\x6c\x16\x3a\x0b\x17\xd1\x47\x03\xdc\xb4\x56\x76\x3c\xc2\xcf\xf1\xf4\x67\x1c\x2d\x44\x77\xec\x0c\x67\x61\xb8\xba\xf6\x2c\x24\x26\x23\xdf\xd3\xcb\x2f\x99\xdb\xa1\x2d\x1a\x45\x36\xc4\x3f\x17\xdb\x71\xae\x6f\xb5\xf5\x36\x7d\x8b\xba\x9a\xca\xd5\x22\x71\x77\x0e\x17\xb1\x23\xb5\x77\xb9\xfe\x1a\x3c\xcf\xc2\xc3\x46\x92\x5e\xe3\x23\x6e\xf1\x19\xdb\x92\x88\x82\x7b\xb4\xf6\xfa\xcf\x94\x15\x0f\x99\x17\xdb\x49\x86\xdb\xa3\xbf\x9f\x6d\x79\x7f\xbf\xa7\xa2\x7c\xdf\x8c\x7d\x2f\xca\x33\x75\x89\x58\xbf\x06\x00\x00\xff\xff\x79\x46\xaa\x27\xc5\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x0f\x5a\x63\xbf\x0a\xdd\x12\x10\x48\xc8\x72\xf2\x77\xff\x4b\x78\x1f\x21\xb7\xb7\xbd\xda\x19\xeb\x73\xd4\x5f\xfb\x39\x53\x31\x37\x39\xc0\x01\x8e\x31\x82\xbd\x19\x84\x22\x00\x87\x88\x10\x11\x40\x83\xa4\x08\x00\x41\x52\x03\x84\x4f\xbe\x32\x00\xc7\x30\xf7\x0b\xa3\x42\x0c\x30\x63\x89\xb3\x17\xe4\x75\x8e\x4a\x32\xab\x59\x20\xe7\xe0\xd6\x49\x6e\xd5\x5e\xa4\x55\xa9\xcb\x8a\x21\xba\x35\x73\xec\x99\x80\xdd\xaa\xd5\xad\x8d\x62\x4d\x08\xb2\xac\x04\xec\xd6\x4e\x81\x39\xf2\x74\x6b\x1c\x6e\x9d\xd4\x28\x6b\x1d\x6e\xad\x24\x49\xaa\x79\xab\x30\xbb\xd4\xc0\x28\x86\x22\xef\x18\xb8\x75\x59\xec\xdf\x00\x53\xa2\xad\x67\x10\x54\x50\x88\x40\x00\xa8\xa4\x08\x41\x49\x48\x83\xa2\xa2\xd8\x17\xf9\xcf\x32\x0a\x28\x08\xe6\xbd\x76\xff\x4f\x0a\x1a\x34\xd8\x19\x52\xed\x29\x04\x3f\xb9\x2f\x9c\x4a\xb0\x76\x51\x86\xbd\x93\xa2\x3d\x2b\x2b\x43\x2d\x18\x0a\x01\x7f\x9b\x15\x30\x93\x7f\x77\x60\xcb\x08\x21\xc3\x0c\xa7\x4f\xb3\x5f\x7c\xc2\xc0\x96\x77\xf3\x23\x48\xba\xe5\xea\x6f\x2f\x8c\xa7\x2f\x19\xf3\x7a\x1a\x05\xe5\xd1\x2a\x8e\x35\x94\x85\xd5\xbc\xdc\x38\x90\xf1\x8a\x83\xb3\x51\x2f\xa5\x87\xd8\xd2\x2b\x88\x5e\x59\xfb\x98\x9b\x3f\x44\x0c\x73\xbc\x20\x25\xa0\xaf\x8a\xd8\x69\xb1\x5c\x5f\x2c\x07\xb3\x36\x4e\x47\x98\x17\x07\xbc\x5e\x15\x72\xc8\xb4\xf6\xba\xe3\x9a\x33\x6a\xb3\x8b\x94\x43\xb2\xbd\xdd\xcb\x1b\x5b\xce\xdc\xc4\xdc\x2e\xb9\x21\x98\x57\x8f\x31\x45\x84\x14\xf4\x1f\xf3\x9e\xa4\xfc\x95\xf7\x14\xe6\x27\x78\x4f\x29\x5f\x7d\xaa\xf0\xcf\x79\x9f\xda\x9b\xd8\xd6\x6b\xfd\x05\xe8\x27\x8e\xbf\xf3\x01\xa7\x65\x9f\x60\xf9\xc8\x9f\xe1\xc6\x87\x58\xa1\x14\x0f\xe4\x86\x71\xe5\xbf\x8e\xe2\xf9\xb7\xfc\x09\x7f\x80\x9d\x6f\xcf\xdf\x4f\xae\x58\x84\xbc\x72\xb2\xf8\xb0\xb0\x98\xaf\x00\xbe\xd6\x3e\x91\x65\xb7\x2a\xc6\x35\x49\x84\xb3\x21\xb3\x59\x54\x6c\xae\x7c\x43\x67\x30\x14\xb8\x63\x1f\x10\x0d\x33\x4f\x9b\x15\x77\x31\xf3\xaf\x78\xcc\x8f\xef\xc5\x1a\xc2\x2b\xab\xad\xe9\xae\xc8\x33\xc0\x03\x0b\x01\x56\x2d\xea\xb7\xc4\xf4\xfc\xec\x39\xb6\x58\x09\x28\x2e\x64\x02\xba\x91\xe1\x89\x56\xd2\x05\xed\x8d\x7f\x96\x1d\xeb\x3f\xb6\x2a\xd6\xc5\x20\x84\x3a\x87\xe5\x23\xe3\x5b\x36\xf9\x99\x2a\x5e\xa5\x19\x8f\x1c\x29\x0a\x2b\x7e\xdc\x23\x20\xcc\xd6\x09\xf4\xa5\xf8\x5b\x1f\xcd\x20\xe2\x9d\xca\xbd\xc8\xfe\xd9\xe3\xff\x52\x1f\xfa\xaa\xf8\x2b\x3a\x26\x9b\x05\x74\x32\x19\x11\x77\xfc\x05\xdf\xc4\x3f\xfa\xd3\x37\x0f\x20\x78\x04\xad\x8f\xfb\x33\x34\x24\xcd\x21\xf5\xbd\x9a\x86\x2f\xa8\xe8\x03\x85\x86\xb7\x67\xc7\xf6\xb7\xb3\x7f\x2a\xef\xb7\xb8\xd9\x74\xbb\xc5\x6e\x4d\x49\xe3\xa2\xb4\xbe\x39\xdc\xa8\xf8\x94\x5b\x68\x7f\x0d\x3f\x70\xf8\xd4\x8e\x08\x39\xd0\x9e\xc3\xf5\x45\x95\x36\x13\x48\xc9\x50\x24\x76\xd3\xb0\x23\xc9\xec\x80\xc3\x06\x77\xce\xa4\x33\x26\x1e\xa3\xcf\xa0\xb1\x87\x39\x26\x77\xe9\xa8\x31\x0e\xcd\xad\xcc\x44\x09\x0d\xc3\xa1\x0f\x51\xfc\xfd\x67\x3d\x57\xb6\x3e\x38\xfb\xf4\xff\xc7\x3e\xc5\xb5\x13\x42\x2c\xf6\x1b\x44\x75\x0d\xf5\x0d\x9d\x3b\xf6\x07\xfd\xe0\xb3\x51\x7f\x8c\xcf\xab\x07\x53\xbe\x6a\x3c\xd3\x8a\x5b\x7d\x18\x97\x25\xde\x29\x36\x8f\x5b\x62\x78\x50\x14\xfc\x25\x8a\x22\x35\xfa\xcf\x29\x8a\x94\xf4\xa9\xa2\x40\x48\xfd\x7b\xf9\xa5\x70\xd5\xa7\x8a\x49\x49\xe9\xac\xf8\x63\x25\xd1\xfd\xca\x87\xea\x42\x39\xa7\x87\x86\x78\x99\x1e\x47\x17\x84\xd7\x30\x7e\x59\x3f\x03\xe1\x35\x39\xec\x7b\x4b\x81\x6c\x0e\x10\x04\x9f\x2b\xc6\x05\xcb\xc2\x19\x95\xac\x0f\x55\xf7\xc3\x1e\xbc\x53\x6f\x3a\xea\x59\x6f\x03\xbc\xde\x5e\x44\x37\xa9\x87\x14\xb8\xe8\xe0\x54\x9a\x06\x8c\x43\x00\x4a\xa3\x80\x2d\x43\x89\x03\x95\xb5\x15\x22\x95\xc9\xd0\x21\x8d\x52\x84\x00\x64\x70\x0d\x05\x46\xf6\x8a\x7d\xa7\xf3\x3e\xa8\xe3\xdb\x34\x7b\x29\x1e\x5f\xa7\x36\xd1\x7f\x13\xcb\xba\x79\x69\xf3\x62\xd5\x98\x6c\x9c\xf2\x73\xb3\x76\x6b\x61\x5a\x08\x8b\xe6\x7b\x2d\xbc\x2c\xbc\x2c\xfc\x8e\xfe\xcd\xe3\xe3\xfa\x37\xfe\x0a\xfd\xcb\x77\xfa\x57\x7e\x8e\x11\x87\xbe\x59\xdd\xae\xe6\x8b\x02\x36\x9b\xfa\x7d\x08\xef\xaa\xe7\xa7\xaa\xb7\x94\xfc\xcf\x55\x2f\x3f\x51\xbd\x65\xa4\x5f\xae\x7a\xf9\x89\xea\xad\xac\x4f\x54\xef\xaf\x60\xc5\x62\x83\xab\xca\x2a\x4b\x81\xdc\xcf\xba\x34\x63\x8a\x33\xf2\x67\x6f\xc8\x01\x52\xff\xfc\xfd\xfa\xbe\x61\xa7\xc3\xa3\xfb\xdb\x08\x82\xf7\x14\xd4\x9e\xcf\x74\xac\x73\x2e\x68\x10\xb1\xec\xd8\xe0\x5e\x79\x10\x49\x8a\xfb\x86\xee\x9e\x49\xe8\xba\x0a\x7c\x15\xef\xbc\xf5\xe8\x13\xe7\x4e\xe3\xbd\xbf\xaf\xe0\x47\xf6\xf5\x9b\xa8\x27\xfb\xba\xde\x23\x25\x91\xf7\x98\xbe\x6e\x0a\x69\x77\xd0\xd6\xa6\xa4\x8c\xa7\x22\x5c\xcf\x1f\x75\xdd\xda\x90\xa4\x24\xa8\xf4\x93\xd5\xb1\xf1\x1d\x6a\x15\xf7\x44\x6f\x29\x1e\xbe\xef\x9b\xcf\xd6\xdb\x11\x17\x15\xaf\x93\x7c\x17\x93\x8f\x68\x9a\xb7\xf1\x3a\x6f\x14\xf3\xaa\x50\x8f\x9e\x59\xd7\xdf\x81\x3a\x59\xc6\xd6\x54\x9f\xd3\xfc\xd4\xa0\x76\x42\x52\x11\x3b\xa3\xf3\x3c\x10\xac\xca\xb1\x79\x24\x22\x3b\xfe\xf6\xd3\xe4\xb9\x7d\x88\x7c\xe7\x5b\xe4\x45\x9e\xf8\xdf\x43\xb8\xf8\xdf\xa5\x5d\x78\x71\xea\xe4\xae\x4b\xfd\x98\x36\x53\x3a\x4e\x49\xe3\x98\x9f\xbb\xf3\xee\x5e\xb4\x58\xd6\x63\xbc\xdf\xe3\xdc\xa9\xc9\xdb\x9d\xda\xf1\xd7\x0a\xd4\x87\x99\x99\xe1\x75\x9e\x3c\xa2\xd0\x7a\x45\x01\x50\x30\x4a\xa4\x54\x52\x49\x14\x40\x94\xa0\x62\x09\x34\x86\xf2\xe0\xc1\x1a\x29\x11\xd7\xc9\xb1\x72\x9b\x59\xb2\x40\x4f\x11\xb0\x49\x49\x35\xf7\xa1\xc2\x29\xb6\x99\x5a\xe2\x90\x39\x72\x85\x62\x04\xf8\x5f\x00\x00\x00\xff\xff\x6f\xaa\x67\xb8\xe8\x1b\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xd1\x6a\xdb\x30\x14\xfd\x17\x3d\xfb\xa9\x63\x63\xe4\xad\x0f\xe9\xd8\xc3\xba\x41\x52\x18\x94\x50\xae\xed\x9b\x4c\x4c\xbe\x12\xd2\x55\x52\x53\xfa\xef\xc3\xa9\x13\x3b\x43\xb2\x3d\x2f\x89\xfb\x94\x80\xae\xe4\x73\xae\xce\x91\x8e\x1e\x5f\x44\xa6\xc9\x31\x10\x8b\x19\x5b\x8f\x89\x90\x64\x3c\x3b\x31\x7b\x5c\x25\x82\xa0\x40\x31\x7b\xfb\x49\x84\xf6\x5c\x0f\xbd\x1c\x47\x44\x22\xb8\x34\xd5\x5f\xc7\x56\xd2\x46\xbc\xae\x12\x61\xa0\x84\x54\xa1\x98\xad\x41\x39\x4c\x84\x63\x60\xfc\xe6\x19\x52\xa9\x24\x97\x62\x26\x8c\xb7\xd8\x4c\x5d\x7b\xca\x58\x6a\x12\xaf\x49\x1b\x4f\x3d\xfb\x08\xe8\xf8\xd5\x27\x67\x90\x72\xb4\xcd\x0a\x90\xe7\x16\x9d\xdb\x2f\x70\x28\x82\x42\x7b\xe2\xa6\xc6\x4b\xe2\x9b\x8f\x9f\xf6\x08\xeb\x1a\x30\xc6\xea\x6d\x84\x9b\xf3\x59\x56\xad\x79\x5c\x20\xd5\x5a\x0d\xe4\x47\x9a\x0e\x45\x7d\x2c\xa3\x5d\x7f\xb8\xff\xba\x5c\xfe\xbc\x9b\xcf\xc3\xf0\xc2\xc4\xfa\xa1\x6d\x25\xee\xc6\x83\x62\xcd\xa0\x16\xde\x18\x55\x86\x61\xed\x0b\xe6\x84\x76\x53\x5e\x14\x61\x5c\x1c\x6b\xab\x8b\x6e\x65\xb0\xee\x1c\x67\xb0\x1b\xe4\x91\xe2\x6a\xd5\xe0\xb3\x91\x6d\x99\x07\x04\xe8\x7e\x81\xc5\xbb\x37\xc0\x67\xdc\xe3\x7f\x90\xdf\x05\xfb\x38\xc4\x81\x6c\x81\xdc\x1a\x6d\xbc\x07\xd3\xd8\x30\xb0\x05\x69\xc9\xe8\x3e\xdc\xb4\x19\xf6\xef\xad\x0b\x93\xea\xed\xed\x00\x7d\x75\xc9\xeb\xd2\xc7\x40\x8e\x99\x2c\x40\x45\xd8\xe5\xa7\xa0\x3e\x5f\xe5\x52\xf8\x7f\x53\x0f\x90\x6b\x85\xc3\xff\x75\x19\x5e\x4b\x89\x4f\x7a\x47\xc1\x3b\xaf\x81\x97\x82\x02\xca\xf0\xfb\x3a\xbc\x2f\xf5\xf0\x34\x92\x71\x65\x91\x6a\x15\xf1\xf8\x34\x31\xe2\x8c\xe7\xd7\xbb\x3c\xbb\x7a\x09\x46\x4d\xd1\x10\xdc\x20\x2f\xaa\x83\xec\xf6\xd0\x8b\x89\xa3\x48\xbf\x1d\x92\x21\x39\xb1\x95\x01\x95\xd2\xbb\xda\x16\x01\x6e\x16\x0b\x90\x54\x49\x72\x12\xd7\x54\x21\x70\x7e\xff\xe5\xe1\xc7\xd5\x3a\x3f\x52\x99\xa0\x54\x0a\xd9\xef\xfd\x12\x40\x9a\xca\x42\x7b\x17\x32\x9f\xa4\x1c\x9f\x31\x3f\x70\xee\x4f\x1b\x91\x09\x31\x6d\x1f\xcb\xeb\x4f\x1f\xea\xb7\xa0\x7c\x77\x18\x5b\x36\x5e\xae\x8b\x70\x8b\xc4\xa3\x29\x75\x08\x34\x32\xa3\xf3\x5d\x33\x9e\xd8\xed\xfe\x99\x03\xea\x5c\xc4\xce\xbf\x57\x27\xe5\x5d\x57\x75\xa4\x09\x5d\x71\x29\x32\x65\x40\x3a\x5f\xb4\xd2\xf9\x69\xe3\x56\x7f\x02\x00\x00\xff\xff\x2d\x66\x89\x32\x39\x0f\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x09\x76\xf2\x3c\x8c\x57\xd2\x6a\xcb\xc7\xf1\x7a\xff\x23\xcc\xb3\x9d\x40\x48\x29\x25\xfd\xe8\x1f\x66\x06\x78\xa5\x54\x71\x64\x59\xd6\x6e\xa5\x0e\xfa\x5b\x40\xc9\x01\x08\x3b\x04\x87\x00\x25\xa9\x77\x00\xc0\xea\x33\x20\xfc\xf2\x15\x00\xc4\x71\x5b\x5e\xe8\x0c\x1c\x83\x6b\xa5\x54\x60\x94\x3e\x4f\x4d\xea\x07\x34\x68\x8d\x3e\x4d\x28\xfa\xb0\x40\x5b\x85\xa6\xac\x13\x5a\x78\x42\xd1\xd0\x41\x29\x65\x42\x5b\x5e\xa0\xa9\x11\xfb\xec\x07\x94\x48\x27\x94\x38\x99\xa7\x65\x2c\x65\x5a\xa0\x8e\x8b\x36\xc4\x01\x65\x5e\x68\x60\xe4\x5c\xd5\x4d\x0c\x9c\x16\x1a\x24\xc7\xa0\x21\xc2\x84\x56\x9b\x50\x0f\x11\x8c\x78\x62\x10\x59\xc6\x06\x2d\x16\x92\x2c\xd0\xe0\x26\x34\x06\xd0\x90\x53\x1a\x50\x25\x99\xd0\xc4\xa5\x5a\x5d\x56\xac\xbe\x4e\x68\x29\x8e\x6a\xe1\x3a\xa1\x35\x4e\x68\x73\xa1\x56\x95\x49\x99\x53\xa7\x5e\x13\x0b\xea\xe0\xa0\x9b\x3b\x65\xd0\x8a\xa6\xeb\xb7\xf5\x7a\xbb\xbd\xde\x21\xb5\x63\xf1\x4d\x5d\x1f\x2f\xa0\x68\x60\xe0\x80\x00\xd0\xc8\x10\xd8\x48\xc9\xd8\xd0\x50\xfb\x0f\xcd\x6b\x01\x15\x0c\x14\xc3\x32\x36\x80\x81\xb1\x71\xc7\xae\xa9\x8f\x47\x18\x73\x22\x8f\xd5\x18\xc1\xb8\xdf\x04\x16\x1c\x86\xfd\x2e\xed\x12\x86\xc4\x7d\x7e\x85\xf9\x0e\xe3\x67\x5e\x77\x80\x43\x56\x26\x2e\x97\x16\x5c\xdc\xe7\x76\x9d\x46\x1e\xf3\x77\x51\xed\x92\x19\x81\x31\xa0\xbb\xa5\xb3\x63\x0e\x34\x71\xaf\x6b\x0c\x08\x1c\xa0\xf1\x85\x37\x68\xb2\xe3\x0d\xa6\xd0\xb5\xa0\xf3\x83\xd5\x5f\x24\xf7\xa7\x17\xba\x2b\x4f\xc2\xe0\x0b\xeb\x2d\x44\xe7\xaa\x5d\xa6\x1b\xae\x13\xea\x7c\xef\xa8\x7f\x40\x73\xa9\x7b\x9a\xab\x73\x08\x91\x6f\xf7\x93\x9e\xc6\x48\xe0\x77\x18\x09\x5a\xc7\x28\xf2\x5b\x8c\x0c\x7b\x8c\x31\xbf\x8a\xaf\x67\xde\xfd\xe4\x2e\x47\xa9\xbf\xe5\x5c\x2e\x3b\xce\x31\xe1\x7b\x70\xee\xee\x4a\x8b\xfb\x57\x79\x66\xd9\xdb\x27\x76\x1b\x1d\xec\x57\xba\x76\x3f\x47\x0f\x4a\x4c\x37\xf4\xc8\x91\x35\x1f\x19\x7b\x5d\x5f\xb7\x7b\x97\xef\xdb\x9d\xe6\xd5\xb6\x7d\xbf\xf6\xbc\xb7\x3f\x9c\xb3\x43\x54\xc4\x5b\xae\x3a\xe8\x73\xce\xcf\xe7\x39\xdb\x78\x87\x5d\xc4\xbf\xaf\x2c\xa1\x62\xec\xab\xee\xbe\x64\x59\x81\xe8\x9e\x3f\xd2\xfd\xd4\xbf\xaf\x60\x99\xd1\x4a\xfa\xa5\x9e\x4a\xc4\x3d\x65\x31\x38\xc4\xc8\xf4\x67\x5e\x55\x6a\xf8\xd1\xab\x4a\xae\x4f\x79\x55\x45\xf7\x67\x5e\x55\xa9\xed\x78\xa3\x4e\xfe\xd2\xab\x62\xf4\xfa\x8f\x56\x48\x2d\xec\x69\x2e\x2f\xa3\xf9\x9f\xe5\xb4\x95\xfc\x4b\x39\xd5\xa6\xbb\x75\x39\x79\x89\x06\xbd\x62\x5d\x84\xf8\xdb\x75\x39\xb7\xd7\x3f\xe7\x42\xc7\x18\xf9\x28\xc6\x7e\xaf\x79\x87\x24\x64\xeb\xbd\x53\x1f\xbb\xde\xcc\xcc\x68\x58\x9d\x78\xc5\xd5\x63\x67\x51\x15\x02\x51\xd7\x03\x70\x72\xde\x87\x23\x99\x51\xc7\xb5\xea\xe7\x9c\x15\x86\xb5\x00\x60\xfe\x7b\x9f\x15\xe0\xfa\xbd\xcf\x49\x7d\x66\x9e\xdf\x03\xa8\x04\x58\xad\xc0\xc8\xe0\x86\xdf\xe9\xfa\xe4\x10\x4c\x67\xfc\x89\x93\xe2\xb3\xa9\x5d\xe9\x34\x54\xe9\x69\x61\x6b\x40\x33\x5e\x30\xee\x14\x03\xa1\x0f\xa0\xaa\xf0\x06\x1c\xee\x56\x16\x27\x35\xc7\x68\xe0\xb3\xb9\x4d\x57\xca\x85\x4e\xa6\x05\xaf\xb4\x68\x32\x5c\x65\xf1\xbc\x5d\xb5\x43\x96\xf0\x55\x33\xaf\x3c\x30\x3a\x24\x49\xc7\xb8\xd4\x2c\x6b\xaa\x58\xb5\xa6\x9a\x7d\xd1\x54\x50\x9a\x47\x21\x5f\xb0\x9a\x34\x2e\x05\x18\x25\x43\xf3\x89\x28\x60\xd5\x44\x00\x31\x5b\xf6\x99\x53\x20\x35\x79\xd6\x16\xc7\x1e\xf1\xac\x71\x4c\x50\x64\xde\x46\x68\xa7\x4a\xdc\x47\x6f\x5f\x41\xcb\x46\x6f\x03\x4d\x09\x98\x7b\xeb\xc4\x70\xdd\x65\x87\xe4\xf1\xae\x5f\x5c\x3e\xed\x10\x45\xf1\xc8\x68\x94\x19\x35\xf6\x0c\x3e\xec\xe3\x8b\x18\xa2\xcd\x08\x63\x44\x09\xd7\x91\x71\x9f\xbf\xc6\xd8\xcc\x6e\x47\x76\x68\x8a\xdb\x71\xe6\x0f\xad\x23\x1c\x1a\x9d\x8e\xe9\xb8\x2b\xb9\x71\xeb\x41\x66\x6a\xe4\x23\xba\x56\x01\x2d\x04\xa7\x56\x63\x26\x97\xc0\x9c\x56\x2b\x7d\x5c\xac\x2e\xa1\x4b\xea\x2c\x63\x60\x11\xdf\x52\xb1\x60\xd7\x88\xeb\xbb\x6c\xf8\x6e\xd6\x10\xc5\xcc\xec\x7a\xef\x5f\x49\xa6\x7b\x54\xc3\x5e\xa8\x44\xe9\x14\x9f\x4d\xc1\x7d\x3e\x11\x04\x1e\x11\xcc\xd4\xe1\x4b\x55\x64\xfd\xfd\x48\xf3\x3a\xc6\x11\xd7\x8d\xfc\xcd\xc8\x46\x7c\xd7\xfd\xc6\x92\x57\xe6\x90\xd5\x1b\x8d\xdd\x92\x99\x6d\x4e\x38\x82\xfa\x56\x35\x85\x71\xff\xc4\xba\xe0\x9c\x11\x18\x4d\x7b\x6d\x8b\x8d\xbc\x1f\x3d\xfe\x99\xb5\x39\xac\xdb\x7d\x4d\xd6\xd4\x9b\x9b\x51\xc3\xd5\x1e\x99\x0e\xc8\xc6\x5a\x3a\x84\xa2\x23\xab\x34\xb4\xc5\x7a\xcd\xbd\x71\x08\xa9\xb9\x71\x65\xf0\x72\xbd\xda\xf9\xd7\x67\x88\xad\x67\x38\x3d\x9f\xe0\x91\xdd\x04\xfc\x9e\x7b\xc3\xe2\xad\xe7\x2f\xbb\x8c\xc3\xea\x2f\xeb\x51\x69\xf3\x3d\xae\x79\x46\x18\x99\xd7\x12\x05\x2f\x15\x84\xeb\xae\xdd\x46\xd1\xcf\xcf\x7b\x8d\xb5\x8f\xd0\xba\x8d\xc9\x69\x4b\x4d\x17\x3d\x1d\xf9\xd7\x15\xd6\xbf\xe9\x52\xcf\xb8\xd6\x35\x34\xc8\xfa\x5d\xbf\xf8\x89\xb3\x73\x92\x1f\x32\xa8\xda\xda\x27\x83\xfa\x25\xcd\x9f\x48\xec\x15\xb4\xdc\x64\x50\x0e\xa1\x81\x99\xdc\x89\x6d\x1a\xee\xeb\xaf\x0d\x8b\xe9\x35\x2e\xbf\x5a\x7f\x83\x63\x11\xcd\xdf\xc8\xc4\xb1\x7a\xff\x2a\x13\xa7\x51\xbe\xf5\x37\x9d\x12\x46\x5c\xea\xb3\xad\x90\x7a\x1d\x39\xd3\x30\x8a\x69\xc2\x11\x34\x4e\xf8\xc5\x7e\x9c\xc6\xf5\x73\xa4\x57\xe5\x96\x1f\x2d\x74\x7e\x2c\xfb\x78\x4a\x1e\x3e\x25\x50\x65\x50\xe3\x7b\xbe\x3b\x68\x39\x94\xa7\xbc\x9e\x16\xc2\x2a\xd3\xeb\x6f\xfb\x2f\x86\x76\x63\xd7\x70\x87\xc8\xb1\xa8\x77\x88\xa8\x34\x4f\x1b\xde\x80\x6a\x02\xba\x4f\xf5\xfb\xd8\x18\x87\x48\xe4\x06\xc7\xf0\x78\x46\xfa\x7f\x41\x03\x7f\xd8\xa7\xff\x97\x76\x69\x2b\x1d\x2d\x5e\xf4\xe9\x44\x79\x7d\x6c\x05\x16\xfa\x0e\xcd\xf9\x47\x3e\xfb\xd0\x7e\x1d\xb4\xf1\xad\x94\x46\x4a\xb1\x60\xaa\x94\x2d\x24\x17\x32\x25\x70\xd6\x32\x7b\x2b\x31\x06\xa5\x14\x7d\x0f\x06\xb2\x44\x44\x47\xd6\x54\xa3\x94\xa6\xc4\x89\x6b\x33\x3d\x58\xbf\xc4\x21\x03\x9c\x68\xe5\xf2\xcc\xbb\x07\x2c\x7d\x6a\x9a\x2f\xa0\xfc\x5d\x23\x69\x08\xbc\x56\x6f\x96\xfd\x1d\xa3\x95\xec\x52\x01\x10\x58\xad\xc5\x6d\xad\x05\x25\xbb\x9f\x6b\x2d\xab\x34\x4d\xe9\x7b\x5d\xd5\x25\xc0\x5a\xc3\xe8\x58\x6c\xe1\xf1\x52\x25\xe2\x4b\x65\x16\x90\x1e\xd4\x65\x4f\xcf\x63\x1f\x67\xdd\xe8\x96\xfa\xeb\xd9\xd2\xfb\xc9\xba\xff\x4b\xca\xdf\xd5\x56\x74\x7f\xe0\x32\x9b\xdb\x9f\x13\xa0\xcb\xbb\xfe\x4e\x74\xc5\x8f\xfe\x84\x5d\x76\x8e\xae\xde\xf4\x77\x99\x33\xf7\xa9\xa4\x3f\x59\x49\x47\xf4\xc6\x36\xf8\xba\x76\xd7\xf4\xf1\x26\xc6\x17\x9b\xec\x43\x1d\xf9\x91\x0f\x66\x32\x76\x8a\x30\xcd\xee\xaa\x0e\xad\xf3\xcc\x0a\xd1\xc7\x89\x67\xad\x89\x60\xc7\xd3\xe1\xa9\x18\x9b\x3e\xcc\xc5\x2e\x73\x55\x98\x73\xe5\x7a\x3b\xd7\x3c\x0f\x45\x5f\xa2\x79\xa3\x0e\x6f\x7e\x4f\xc3\xa4\xa2\xc6\x4f\x74\xf1\x02\xca\xdf\xd5\x62\xdc\xbe\xef\x7a\xe0\x33\xa3\x79\x95\xf5\x9c\xe9\x44\x3a\x66\x04\x83\xa7\xd3\x71\x89\x9e\x1c\x62\xa8\xd1\x81\xeb\xf6\x20\x94\x6c\x7c\xac\x5a\xc0\xf8\x30\xd7\x46\xe2\xa6\xdf\x5d\xc3\x48\xd4\x3f\x71\x7c\x02\x9b\x0a\x3d\xc2\x36\x2a\xc0\xdf\xe3\xeb\xeb\x7b\x70\x1d\xd0\x78\xda\x5c\x83\x6b\xe7\xf3\xd2\xeb\xb7\xd0\xc3\xf1\x89\x2e\x3b\xde\x76\xd9\x89\x4a\x15\xff\x7d\x17\xdd\x4f\xaf\xef\xbb\xec\xce\x8f\x00\x7f\x88\x57\x33\xd2\x27\x5e\xfd\x25\xcd\x1f\xef\xf3\x0a\x5a\xf6\xf1\x6a\xc6\x74\xef\x94\x08\x33\xed\x9e\x1f\xc2\xcc\xb0\x8d\x45\xb6\xa7\x44\x1f\x99\x38\x4c\xf9\xb7\xa7\x44\x98\xab\xde\x3d\x25\x2a\x26\x6f\x74\x2a\x52\x8c\xfe\x17\x9d\x8a\xd4\xd2\xd4\xdb\xd9\xba\xb7\xda\x7d\x32\x52\x81\xa5\xae\xb4\xa9\x31\x57\xca\x9f\x1a\xf3\x5f\xd5\x98\x8f\xf6\xc8\x9e\x54\x63\xae\x55\xbe\xd4\x98\x6b\x2d\x9f\x2c\xf0\x05\x94\xbf\xab\x1f\xde\x75\xce\x7e\xc9\x00\xbd\xf9\x4f\x0d\xe8\x89\x1a\x90\x2c\x3d\x91\xdb\xae\xca\x4b\x37\xa5\x7b\x41\x57\x25\x21\xd4\x7b\x5d\x95\x04\x29\x3d\xd7\x55\x29\x74\xe9\x7f\x93\xd5\xe3\x13\x54\xba\x78\xf6\xb5\x63\x4e\x56\xdf\x35\xa6\xf6\x7d\x54\xab\xd7\xab\x8f\x2b\x50\x23\x57\xbb\xd3\xe3\x48\x10\x47\x6d\xc9\x38\xdc\x54\x1f\xf6\xf2\x77\xc9\x50\xfe\x83\x27\x6d\xbf\x79\xfa\xe2\xa4\x53\xf0\xf0\x95\x1b\x78\xed\x63\xb7\x5f\xd0\x36\x7b\x54\x69\xfc\x9f\x8b\x55\xb6\xc6\xdf\x75\x76\x9b\xf2\xac\x06\x8e\xbd\xc7\xeb\xf3\x98\xd7\x1c\x7b\xda\x00\x32\x59\xfa\x72\x79\x95\xbb\x89\xb7\xd9\x94\x3c\x5b\x4e\x90\xbe\xd8\x12\x32\x42\xbc\x8c\xa7\xb5\xff\xd7\x7a\x6e\xcf\x77\xd6\xbb\xb5\x3e\x53\x87\xfc\x4b\x75\x88\xc6\x7f\x07\xf9\xaa\x43\xa4\xe5\x39\x1d\xda\xeb\xc9\xa2\x45\x34\xe3\xe3\x5b\x0d\x5b\x74\x88\x4a\xd7\x5b\xd9\xdc\x75\x99\x75\x9c\x20\x21\x51\x2c\xa6\xb3\x03\xeb\xa7\xae\x95\x7d\x9f\xf1\xb2\xa6\x59\xbb\xa1\x82\x1b\x2d\x75\x8f\xf0\xac\xf6\x6a\x8f\xef\xae\xe6\x92\xf0\xac\xe7\x6c\xea\x30\x5f\xf7\x0d\x89\x81\x47\x9d\xfa\x5e\x2f\xdf\x3b\xc4\x6c\xb4\xd9\x71\xae\xa3\x16\x4f\x1c\xed\x6d\xe2\xde\x9f\x7a\x95\xde\x80\x87\xf3\x79\xed\xfd\xde\x0f\x0b\x41\x17\xfd\x10\x94\x21\x0f\x82\x6e\xc9\x26\x65\xf0\x7e\x72\x5e\x90\xa7\xae\x81\xa0\xac\xa7\x54\x24\x58\x1f\xd9\x12\xba\xdb\xd1\xee\xb6\x15\xb9\xa1\x1d\x5d\xab\x8d\x55\x0d\xc7\x7c\xd8\x31\xbb\xf9\x24\x36\xc3\xd4\xce\xfe\x9b\xbf\x68\x39\x5a\xd7\x70\x84\x79\x87\xad\x1d\xf7\x6e\x3e\xfd\x9e\x36\x55\x72\x24\xc9\x38\x6c\x64\x1a\x4f\x86\xe3\xa4\x3f\x5d\xfe\xcf\x86\xd1\xd7\x0a\x57\x80\xe7\xf7\x63\xad\x83\xa9\x0e\x0f\x40\x97\xea\x5e\xff\x9b\xb6\x7f\xeb\x5a\x4f\x43\x12\x2f\xf3\x14\x67\x72\xa2\x7f\x02\xc4\x2e\x3e\xe4\xa3\x8f\x9e\x18\xd4\x08\x3c\x82\xa3\x20\xa3\x65\x3f\xb6\xd8\x24\x71\x41\x56\x0e\x2e\x78\x01\xb2\x04\x51\x15\x5a\x0d\x86\x05\x12\x7a\x92\xec\xbd\xab\x86\x90\xac\x70\x69\x00\x14\xfe\x27\x00\x00\xff\xff\xb9\x47\x5b\x7d\xe0\x49\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

