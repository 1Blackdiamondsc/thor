// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdd\x6a\xfb\x30\x0c\xc5\xdf\x45\xd7\x7e\x82\xdc\xf5\x01\xfe\xf0\x67\xb7\x25\x0c\xa7\x51\x33\x41\x2a\x19\x4b\x6e\x97\x95\xbe\xfb\x68\xb0\x9b\x6e\xfd\x58\x18\xfb\x80\xdd\x05\x7c\x64\xfd\x74\x74\xe2\xe5\x1e\x56\xc2\x6a\x9e\x0d\x2a\x8b\x09\x1d\x10\x87\x64\x0a\xd5\xb2\x76\xc0\x7e\x83\x50\x41\x87\xf6\x3f\x4a\x10\xc5\xa8\xe0\x40\x92\x65\xc9\xbe\x28\xc0\x81\x0d\xe1\xf8\xe5\xdb\x36\xa2\xea\xb2\x86\x43\xed\x20\xf8\xc1\x37\x3d\x42\xb5\xf6\xbd\xa2\x03\x35\x6f\xf8\x2f\x99\x6f\xa8\x27\x1b\xa0\x82\x2d\xe1\x6e\xaa\x5e\x27\x5e\x19\x09\xc3\xc1\x9d\x93\xe5\xea\x13\xda\xa9\xef\x63\xc8\x5c\x17\x00\xe3\x0d\x45\xd5\x4c\xc7\x8d\x48\x3f\xa2\xe5\x33\x9f\xec\x49\x22\x29\xbe\x19\x6c\x16\x3a\x0b\x17\xd1\x47\x03\xdc\xb4\x56\x76\x3c\xc2\xcf\xf1\xf4\x67\x1c\x2d\x44\x77\xec\x0c\x67\x61\xb8\xba\xf6\x2c\x24\x26\x23\xdf\xd3\xcb\x2f\x99\xdb\xa1\x2d\x1a\x45\x36\xc4\x3f\x17\xdb\x71\xae\x6f\xb5\xf5\x36\x7d\x8b\xba\x9a\xca\xd5\x22\x71\x77\x0e\x17\xb1\x23\xb5\x77\xb9\xfe\x1a\x3c\xcf\xc2\xc3\x46\x92\x5e\xe3\x23\x6e\xf1\x19\xdb\x92\x88\x82\x7b\xb4\xf6\xfa\xcf\x94\x15\x0f\x99\x17\xdb\x49\x86\xdb\xa3\xbf\x9f\x6d\x79\x7f\xbf\xa7\xa2\x7c\xdf\x8c\x7d\x2f\xca\x33\x75\x89\x58\xbf\x06\x00\x00\xff\xff\x79\x46\xaa\x27\xc5\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x09\x7a\xeb\xbc\x0a\xdd\x12\x20\x81\xd0\x72\x34\x58\xfb\x5f\xc2\xfb\x10\x72\xec\xb8\xe9\x6d\xd2\xd7\xe9\x4f\xbe\xde\x9b\x10\x59\x3a\xc0\x61\xb2\x05\xec\x1d\x81\x49\x00\x62\x10\x04\x41\x00\x0d\x9c\x04\x00\x02\xa7\x06\x08\x9f\x7c\x65\x80\x28\x61\xac\x17\x8a\x82\x04\x18\x52\x64\xf4\x82\x71\x9e\xa3\x9c\x4c\x6a\x12\xc8\x39\xb8\x74\x90\x4b\xb5\x17\x6e\x95\xeb\x94\x62\x10\x97\xe6\x28\x3d\x13\x44\x97\x6a\x75\x69\x23\xa9\x09\x81\xa7\x94\x20\xba\xb4\x53\x88\x51\xe2\x70\xa9\x6c\x2e\x1d\xd4\x28\x6b\xdd\x5c\x5a\x89\x13\x57\xd3\x56\x61\x74\xae\x21\x22\x1b\x8a\xbc\x6c\xe0\xd2\x29\xb1\x7f\x03\x0c\x16\x5b\x1f\x81\x51\x41\x41\x80\x00\x50\x49\x11\x82\x12\x93\x06\x45\x45\xb6\x3f\xf2\xdf\x32\x32\x28\x30\xe6\xb5\x76\xfd\x4f\x0a\x1a\x34\xd8\x19\x5c\xed\x2a\x04\x3f\xb9\x4f\x9c\x4a\x30\x77\xd1\x08\x6b\x27\x45\xbb\x96\xa7\x87\x5a\x30\x14\x0c\xfe\x36\x29\x60\x26\xff\xb6\x63\xcb\x08\x21\xc3\x08\x87\x4e\xa3\x5f\x74\xc2\x10\xcd\xef\xa6\x47\xe0\x74\xf3\xd5\x47\x2f\x94\x43\x97\x8c\x79\x5e\x8d\x8c\x7c\x2f\x65\xc7\x1a\xca\xc4\x6a\x5a\x2e\x1c\x18\xf1\x8a\x23\x66\xa3\x5e\x4a\x77\xb6\xa5\x57\x10\xbd\xb2\xf6\xde\x37\xff\xb0\x18\x66\xb9\x20\x25\xa0\xaf\xb2\xd8\x21\x31\x5f\x5f\x24\x3b\xb3\x16\x4e\x47\x98\x27\x07\x3c\x5e\x15\x72\xc8\x34\xf7\x3a\x71\xcd\x19\xb5\xd8\x45\x1a\x43\xb2\xbd\x5d\xcb\x1b\x5b\x0e\xdf\x48\x6e\x17\xdf\x10\x8c\xab\xc6\x98\x04\x41\x31\x7f\x33\xef\x89\xcb\x87\xbc\xa7\x30\x3e\xc1\x7b\x4a\xf9\xaa\x53\x85\x6f\xe7\xbd\x96\x7e\xb5\x6d\xbd\xc6\x5f\x80\x7e\xe0\xf8\x98\x0f\x38\xcc\xfb\x04\x53\xc7\xf8\x19\x6e\x3c\xc5\x8a\x0c\x69\x47\x6e\x18\xa7\xff\x5b\xab\xee\x7f\xf3\x1f\xc7\x27\xd8\xf9\xf6\xfc\x75\xe5\xb4\x45\xc8\xd3\x27\x93\x0f\x13\x8b\xe9\x0a\xe0\x6b\xed\x13\x99\x77\xab\xa2\xcc\x4a\xc2\x31\x1b\x32\xab\x45\xc5\xea\xca\x0f\x64\x06\x43\x81\xcb\xf6\x01\xd1\x30\xc7\x61\xb5\xe2\x64\x33\xff\x93\xbd\x7e\xfc\x2c\xd6\x10\x5e\x59\x6d\x49\x77\x5a\x3e\x02\xdc\xb1\x10\x60\xc6\xa2\xfe\x88\x4d\x8f\xcf\xee\x63\xb3\x15\x83\xe2\x44\xc6\xa0\x0b\x19\x1e\x68\x39\x5d\xd0\xde\xf8\x67\xde\xb1\xfc\x63\xab\xa4\x4e\x06\x21\xb4\x3e\x33\x44\xc6\xb7\x6c\xf2\x33\x95\x3d\x4a\x33\xee\x3e\x52\xe4\xa8\xf8\xbc\x46\x40\x98\x2d\x13\xe8\x4b\xf6\xb7\x3c\x9a\x81\xd9\x33\x95\x6b\x91\xfd\xb3\xdb\xff\xa5\x3c\xf4\x55\xf6\x57\x74\x4c\x56\x0b\xe8\x60\x32\x22\x2e\xfb\x33\xbe\xb1\xbf\xf8\xd5\x37\x0d\x20\xb8\x05\x2d\x8f\xfb\x35\xb4\x71\x1a\x1b\xd7\x47\x31\x0d\x5f\x10\xd1\x3b\x0a\x0d\x6f\xcf\x96\xf6\xd1\xd9\xbf\xe5\xf7\x9b\xdd\xac\xba\xdd\x6c\x37\xab\xa4\x71\x91\x5b\x5f\x1c\xee\x50\xbd\xca\x4d\xb4\x7f\x86\x1f\xb8\x79\xd5\x16\x84\x82\x7b\xff\x59\x5f\xec\xd2\x46\x02\x2e\x19\x0a\x4b\xb7\x1e\x76\x4b\x3c\x3a\xe0\x66\x85\x3b\x67\xd2\x21\x29\x6e\x5b\x1f\x41\xa5\x87\xb1\x8d\xd8\xb9\xa3\x8a\x6c\x9a\x5b\x19\x89\x12\x1a\x86\xbd\x3f\x44\xf6\xf7\xbf\xfb\xb9\xb2\xfa\x83\x23\x4f\xff\x7f\xec\x53\xdc\x77\x32\xab\x14\xb1\xac\x93\x66\xad\xff\x81\xec\x2d\xfd\xae\x3f\x53\x5a\x95\xe7\xf7\x38\x3d\xab\xa0\x55\x6a\xeb\xda\x56\x2f\xa7\x18\x27\xca\x47\xb9\x3a\x45\x7c\x3a\x57\x47\x8d\xc7\xbe\x73\xe7\xc4\xa7\xf8\x3e\x77\x95\xb6\xe0\x8f\x66\xf6\x07\x5a\xd4\xf1\xbe\x16\xbf\x19\xe7\xde\x67\xce\xbe\x07\x57\x37\x98\x28\x9e\x7a\x6e\x99\x3d\xa1\x12\xde\xf5\x84\xf1\x4b\x7a\x42\x2d\xe1\x3f\xd7\x13\x2a\xe7\x77\x7b\x42\x04\xad\xfc\xa3\xd9\x41\xb7\xed\x32\x61\xe8\x50\x25\xa5\x23\x67\xaf\x95\x19\xee\xee\x6f\xdc\xe5\x47\xe4\xa3\xfe\xe7\x37\xf5\x7f\xaf\x63\xf0\x1a\xc6\x2f\x63\x2a\x70\x9c\xb5\xdf\xbe\x9b\x0b\x78\x71\x80\x20\x78\x67\x60\x5c\x30\x2f\xdc\xac\x92\xef\xe7\x3f\xfd\x65\x0d\xf2\x75\x2a\x46\xc8\xad\x79\x6c\x58\xf5\x0f\xc9\xe3\xed\x45\x74\x83\x7a\x48\x21\x16\xdd\x62\x2a\x4d\x03\xca\xc6\x00\xa5\x51\xc0\x96\xa1\xc8\x86\x1a\xb5\x15\x22\xe5\x11\xa1\x43\xda\x4a\x61\x02\xe0\x2d\xd6\x50\x60\xcb\x1e\xb1\x0f\x6a\xe7\xdd\x7c\x73\xcb\x6a\x2f\xd9\xe3\xeb\xe6\x05\xf4\x59\xba\xc8\xe2\xa5\xe5\xa9\x19\x63\xb2\x70\xf2\xef\x75\x4b\x6b\x9a\xa1\x89\xb0\x4a\x39\x4f\x33\x53\xc2\x53\x12\x1f\x54\xc5\xd2\xda\xd3\x55\x51\xfe\x44\x9d\x8b\xa7\x3a\xc7\xbf\xc7\x88\xbd\x72\xcd\x6c\xd7\x12\xde\xcf\x30\x53\xe6\xf3\x6e\x5c\x51\x1f\xdf\x9d\x5b\xaa\x96\x6f\x9f\x5b\xe2\x3b\x73\x4b\x6d\xfa\xc7\xe7\x96\xf8\xce\xdc\xd2\x28\xbf\x33\xb7\xfc\x09\x56\x4c\x36\x78\x37\x53\x79\x76\x20\xe7\x5a\x97\x86\x24\x19\x12\x3f\xfb\x8c\x03\x20\xf5\xcf\x3f\x21\x59\xcf\x48\x68\xd7\xe8\x7c\x3f\x89\xe0\x51\x07\xb5\xea\x33\xed\xeb\x9c\x0b\x1a\x98\xcd\x3b\x56\xb8\xa7\x1f\x84\x93\xe2\xba\xc7\x7a\x66\x12\x7a\x5f\x05\xbe\x8a\x77\xbf\x55\xaf\x38\xa7\x1e\xef\xf1\xbe\x81\x9e\xd9\x37\xe0\x3f\xf6\xa5\x67\xeb\xf7\xdb\x28\x38\xee\x7f\xe6\xc9\x46\xc0\x6c\x9d\x0d\xe0\x98\x4f\xad\x7a\x9a\x4f\x93\xac\x82\x8d\x61\x8c\xd7\xa0\x76\x42\x52\x66\x3b\xa3\x17\xd9\x11\x4c\x96\x58\xee\x65\xe6\x95\xad\xed\xd7\xe4\x7a\xcc\x35\x7b\xf6\xe8\x85\x39\x29\x31\x2a\x31\x67\xdc\xa7\xcc\xa3\x13\xb4\x35\x5a\x76\x3d\xd7\x7d\xea\x5e\xc3\xc5\x06\x47\x4f\xd8\xfb\x8c\x17\xeb\x43\x94\xf6\x53\x3a\xef\xb5\x62\x65\x99\x15\x77\x6e\xd1\xda\xcf\x7b\xe4\x19\x58\x05\x85\x85\x52\x49\x25\x51\x00\x56\x82\x4e\xa5\x0d\x53\xbf\x60\x87\x21\x7d\xe3\x28\x29\x8f\xa8\xbd\x8a\xa4\x81\xbd\x0d\x26\x48\x9b\xd2\xc0\x4d\xa8\xb2\xb6\x96\x81\x69\x2b\xad\x50\x2c\x9b\x99\xfe\x7f\x01\x00\x00\xff\xff\x07\xc8\xde\x76\x10\x1c\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4f\x6b\xe3\x3e\x10\xfd\x2e\x3a\xfb\xd4\x1f\xbf\x65\xc9\xad\x5b\xc8\x9e\x76\x0b\x9b\xdc\x4a\x28\x63\x7b\xd2\x8a\x95\x47\x42\x1a\x39\x35\xa5\xdf\x7d\xf1\x9f\xc4\x2e\xb1\x6c\x27\x31\x6d\x7a\x4a\xc0\x6f\x24\xbd\x99\xf7\x9e\xf4\xf0\x2a\x12\x4d\x8e\x81\x58\x2c\xd8\x7a\x8c\x84\x24\xe3\xd9\x89\xc5\xc3\x26\x12\x04\x19\x8a\x45\xfd\x13\x09\xed\xb9\xf9\xf4\xba\xff\x22\x22\xc1\x85\x29\xff\x39\xb6\x92\x9e\xc4\xdb\x26\x12\x06\x0a\x88\x15\x8a\xc5\x16\x94\xc3\x48\x38\x06\xc6\x5f\x9e\x21\x96\x4a\x72\x21\x16\xc2\x78\x8b\x6d\xe9\xd6\x53\xc2\x52\x93\x78\x8b\xba\xc7\x69\xaa\x0f\xe7\x39\x6c\xfa\x68\x31\x91\x98\xa3\x6d\x97\x80\x34\xb5\xe8\x5c\xb5\xc2\x1e\x05\x99\xf6\xc4\x2d\xc6\x4b\xe2\x9b\xff\xbf\x55\x47\x6c\x30\x60\x8c\xd5\x79\x80\x9b\xf3\x49\x52\xae\x79\x58\x20\xd6\x5a\x4d\x24\x48\x9a\xf6\xa0\x31\x9a\xc1\xae\xb3\x66\x50\x2b\x6f\x8c\x2a\xc6\x9a\xdf\xa5\x36\x7e\xb8\x5c\xe2\xee\x82\xee\x27\x9a\xd8\x42\xc2\xb7\x69\x3a\x32\x01\xc2\xdd\xfd\x8e\x7a\xe7\xd4\xd2\x74\xc8\xbf\x1b\xdc\x52\xdb\xbb\x66\xf1\x77\x8c\xe7\x6e\x79\x98\xdb\xd6\xea\x6c\x98\x13\xeb\x8b\x55\xc7\x16\xc8\x6d\xd1\x2e\xeb\xcd\xae\x50\x7a\x29\x26\x32\x03\xe5\xa6\xe8\xee\xfb\xc7\x78\x7e\xba\xea\xf4\x14\xc9\x7d\x19\xbd\x4d\xcb\xba\x72\x2f\x9f\x99\x6a\xef\x21\xe9\xd5\xb8\x40\xe0\x35\x1f\xd3\x1f\xa0\x80\x12\xec\x59\x28\x3a\xc2\xde\x59\x4c\x25\xbb\x73\xa3\xe8\x7c\xb1\xce\xd4\xc3\xb6\x35\x4f\xc8\xb7\x39\x48\x55\x1e\xa6\x65\x75\x3d\xb1\x3b\x4d\x08\x4a\x66\xb2\x2f\x7d\xba\x5a\xa9\xc8\xfd\xb4\x7a\xc7\xcf\x7f\x80\x87\xe7\xfc\x88\x2f\x46\xda\x3e\x4c\xc7\x4e\xcf\x60\x71\xad\x3f\xc9\x42\xd3\x83\x61\xb6\x67\x43\x95\x30\xb7\xd7\xf7\x76\x38\x25\x03\xe3\xda\xe4\xf7\xdb\x7e\x02\x71\x30\x03\xe6\xd3\x7a\xf0\xfa\x71\x45\x16\x6b\xf5\xf1\x2f\xce\x50\x3b\x3b\x63\x2c\x18\xdd\x7f\x37\x47\xea\x4f\x07\x13\x63\xdc\x94\x70\x9c\x3c\x61\x70\xd0\x92\x9d\x78\x3e\xc5\xe3\x89\xb7\x16\x89\xd7\x32\xc3\x15\x43\x66\x3e\x29\xe0\x66\x7c\x59\x7d\x2d\x53\x76\x38\x3a\x83\x94\x8e\x38\x17\x94\xd2\xbb\xc6\x9c\x3d\x2c\x2d\x66\x20\xa9\x74\xc6\xfc\x63\x3c\x14\xd7\x1c\x7b\x6c\x76\xd4\x23\x50\x2a\x86\xe4\x6f\x55\x0e\xa4\xa9\xc8\xb4\x77\x7d\x32\x90\x94\xe2\x0b\xa6\xfb\xb5\xc7\x6f\xf7\x40\x41\x48\x46\x07\x78\xb3\xf5\x1e\x9f\x83\xf2\xc3\xf7\xdb\xba\x55\x55\x03\xc2\x1c\x89\xcf\xa6\x34\xa0\x83\x40\x45\x58\x16\x17\x11\xab\xaf\x30\x50\x33\x11\x3b\x75\x54\xa7\x4e\x6a\x20\x46\x03\x25\xd3\x62\x30\x50\x3c\xe1\xe5\xb3\x2a\xb3\x7f\xf9\x8e\x76\xd3\xc1\xcd\xbf\x00\x00\x00\xff\xff\x53\xe2\xb8\x66\x5a\x11\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x0b\x96\xa3\x2a\xd3\x5b\xaa\x37\xc5\x72\x40\x60\xff\x4b\xf8\x0f\xa0\x89\xda\x49\x77\x3b\x33\xfd\x3b\xe7\xbb\x93\x9c\xce\xf5\x96\x58\x16\xf5\x7e\x30\x06\xfd\x2b\xa0\x64\x00\xc2\x86\x60\x08\x50\x4d\x83\x01\x00\x6b\x58\x00\xe1\x17\x3f\x11\x40\x8c\xdb\xfa\x41\x73\x30\x06\x6b\xa5\x54\x60\x94\xf1\x9e\xac\x61\x40\xa3\xd6\x14\xf2\x84\x62\x88\x13\x8a\x8e\x06\xa5\x94\x09\x2d\x3c\xa1\xc4\x18\x49\x17\x9c\xd0\xb6\x6c\xd0\xec\x81\xd6\xb5\xa4\x32\xa1\x8c\xbc\x54\xb5\x30\xa1\x4b\x59\xa1\xd6\x40\x3c\xcc\xb7\xd1\x86\x41\x96\x14\x35\x26\x18\x50\xde\x30\xa8\x49\x04\xe5\x36\xa1\x05\x26\xd4\x2c\x59\x89\xc5\x06\x54\x78\xc5\x60\x45\x0c\x74\x99\x6b\xfb\x63\x03\x1a\x20\x81\x13\x4f\x7a\x15\xd6\xbd\x45\x2d\x1e\xb3\xac\x50\xb5\x15\x1a\x1b\x80\xc8\xc4\xa0\x75\xa5\x21\x45\xd0\xb8\xe4\x3c\xa0\xc6\x2b\xcf\x4a\x31\xaa\x85\xeb\x84\x46\xd5\xa0\xb9\xcb\xcc\xa1\x15\xcd\x2c\xa8\x9d\xc3\x6d\x95\xe4\x84\x0e\x48\x35\x84\x00\xa8\xd6\xd7\x0b\x28\x3a\x38\x18\x10\x00\x3a\x39\x02\x3b\x29\x39\x3b\x3a\x6a\xff\xa3\x79\x2f\xa2\x82\x83\x62\x5c\xd7\x46\x70\x70\x76\xee\xd8\x35\xf7\xf5\x08\xe3\x9d\xc8\xb5\x53\xe8\x04\xe3\x79\x17\x58\x71\x38\xf6\xa7\xb4\x6b\x18\x12\xf7\xf7\x2b\xcc\x6f\x1c\x7f\xf3\xbe\x01\x0e\x5d\x99\xb8\x2c\xaf\xb8\xb8\xbf\xdb\x3a\x8d\x3c\xde\xdf\x55\xb5\x6b\x66\x02\xc6\x88\x76\xa4\xb3\x63\x8e\x34\x71\x6f\x7b\x8c\x08\x1c\xa1\xf1\x83\x37\xe8\x72\xe2\x0d\xe6\xd8\xad\xa0\xf3\x83\x35\x3c\x34\xf7\xab\x0f\xda\x93\x27\x71\xf0\x85\xf5\x08\xd1\xb9\xeb\x20\x72\xe0\x3a\xa1\xce\xef\x89\xfa\x4f\x68\x2e\xf5\x4c\x73\x35\x43\x70\xb6\x23\xe6\x6f\x63\x24\x08\x27\x8c\x34\x7d\xc1\x9f\xe0\xc2\xaf\x3f\xbd\x72\xcc\xb9\xf6\x7d\x75\x0d\xdb\xe8\xd5\x76\xa6\x37\xf3\xfd\xf4\xbe\x95\x79\x0c\xe5\x37\x65\x4e\xc5\xcf\x3b\xae\x1d\x73\x59\xe0\x88\xd9\xa0\xd3\x35\x7f\xbf\x8d\x9d\x3f\xc8\x9f\xff\x22\xf9\x97\x25\x9e\xe4\xcf\x1f\xe4\xcf\x7f\xb5\xfc\x6b\xe3\x83\x94\xf8\x29\x99\x83\x95\x7e\xe5\xad\xb8\xe4\xd3\xbe\x85\xec\xfe\x7d\xcf\x5d\x22\x6a\xf8\x45\xff\x23\x72\xd6\x3f\xf1\xfa\x33\x5e\xf8\x3b\x90\x75\x3f\x94\xcf\x7e\x47\xe2\x07\xfe\xd7\x76\x3f\xff\xdf\xee\x40\xa2\xfd\xa6\xdf\x51\x3c\xc7\x47\x15\xf8\x13\x3b\x5e\x29\x34\x69\xbf\xa8\x33\x6a\x78\xa6\xcc\xa2\x21\x86\xdc\x7e\x2c\xab\xd1\x14\xbf\xcc\x6a\xd4\xeb\xb7\xb2\x1a\x2d\xf6\x63\x59\x8d\xd6\xb3\x7f\x34\xd8\x65\x35\xfd\x4e\xc7\xfc\x52\x22\x0e\x74\xe0\xdf\xee\xfd\xbe\xd3\x1b\x97\xdd\xf5\x3b\x7f\xa6\x1b\x17\x3e\xa5\xd6\xe4\x9c\x9f\x5a\xc8\x3f\x99\x83\x75\x82\x7f\xd3\x2e\x2c\xc1\x99\xe6\xfa\xc7\x68\xfe\x6d\xab\x4a\x92\xae\x5a\xd5\xa8\x07\xba\xfd\x54\x78\xf0\x66\xda\x44\xd7\xdd\x59\x1d\x76\x5b\x82\xf4\xc4\x15\x9a\x9a\xa8\x0a\x81\xa8\xf5\x72\x91\x2c\x84\x78\xa5\x3a\xec\xb8\x36\x1b\x99\x6f\xed\xb0\x6e\x0b\xa3\xf2\xe4\x2b\x9c\xb8\xb2\x76\xc7\x0f\x78\x5e\xf7\x77\x12\x0c\x1a\x2e\xc9\xe0\x4f\xbd\xd9\xbb\x04\x55\xc1\xe9\x0a\xc6\x8b\x5c\x6a\xbe\x68\xae\x58\xb5\xe6\xba\x84\xa2\xb9\xa0\xb4\x80\x42\xa1\x60\x75\x69\x5c\x4a\xaf\xcc\x17\x68\x21\x13\x45\xac\x9a\x09\x20\x2d\xbe\x84\x85\x73\x24\x75\xf9\xae\x5e\xa5\xee\x41\x87\x56\x46\x9a\xf7\x1f\x32\xde\xcb\x1c\xc1\x25\x38\x75\xbd\x2d\xa3\x22\xed\x96\xd8\xa1\x4a\x27\x1b\x73\xcd\x8e\xc7\x75\x73\xa5\x1d\xf2\x07\xbe\xc4\x3f\x03\xa0\xf1\xac\xdc\xa5\x6d\x11\x54\x22\x6c\x5e\x3f\x02\xfc\x18\x25\x38\xbd\x57\x5c\xbb\x2b\xb7\xef\x7c\xdb\xb3\xa3\x8a\xe3\xf7\x31\x03\xcd\xf8\xe5\x97\x74\x1f\x08\xc3\xb4\xb0\x35\x3e\x3f\xb4\x71\xa5\x25\x7a\x76\xdb\xeb\x97\x21\x24\x4a\x43\xb7\x26\xa7\xc2\xff\xbe\x8e\x5c\xb3\x9e\xae\x51\x2b\x9f\xe2\xde\x06\x87\xbd\x26\xee\x81\xf6\xa3\xbd\x26\x3e\xe7\x27\x49\x7c\x70\x3e\xc3\xa8\x94\xbb\xb7\xe8\x50\x9d\xcf\x6f\x50\xd0\x9e\x97\x51\xcf\xc6\xd6\x2c\x2a\x05\xd3\xd0\xb3\xb7\x71\x2d\xae\xce\x86\x58\x9c\x67\x3c\xdc\x77\x1e\x07\x05\xa8\x79\x7b\xb2\xd5\xf1\x24\x6f\xd1\xc6\xfd\xb6\x68\x73\x8b\x56\xa9\x74\x3e\xae\x5a\x5e\x72\xf7\xb5\x08\x59\x43\xf7\xef\x5d\x32\x1e\xef\xe2\x07\xa0\x4a\x97\x62\xc2\xd7\x52\x5c\xe9\xbb\x4d\x5e\x80\x5b\xa4\xee\x1c\x6b\xf0\xe0\xd8\x8d\x14\x4d\x8e\xbd\xd3\xfb\x95\xbe\xdb\xbc\xd7\x81\x63\xcb\x22\x83\x63\xd3\xea\x6e\xd3\xb2\x7b\xa4\xf5\xa5\x66\xff\x27\x7d\xd1\x23\xf3\xbd\x14\xd5\xfc\xd2\xfb\x43\x2b\xa5\x91\x52\x2a\x98\x2b\x2d\x1e\xb3\xc5\x85\x32\x98\xb7\x85\x83\x97\x94\xa2\x52\x4e\xa1\x87\xc0\x45\x12\xa2\x91\x37\xd5\x24\xa5\x29\x71\xe6\xda\xdc\x2e\x66\xbe\x34\xfb\x97\x39\x6c\x36\x38\x2a\xf7\x91\x7b\x44\xde\xaa\xf8\xed\x9e\x01\xd2\x21\x2b\x2e\x85\x5e\x64\xc5\xa5\x94\x53\xec\x2c\xd5\x5e\x66\xc5\x7d\xb7\xfb\x95\xe3\x1d\x77\x67\x7c\xff\xef\xb9\x6e\xad\xed\x5f\xae\x7b\xce\x75\xf7\xbf\x86\xd0\x20\x78\xfa\xa0\x69\x0d\xcf\xf5\x57\xc3\xec\xf1\x85\xa6\x35\x0a\x67\x4d\x73\x47\xdc\xee\xf2\xa1\xbf\xe3\xd1\xe3\xb3\x13\xfe\x53\xd2\xb0\xcf\x66\xd6\xab\xf5\xa2\x00\x5e\xab\xb5\x7f\x82\x82\xd7\xdd\x3c\x82\x28\xc3\x7b\xb4\x62\x9e\x86\x74\xd6\xfe\x7a\xe4\xbe\x16\x46\x77\xb2\x7b\xa4\xd9\xcb\xdb\xfe\xfb\x85\x16\x4a\xcf\x14\x84\x3a\x32\x43\x04\x22\x0d\x42\x0f\x6c\xe1\x3a\xb6\xcd\x73\x6b\xf6\xe0\x23\xa3\x9c\x98\xad\x67\xf8\x88\xc0\xd5\x7d\xe4\xf0\x9f\xc5\xbc\x5f\x7b\x3b\xee\xb2\x8a\xa1\x71\x3e\x7c\x71\xb4\xf9\xd7\x39\xb6\xf6\xc1\x10\x21\xf8\xd0\xdc\xad\x92\x20\xed\xef\x43\x04\xaf\x2e\xa3\xf2\x78\x5f\x33\x6c\x7b\x42\x5e\xa6\x1e\xff\x11\x8a\x11\x61\xa1\x03\x4d\x38\xa1\x25\xb8\x0c\xf8\x5b\x8e\xcd\x4e\x33\x42\x5d\x1c\x67\xbd\xf3\x45\xa6\x9c\xef\xcf\xfb\x1c\x5c\x5e\x48\x66\xd2\xb7\x76\xe0\x47\xf4\x5b\xd7\x3c\x3b\xe8\x3d\x56\x8e\x78\x89\x6f\xfd\x98\xed\x22\xf3\x3f\x8f\xf2\xde\xa3\xec\x3d\x87\x5e\xd1\xdd\x91\xc9\xf4\xa7\x78\x6a\xb1\x0a\xe2\xac\xa3\x91\x7a\xdd\xaf\x20\x34\xee\xd1\xbc\x37\xab\x4a\xa4\xd4\xba\x7f\x19\xd2\xa5\xcd\xfb\xf8\xe6\x7d\x28\xf1\xf0\x11\xe4\x63\xda\x66\x65\x54\x05\xbc\xd6\x32\xa4\x23\xdf\x5a\x9f\xb1\x4f\xb5\x1c\xb1\xe4\xf4\xfa\xde\xac\xcd\xbe\xaa\x8f\x46\x67\x81\xb6\x95\x73\xde\x33\x69\x8c\xbd\x22\x7e\xdc\x99\x3e\x19\x29\x8f\x33\x1c\x0e\xa7\xff\xa7\x8d\x3b\x47\xf8\xc8\x7b\x64\xaf\xd3\x1f\xfb\xa1\x7d\xf5\x92\x98\xcf\x51\x18\xa9\xe8\x31\x0a\x23\x95\x7a\xec\x52\x6d\x2b\x6b\xfa\x10\x85\x75\xee\x64\xde\x6f\x87\xfb\x5d\x62\x5b\x8c\x46\x86\xc3\xf9\x02\x1e\xd6\x76\xad\x0b\x7e\x51\xef\x5b\xa4\x5a\x98\xc7\x39\x86\xb6\x34\x5c\x5a\x35\x65\x06\xae\x54\x53\x36\xef\x79\xdb\x82\x8d\x42\x44\x6c\x29\x96\x28\x8d\x5c\xc0\x5b\x8d\xa2\xd4\x82\x7b\xe8\xdf\x87\xdd\x7f\x67\x1e\xc5\xaf\x67\x51\x89\x1d\xff\x79\x90\x6f\x79\x90\x01\x4b\x2b\xfc\x38\x1b\x3a\x4c\x0a\xed\xcd\xa4\x70\x37\x61\x13\x9a\xd3\x9f\x87\x47\xe2\x8b\xd1\xf4\x31\x87\x5d\xad\x53\xc7\x24\xf6\x09\xc3\x09\x93\x3d\x8c\x26\xcc\xf6\x30\x9e\x30\xdf\xc3\xba\xd7\xd1\x08\x7a\xfe\x6e\xb5\x5a\x0f\x60\xe8\xf2\xc1\x5a\x25\x2d\x27\x6b\x95\x3c\x7b\x92\x67\x6b\x95\x05\x4f\xd6\x4a\xf7\x4d\x9e\xfe\xf6\x0e\xf3\x38\x29\xc0\x1a\x9e\xb3\xc1\x8b\xb5\xff\x7f\x74\x36\x78\xb1\xda\xbd\x65\x36\x38\x64\xeb\x8f\x38\xd9\xad\x2c\x7f\xec\x8e\x7c\xac\x5b\xb7\x5f\x4f\x77\x76\x5d\x47\x3e\x7b\x2f\x1d\x33\xe3\xd0\xdb\xe9\xa0\x47\xe6\x13\x51\xa9\x00\x2d\xa1\xa2\xa4\x66\x3e\xc2\xcb\xcc\x3e\x29\x8d\x5c\x72\x7a\x5a\x58\x6b\x9e\x60\x3c\x7c\x69\x50\xdd\xaa\xb1\x5a\xde\xe7\x7a\xef\xee\xad\xda\x14\x52\xed\xbf\xb1\x8d\xdf\x01\x71\xf4\x28\xf4\x59\x0e\xe9\xfe\x69\x16\xc9\x9f\xde\xf5\x4f\x73\x4b\x53\x70\x8b\xe1\x1c\x4b\xd6\xf3\x1a\x73\x4f\x61\x09\xdf\x38\x7b\x21\x87\xb3\x17\x22\x2e\x4d\xe9\x6d\x3c\xff\xe2\xf3\xe2\xec\xc5\x38\x7f\xb4\xbe\x6b\xfc\x6b\x80\x71\xd6\x6b\x8b\x0f\x38\x57\xfb\x53\xf7\xe7\x35\xee\xae\x69\x77\xcd\xbb\x6b\x99\xd7\x3d\xa7\x3c\x4f\x5d\x7b\x18\x7d\x35\x25\xc4\xf3\xfc\x7f\x74\xef\x1e\x19\xab\x9f\xcf\x7f\xa1\xdb\xcc\x9f\x8f\xf5\xb4\x07\xfd\x7c\x86\x88\x1e\x7d\x9b\x21\xa2\x47\xfb\xce\x0c\x71\x3c\x97\xb8\x8c\xfa\xc5\x1b\x6e\x13\xa0\xfb\x4e\xac\x7c\x6f\x66\x76\x27\x7d\xbb\xce\x47\xf4\xf4\x6f\x66\x76\xa1\x77\x72\x29\x8a\x5f\x3d\x0f\x74\xcf\x54\x04\x93\xd0\x8b\xa9\xc8\xa9\x2e\x7e\x64\x7b\xb7\x75\xed\x7f\xae\x1a\xfc\x7c\x4a\xf8\xfa\xd4\xd4\x75\x8a\xd6\xec\x39\xb5\xb5\x2e\x59\xbd\x62\x86\x30\x3b\x16\x3c\xa3\xe6\x88\x07\xf8\x3c\x61\xfa\x8c\x4d\xfb\x4c\xeb\x2e\x29\xcc\x8e\xd3\x7a\xd2\x04\x17\x99\xbd\xe5\x6c\x73\x3e\xf6\x38\x43\x7c\x2b\x8d\x7b\x7b\xbd\x30\xdd\x41\x63\xbc\x99\x72\x7a\x52\x2e\x74\xbf\xa4\x77\x71\xa2\x70\x3a\xe9\xe0\x3f\xe9\x5e\xa5\xfc\x2f\x95\xee\xc3\x5e\x6f\xcd\x98\x22\x7c\xf4\x75\x4e\x2e\xb3\x32\xdd\x4e\xfe\xaf\x7e\xa7\xc4\xa0\xa1\xd5\xd1\xf7\xc5\x97\x5d\x5c\x9a\xbd\xed\x6d\x7d\x6a\xeb\x7a\x74\xee\xf1\xef\x95\x47\x1f\x6f\xa3\x87\x0f\x16\x94\x91\x87\x96\x92\x47\x4e\x4a\x2e\x3d\xaa\x6e\x18\x8b\x4f\x8c\x20\x28\x8f\x9e\x53\xa9\xfc\x05\x5d\x13\xcf\x03\x4b\xcb\x1b\x96\x99\xcf\xbf\x7a\x8a\x5e\xf6\xf8\x6c\x5f\x37\x18\x40\xea\xa9\x12\x85\x14\x52\x20\x06\xf5\xae\x6c\xd9\x12\x46\x29\x31\x95\x52\xb4\x62\x2d\xd6\xf5\x2e\xa4\xb8\x24\x48\xa2\x18\xba\x64\x38\x84\xd6\x98\x82\x5b\xe5\x94\x83\x03\x35\x4d\xa1\x96\x00\x40\xf1\xff\x02\x00\x00\xff\xff\x7a\x5e\x90\x08\x90\x3c\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

