// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/AuthorityNative.abi
// compiled/AuthorityNative.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/EnergyNative.abi
// compiled/EnergyNative.bin-runtime
// compiled/Executor.abi
// compiled/Executor.bin-runtime
// compiled/Extension.abi
// compiled/Extension.bin-runtime
// compiled/ExtensionNative.abi
// compiled/ExtensionNative.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// compiled/ParamsNative.abi
// compiled/ParamsNative.bin-runtime
// compiled/Prototype.abi
// compiled/Prototype.bin-runtime
// compiled/PrototypeNative.abi
// compiled/PrototypeNative.bin-runtime
// compiled/Token.abi
// compiled/Token.bin-runtime
// compiled/thor.abi
// compiled/thor.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x41\x6f\x83\x30\x0c\x85\xff\x8b\xcf\x39\x6d\x37\x6e\xfb\x01\xbb\xec\x5a\x21\x14\x88\xa9\x22\x81\x8d\x62\x87\x81\xaa\xfe\xf7\xa9\x15\x10\x3a\xb1\x76\x9d\xd6\x49\xbb\xb6\xf6\x7b\xdf\x7b\x49\xd8\x1d\xa0\x62\x12\xb5\xa4\x90\xd5\xb6\x11\x34\xe0\xa9\x8b\x2a\x90\xed\x0e\x40\xb6\x45\xc8\xa0\x10\xbf\x27\x0c\x60\x40\xc7\xee\xf4\x83\x75\x2e\xa0\x08\x1c\x73\x33\xcf\x04\x6c\xb9\x47\x30\xc0\x51\xa7\xfd\xdc\x40\x67\x47\x5b\x36\xb8\x68\x8b\x5a\xc5\xd7\xa8\xb6\xf4\x8d\xd7\x11\x32\x20\xa6\x79\x68\x91\xaf\x23\x55\xea\x99\xe0\x68\xd6\x7c\x1a\xe2\x1a\x2f\x79\xd7\x3e\x88\x5e\x58\x2f\xe8\xdb\xcc\xb7\xb1\x7a\x8f\xef\xf7\x02\xdd\xd5\x17\xe1\xf0\xdf\x90\xf7\xf8\x05\x71\xe3\x45\xd1\xa5\xdd\x92\xb9\x39\xfb\x4e\xff\x23\x39\x0e\xc2\x5b\xea\x69\xc8\x3b\x24\x3d\x25\x49\x32\xa3\xa2\x3c\x3f\xad\x87\x6c\xa5\xbe\xc7\xcf\x4e\x0f\xab\x27\x65\xc7\x01\xab\xa8\xe7\x08\x7f\x7d\x64\x3f\x78\x96\xa9\xb0\xe2\x5b\xdd\x17\x57\xca\x4f\x1d\x58\xe7\x1e\xf0\xbe\x2d\x31\x8d\x2d\x47\xd9\x4a\xea\xc9\xe1\x80\x6e\x3e\x98\x09\xe4\x5a\xee\x65\x63\x12\xbb\x7d\xbb\x52\xc0\x17\xb7\xba\xc4\xd8\x23\xe9\xaf\x13\x26\xb3\xb7\xf9\x83\x79\xe9\x97\x7f\x04\x00\x00\xff\xff\xc0\x4e\x73\x3a\x93\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x69\x96\xe3\x38\x08\xc7\xaf\xf4\x07\x04\x82\xe3\x68\xbd\xff\x11\xe6\x49\x76\x3a\x8b\xd3\xe9\x9e\xbc\xa9\x49\x7d\x71\x61\x8b\xe5\xc7\x26\x83\xc3\x90\xa0\x6c\x40\x12\x23\x18\x01\x3a\x34\x9b\xcc\xf3\x67\x18\x30\x80\x51\x0c\x80\x28\x12\x99\x09\x07\x82\x3b\x86\x13\xa5\x75\xc6\x44\xb3\xc3\x44\xfa\x4c\xbd\xcf\x74\x48\xdd\x0e\x69\xa9\x59\x86\x90\x1d\xd2\x9a\x0f\x69\xe3\xda\x78\xcc\x76\x48\xbb\x9f\x52\x49\x0d\x3e\x74\x4b\x89\xeb\x21\xed\x0d\x88\x54\xfd\x90\x26\x68\xd6\xba\xfc\x71\xcc\xae\x55\x92\x83\x74\xfb\x31\x35\xdf\xe5\xba\xe3\xf1\x64\x00\x19\xca\x19\x07\x64\x47\xab\x64\x4b\x97\x15\x35\xad\xc0\xa3\x96\xe0\xab\x96\xa8\x46\xe0\xa9\xeb\xeb\xc5\xcc\xa1\xf4\xaa\x77\x41\x21\x73\x56\x56\x0a\x38\x05\x96\x2d\x06\x28\x30\xe5\xd1\x42\x93\xb7\x16\x7e\xef\xa7\x98\x2d\xcb\x77\x0d\x23\x5d\x35\xcc\xf8\xa4\x61\xb6\x47\xdf\x23\x91\x92\xba\xee\xdc\xbf\x46\x21\x64\xcb\x6f\x57\x90\xb2\x8b\x0b\x28\x28\x10\xa4\xbc\x4e\x19\x0c\x4b\xf6\x1c\xa7\x5f\xe3\x24\xc9\xbf\x21\x99\x4a\x3c\xc5\x43\xa9\xfd\x7d\xe6\x9c\xc8\x02\x06\x3e\x62\x43\x4a\xb2\x74\xa4\xb1\x75\x2e\x6d\x99\xef\x36\x5e\x75\x90\x89\x5c\x65\x94\x7c\xd9\x64\xaa\x9a\x15\x37\x4a\x79\x82\xfb\x72\xa3\xe2\xcb\x9f\xd3\x95\xb0\x6f\xbe\x48\xce\x8b\x61\x40\x49\x10\x64\x72\xb3\x15\xb4\x62\xf3\xcd\x38\x78\x65\x22\x78\xf1\x77\x5e\xa4\x41\x4e\x9b\x54\x76\x48\x25\xbd\x11\x1c\xfd\x99\xa0\x96\x49\xbf\xde\x2e\x4b\x59\xfa\xf1\x5e\xc6\xf1\x74\x7e\xb7\xff\xf6\x1c\xa0\x25\x67\x38\xd1\x79\x8a\x5e\xf2\xa7\x44\xaa\x75\xd7\x00\x81\xd9\x1e\xdf\xde\x99\x71\x0d\xaf\x30\xfd\x3f\x98\xdd\x6c\x7d\xc5\x8c\xfd\x35\xbe\x27\x66\x51\xbf\x61\x56\xe9\xca\xec\x7c\x33\x5e\x79\x5d\x67\x88\xf3\xaa\xed\x3c\xeb\xc8\x2d\x97\x26\x9c\xbc\xcf\xa4\x4e\x8d\x61\xc5\x53\x29\x55\x5a\x4d\x23\x77\x5d\xb5\x2a\xe1\x35\x71\x35\x5f\x99\x9a\xd9\x8b\x96\xdc\x13\xd1\x58\xfd\x01\x04\x0a\x2b\xce\x2e\x80\xe0\x5a\xf7\x26\x93\x90\x31\xda\x38\xfc\x71\xba\xcf\xfe\x45\xfc\x36\xfd\xc1\x67\x56\xd2\xd2\xc0\x67\xec\x9b\xb7\xbc\x65\x2b\xa2\x1f\xd8\x4a\x8a\x2f\xd8\x8a\xce\x57\xb6\x01\x45\xe0\x71\xb2\xe5\x59\xba\x94\x6e\xa3\xff\x6c\xfd\x6d\xbe\x67\x15\xde\x2c\xfe\xaa\x42\x7e\xa8\x42\x3c\xd7\xa1\xe7\x57\x52\xad\x7c\x22\xd5\xc7\x37\xa4\x66\xba\x90\xe2\xa0\x7d\xc2\x6e\xbb\xf3\xd4\xf9\xb6\x2a\xc6\x58\x83\xd5\xe1\x76\x66\x9a\xff\x5c\x17\x2b\xee\x37\xba\x2e\x92\xe3\xc4\xde\x8b\x74\x44\xe0\x7f\xae\xa7\xa4\x9f\xe6\x5b\xca\x7f\x3d\xdf\xfc\x4e\x29\xbd\xf6\xff\xb1\xd5\x79\xe7\x6f\x3d\xa5\x63\xcf\xd1\xda\x78\x6b\x2f\xae\xe7\xa0\xf0\x40\x64\x5d\x79\x55\x45\xc8\x7a\x7a\x24\xfb\x9e\x28\xcf\x66\x48\x93\x7e\xb6\xcf\x56\x54\x93\x3e\x6f\xbf\x7d\x8b\x52\x3c\x9f\x7b\x53\xef\x87\x8d\x58\x7b\x51\x59\x8f\xbd\x78\x9d\x56\x6b\xba\x69\x3d\xbd\x51\x59\x77\x33\xac\xff\x1e\x36\x85\x4a\x7d\xbf\x29\xc0\xd5\xac\xad\x5d\xff\x1f\x76\xea\xbe\x1f\xec\x5e\xdd\x77\x14\x4f\xfb\x36\x73\x76\xee\xba\x2d\x38\x81\x5c\x02\xcf\xbb\xf7\xf0\x64\x75\xb0\xfd\xdb\x3d\xa2\xa5\x7e\xa8\x4d\xad\xf3\x8b\x0e\xd6\xfe\x3a\x3f\x6f\x7b\x44\x07\xbf\xa3\xe9\xbb\x72\xe2\xdd\x4e\x51\xb2\xa0\x3c\x63\xce\x5c\x94\x92\xa4\x68\xbd\xa5\x3a\xad\x44\xd2\x9a\x7b\x4f\x1e\xa2\xe4\xb5\x91\x33\x1a\xf7\xd2\x8c\xa3\x4e\xb3\x2e\xa6\x5e\xbb\xa0\xa0\xe5\xb8\xdc\x6a\xf7\x76\xd9\x95\x0f\x14\x32\x35\xce\x25\x97\xcc\x02\x75\x46\xe8\xe0\x52\xac\x76\xf4\x92\x8b\x51\xf0\xaa\x2b\x6e\x08\xef\x68\x66\x22\xa3\xe5\x44\x99\x50\xba\x79\xcb\x90\xd1\x65\xa4\xe6\xe1\x65\xce\x96\x00\x8e\x7f\x02\x00\x00\xff\xff\xd1\x6a\x31\x9a\xa4\x0c\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x51\x6b\x83\x50\x0c\x85\xff\x4b\x9e\xef\xd3\xf6\xe6\x7b\x1f\xf7\x0b\x4a\x19\xa9\x37\x4a\xc0\x26\x72\x93\xeb\x2a\xa5\xff\x7d\xd4\x51\x5b\x66\x51\xca\x64\x6c\x8f\x92\x13\xfc\xce\xc9\xd1\xed\x09\x4a\x15\x73\x14\x87\xa2\xc2\xc6\x28\x00\x4b\x9b\xdd\xa0\xd8\x9e\x40\xf0\x40\x50\x80\x71\x2d\x94\x20\x80\xf7\xed\xe5\x19\x63\x4c\x64\x06\xe7\x30\x4a\x48\xa2\x26\xd3\x79\x11\x47\x12\x67\xef\x6f\xa2\x7d\xef\x64\xaf\x2f\x70\xde\x85\xab\x48\xd0\xb9\xa3\x77\x8c\x11\x02\x68\xf6\xef\x30\x77\xcb\xaa\xcd\xb0\xd9\x62\x8f\xfb\x86\x46\x07\xe6\xe8\xf4\x96\x1d\xf7\xdc\x5c\x5e\x57\x80\xa8\x5c\x45\xe3\x7a\x95\xa5\x74\x56\x19\x08\x6f\x29\x78\xca\xcf\x85\x30\x41\x67\xdb\x0c\x69\xd0\x9a\x0e\x3a\xa6\x8f\x45\xf6\xe7\x2f\x38\x81\x4f\x74\xd0\x8e\xfe\x44\xf4\x13\xb6\x9a\x7c\x73\xa4\x32\xfb\xd0\xb3\x59\xc0\x7b\x83\x2b\x85\xfb\xf3\x62\x08\x1d\xfd\x5f\x82\xd7\xb4\xc8\xfd\xd5\x88\x30\xe7\xe8\xd1\x70\xfc\x01\x3c\x1c\xae\xfc\x79\x2c\xf5\xab\xe2\x64\xbf\x74\xa0\xdd\x67\x00\x00\x00\xff\xff\x6b\x47\xa3\x3a\x7a\x05\x00\x00")

func compiledAuthoritynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeAbi,
		"compiled/AuthorityNative.abi",
	)
}

func compiledAuthoritynativeAbi() (*asset, error) {
	bytes, err := compiledAuthoritynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledAuthoritynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeBinRuntime,
		"compiled/AuthorityNative.bin-runtime",
	)
}

func compiledAuthoritynativeBinRuntime() (*asset, error) {
	bytes, err := compiledAuthoritynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xcb\xaa\xd4\x40\x10\xfd\x97\x5a\xf7\x4a\x50\x24\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\x49\x2a\xd2\xd0\xa9\x6a\xba\xab\x33\x86\xcb\xfd\x77\x99\x4c\x5e\x68\x5e\x8e\x23\x77\x56\x33\x50\xaf\x73\x4e\x9d\x54\x3f\x3d\x43\x21\x1c\x15\x59\x21\xd3\x90\xc8\x80\x65\x9f\x34\x42\xf6\x74\x32\xc0\x58\x13\x64\xd7\x1f\x03\x92\xb4\x0f\x3d\x0f\x11\x30\xa0\xad\xbf\xfc\x8b\x1a\x2c\xff\x80\x97\x93\x01\x8f\x2d\xe6\x8e\x20\xab\xd0\x45\x32\x10\x15\x95\x3e\x27\xc5\xdc\x3a\xab\x2d\x64\xe0\x53\xa0\xa9\xb4\x4a\x5c\xa8\x15\x86\x17\x33\x87\xd3\x57\x8f\x78\xc6\xa1\xdf\xa3\x27\x2e\x29\x4c\x1d\xb0\x2c\x03\xc5\xd8\x35\x18\x92\x1a\x74\x69\x36\x24\x59\xd6\x37\x6f\xdf\x75\x00\xfb\x14\xf4\x3e\x48\xb3\xc2\x2c\xa6\xa2\xb8\xb4\x1c\x1b\xe4\x22\xee\x20\x3d\x16\x1e\x92\xf6\x48\xae\x6a\xae\xa2\xe8\xbe\x26\xef\x5d\xbb\x27\xfd\x9c\xda\x3e\xb8\xc6\xd2\xf9\x1f\xb4\xaf\x82\xd4\xdb\xc2\xab\x6c\xc7\xb1\x96\xc4\xba\xb9\x19\x0d\xc8\xb1\xa2\xf0\xe9\x3a\xec\x01\xd7\x53\x52\x61\x6b\x74\xf1\xc8\x6e\xde\xdf\xf3\xab\xf8\x0d\xd1\x24\xab\x9c\x79\xf1\x93\x98\x30\xe7\xe8\x90\x0b\xfa\x52\x2d\x83\xee\xc3\xff\xd5\x57\xab\x7a\xc6\xb6\xce\xc5\x3d\xd2\x91\xb9\xa3\x8d\x1f\xd3\xc2\xdd\x85\xf9\x98\x02\x53\xf9\x0a\x17\xe6\xaf\x7d\x6c\x8e\xdc\xff\xd9\x71\x77\x4e\xce\xbd\x9f\x17\xb8\x05\xaa\xd1\xf2\xc5\x4c\xf7\x27\x89\x2c\xdc\xd6\x92\xe2\x92\xbd\x2c\x97\xf4\x93\xca\x41\x80\xfd\xb3\xba\x52\xb0\x66\xcf\x31\xbd\x1f\x7d\xfc\x39\xfc\x36\xb9\xb5\x4f\xa2\x86\x58\x6f\xa6\xb4\xb1\xc8\x95\x8a\xcd\x77\xfd\x76\x62\x1f\xba\x77\x1e\xdd\x1f\xc4\x4e\xbf\x02\x00\x00\xff\xff\x89\x62\x8f\x19\xff\x08\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x09\x6e\xeb\x38\x0c\xbd\x12\x77\x91\xc7\xd1\x7a\xff\x23\x0c\x28\x39\xbf\x89\xbb\x4c\xa6\xf8\xd3\xa0\x80\x41\xcb\x5c\x1e\xdf\x23\x65\xe0\x60\x20\xa0\x64\x00\xc2\x86\x60\x08\xe0\x55\x8b\xf1\xba\xfe\x0c\x26\x18\x00\x41\x35\x00\x60\x05\x41\x33\x06\x5b\x63\x4c\x60\x47\x94\xfd\xcd\xd2\xe2\x60\x0c\xa1\xb3\x96\xc6\xdb\x8a\x18\xc7\x8a\x8e\x06\x63\x8c\x63\x55\x3c\x56\xe2\xe6\x85\x1e\xd6\xe2\xc7\xca\xc8\x7d\xaa\x95\x63\xad\x74\xac\x05\x2a\x38\xf1\x89\x86\x7d\x1c\x6b\xe8\xf0\x68\x72\x59\xe7\x3c\xd6\x1a\xa0\xd1\x5b\xdb\x56\x02\x3e\xd6\xe1\x81\xac\xfd\x44\x23\x2a\x97\x75\x18\xcd\xc1\xf3\x58\xb9\x6b\xd1\x96\x75\x3a\xac\xa1\x8d\xc5\x01\x35\xeb\x8b\xa6\xe5\xc3\xae\x1b\xa7\xba\xbf\x31\x56\xcb\x6f\x04\x1c\x14\x0d\x08\x1c\x9c\x94\x9c\x15\x1d\x9d\x01\xcf\x73\x60\x90\x73\x50\x40\xda\x02\x5d\x01\x23\xcf\xb2\x73\x7a\xd6\xe6\x89\xe6\x15\x6f\x64\x2d\xe8\x1b\x2d\x67\xa7\xf4\x92\xbe\x01\xf3\x6d\xb7\x8c\xa9\x70\x7e\xb1\xff\xf3\x6c\x80\x01\x2e\xb4\x2b\x6b\x84\x96\x55\x3a\x01\x9f\xdc\x00\x33\x16\x01\xf0\x7e\x0b\x50\x81\x31\xd0\xfc\x8f\xf7\x40\x85\xf4\x1c\x74\x7c\x6f\x76\xa0\x43\x20\x70\xc0\xe2\x27\x4c\x90\xf4\x13\x26\xc8\x23\xa3\x18\xd4\x8b\x33\xc0\x9b\x59\x8a\x66\x40\xc2\xf9\x1d\x45\x7d\x46\x2c\x30\x09\x91\x88\x69\xe2\x81\x91\xd9\x9d\x5c\x6e\xf1\x74\x7c\x8e\x67\x96\x1e\xd7\x7c\xf5\xf8\x8e\x37\x97\xf7\xb3\x77\x44\x4b\x6c\xe9\xaa\x44\x4e\x25\x6c\x2b\xe3\x7e\xf8\xac\xf3\xb3\xcf\x56\xf2\xe4\x84\x57\x96\xac\x15\x10\x84\xf6\x4e\xa6\x23\xbe\xac\xfb\x3b\x9c\x33\x9a\xbe\xe6\xb5\xea\x37\xec\x95\xd2\x5e\x4e\x12\xac\x5f\xf5\x54\x1a\xbd\xfa\x61\xfe\xa6\x57\xd2\xfd\xf5\xa4\xf8\xfb\xd5\xdd\xfa\x80\xa0\xe0\xcf\xb8\x6e\xae\x63\x40\x6c\x3e\xc3\xe6\x75\x59\x6a\xa6\x2a\xe6\xb6\x0a\xc1\x2f\xfe\xb6\xa6\xb7\x02\x63\x77\x91\xb7\x5e\x53\x9d\x47\x35\x8f\x27\xd9\x6a\x26\xb8\xe7\xee\x25\x15\xe9\xaa\x5b\xfb\x4a\x8e\x2e\x04\x6e\x01\xaa\x9e\xfa\xde\x79\x06\x2a\x06\x87\x04\x04\x27\x37\xca\xf2\xae\x6d\xe2\xd4\xd9\x66\x2f\x43\xdb\x40\x59\x05\x85\xca\xc0\xe9\xb2\x78\x0c\x60\x94\x0e\xab\x34\xa2\xc0\xa9\x8d\x00\x6a\xf7\x5e\x3a\xb7\x20\x0d\x72\x4a\x56\x25\x22\x95\x75\xe7\x15\xb4\x15\x7e\xb1\x31\x5f\xde\xb3\xdd\xd3\xbd\x04\x2e\x97\x71\xa9\x1f\x3f\xb6\x41\xf6\xfc\xb1\x0f\x80\x4e\xdd\x20\xb0\xe7\xde\x63\x56\x38\xe7\x5e\xd8\x18\x15\x07\x6e\xa8\x57\xaf\x99\x6f\xfa\xd0\xba\xf0\xe3\xad\x92\x96\xcd\x35\x70\xe0\x79\x9e\xae\x73\x4f\xb3\x28\xed\x89\xf9\x35\x29\xd9\x6e\xfc\x49\x35\xed\x99\x78\x2a\x7c\xed\x04\x78\x6e\x2f\x80\x3d\x2f\xbf\xee\x5e\xb0\x1b\x5a\xf6\x29\x67\xf5\xee\x19\x12\xa8\x38\x21\x9e\x88\x15\x9f\x23\x7e\x11\x43\xdf\x88\x51\x9e\x63\xe4\xce\x50\x71\xce\x6e\x25\x2b\x32\xca\x30\x97\xfc\x25\xcb\x19\xcf\xbc\xdf\x1d\xe4\xc7\x6c\x3e\x15\x22\xc5\xcb\x6c\x29\xab\xd7\x3e\xaa\x07\xfe\x86\xeb\xb0\x99\xbd\xbb\xfa\x5a\x15\xef\x9a\xe4\x8f\x0e\x76\x7f\x03\x19\x02\x8d\x1f\x11\x23\x79\x20\x97\x0a\x77\xe5\x59\x5f\xe4\x7c\xbb\x98\xe8\xe8\xe5\xc6\x0a\x91\xf8\x81\x15\x92\x53\xff\x3f\xb3\x42\x0a\x7f\x62\xc5\x0b\xf3\xbf\x9c\x17\xf2\x98\x17\x2a\xe2\xb2\x7e\x8b\xdf\x7d\x5e\x64\x1e\x7b\x46\x2e\xe6\x2f\x3b\xfa\x96\x26\x91\x6a\x21\xc6\xff\x59\x93\xf7\xc8\xb9\x4b\xff\x9d\xcd\x01\x21\x67\x97\xc5\x85\x66\x2a\xe6\xa3\x7a\xc7\x4b\x3b\xa6\xbb\xd7\x0f\xa6\xca\x72\x61\x9d\xf5\xaf\x32\x55\x9f\x99\xba\xf9\x98\xdb\x9e\x8f\x96\xf5\x62\xec\x23\x72\x32\x56\xc4\xcf\x9d\xec\xc1\xd8\x17\xbe\x7e\x81\x99\xe6\xad\xf4\x5b\xc6\x6a\xb3\x5f\x30\x56\x7b\xbf\x33\x36\xef\x45\xf9\xe6\x75\xff\x7f\xa0\x57\xc7\xf4\x51\xe8\xef\xa2\x27\xef\xa0\xf7\x88\x7c\x47\x0f\x3e\xa1\xe7\x7c\xc3\xce\x04\x7e\xc0\xce\x54\x7e\xc6\x4e\xdb\xee\xc8\x4d\x1d\xfb\x06\x7d\xb3\x95\x35\xc6\x22\xa5\x3a\xb0\x4d\xea\x1e\xcd\xa2\x53\x03\xf3\xd5\xb9\xf8\xa8\x35\x94\x5a\x2d\x2b\xe7\x97\x54\x44\x23\x5f\xaa\x55\xc6\x52\xe2\xc6\x73\xa5\xd7\x4b\x3d\x74\xbb\x21\xdf\xee\xc5\xb9\x5d\x8f\x82\x01\x2a\x9a\x1a\x95\x5a\x52\xae\xa0\x4e\x30\x7a\x8f\xde\x9c\x09\x27\x4e\xef\x6a\x65\x2e\x6c\x4a\xbd\xc0\xd0\x12\x95\x4b\xf3\x15\x1d\x9a\x8e\xd1\x8a\x19\x2f\x31\x2e\x3d\x0c\x2b\x71\x5b\x15\x80\xe2\x9f\x00\x00\x00\xff\xff\x3a\x6f\xc1\xe7\xaa\x0d\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x41\x4b\x03\x31\x10\x85\xff\xcb\x3b\xe7\x24\xe8\x21\xc7\xde\x3d\xe9\xad\x2c\x32\xbb\x99\x4a\x20\x9d\x09\x9b\x99\xca\x52\xfa\xdf\xa5\xd2\x6d\x51\x16\x5a\xa4\xa0\xb7\x04\xde\x23\xdf\x47\xde\x7a\x8f\x41\xa5\x19\x89\x21\xda\xe8\x1c\x90\xa5\xba\x35\xc4\x75\x17\x20\xb4\x65\x44\x08\x59\xde\xf1\xdb\x3b\xdb\xab\x1a\x95\x17\xaf\xb5\x4c\x08\x50\xb7\x53\x76\x3f\x47\x11\x60\x53\x3d\x9e\x3c\x8b\x3d\x3c\x3e\xe1\xd0\x05\x54\x9a\xa8\x2f\x8c\xb8\xa1\xd2\x38\xa0\x19\x19\x3f\xbb\x51\x9f\x4b\xb6\x09\x11\xbb\xcc\x1f\x97\xee\xc6\x65\xb0\xac\x82\x43\xf8\x0d\xe0\xca\x47\xe1\xf4\x07\x80\xa7\xf6\x99\xf0\xfc\x2a\xa5\x34\x5e\xda\xc7\x1b\xb7\xf6\x55\x9e\x03\x5b\x75\xb1\x65\xb8\xef\x92\xcd\xfb\x15\x15\x92\x81\xaf\x09\xf6\xaa\xe5\x46\x3b\x51\x99\x43\xff\xc1\x91\x52\x5a\x72\xbc\xb7\xca\x8f\x3d\x5d\x33\x59\xda\xdb\x8d\x5f\x71\x9f\xad\x75\x9f\x01\x00\x00\xff\xff\xb9\x70\x8c\x04\xaf\x03\x00\x00")

func compiledEnergynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeAbi,
		"compiled/EnergyNative.abi",
	)
}

func compiledEnergynativeAbi() (*asset, error) {
	bytes, err := compiledEnergynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledEnergynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeBinRuntime,
		"compiled/EnergyNative.bin-runtime",
	)
}

func compiledEnergynativeBinRuntime() (*asset, error) {
	bytes, err := compiledEnergynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledExecutorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorAbi,
		"compiled/Executor.abi",
	)
}

func compiledExecutorAbi() (*asset, error) {
	bytes, err := compiledExecutorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x09\x01\x03\x31\x08\x00\x41\x4b\x1b\xfe\xc8\xa1\x1c\xf1\x2f\xa1\x13\x14\x81\xe1\x12\x40\xf1\x3e\xe8\x13\x1e\x92\x9d\x9d\xa2\x78\x09\x3d\x2a\xb0\x35\x72\xd3\x56\x8f\x7c\xfa\xf3\xee\x3a\xee\xcb\x4c\xdc\x9f\xe4\x5a\x73\x5c\x53\x87\xb1\x30\xed\x57\x9b\xde\x0f\xbb\x0d\x72\xff\x01\x00\x00\xff\xff\xb6\x43\xa6\xbf\x6a\x00\x00\x00")

func compiledExecutorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBinRuntime,
		"compiled/Executor.bin-runtime",
	)
}

func compiledExecutorBinRuntime() (*asset, error) {
	bytes, err := compiledExecutorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xce\xb1\x8a\xc3\x30\x0c\xc6\xf1\x77\xf9\x66\x4f\x39\xee\x06\xcf\xb7\xdc\x70\x4f\x10\x42\x91\x83\x02\x26\x8e\x1c\x6a\x29\xc5\x84\xbc\x7b\x69\x69\x1b\xc8\xd4\xa9\xa3\x40\x3f\xe9\xdf\xae\xe8\xb3\x14\x25\x51\x78\x3d\x1b\x3b\x44\x99\x4d\x0b\x7c\xbb\x42\x68\x62\x78\x9c\x16\x4a\xc6\x70\xd0\x3a\xdf\xe6\x50\x95\x0b\xb6\xce\x3d\x17\x42\xa2\x91\x9b\xd0\x7c\xff\xc0\x21\x9b\x1e\x0f\x1c\xe8\x57\x73\xc7\x33\x55\x0a\x89\xe1\x07\x4a\x85\x1d\x8a\x92\xf2\xbf\x29\x85\x98\xa2\x56\x78\x2c\x91\x2f\xbb\x1d\x4c\x7a\x8d\x59\xb0\xb9\x77\xaa\xc5\xa6\xdd\x5a\x14\x7d\xbc\x7d\x35\xe7\x7e\xfc\xfb\xfd\x4c\x70\x77\x0d\x00\x00\xff\xff\xc1\x77\x26\x14\x68\x01\x00\x00")

func compiledExtensionAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionAbi,
		"compiled/Extension.abi",
	)
}

func compiledExtensionAbi() (*asset, error) {
	bytes, err := compiledExtensionAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x5b\xd2\xf2\x3a\x0c\xdb\x92\x7c\xb7\x97\x93\xb4\x64\xff\x4b\x38\xe3\xb4\x85\xc3\xf7\xf0\x3f\x50\xa6\x33\x24\x36\x92\x2c\x19\x47\xc2\xa1\x30\x76\x40\xc5\x09\x4e\x80\x4e\x0b\x97\x75\x3f\x71\x80\xf0\xe3\xe3\x00\xc4\xa0\xe4\x2e\x12\xac\x96\xa4\x49\xa4\xcd\x62\xb0\x48\xb8\x38\x9f\xd3\x10\xf3\xba\x9d\xd3\xc2\x66\xff\x2e\xb1\x4e\x9b\xa2\x09\xb2\xdd\x7f\x58\x7c\xee\x6d\xeb\x4e\x18\x39\xb8\x79\x34\x21\x96\x48\x06\x89\x39\x68\x25\x81\x52\xab\x2b\x0a\x4e\xeb\x13\xa8\x50\x66\x9c\x9a\x6a\xdc\xa8\xa3\x4a\xc5\x4b\x8b\x4b\x1c\xac\x25\xc5\xbb\x8f\x0a\xd9\xaf\x82\x52\x92\x1b\x39\x55\xc2\x50\x5a\x61\xdb\xa7\xb3\xca\x0d\x5f\x1f\x6f\xed\x97\xae\xa2\x64\x63\xbb\x71\xd0\xe8\x68\xfe\x25\xff\x9f\xea\x88\x3f\x53\x6d\x4d\x1f\xf7\x77\x2e\x46\xee\x04\x3a\xe2\xc1\x37\x8a\x35\xe2\x85\x31\x38\x7f\xcd\x26\xa9\x53\xbf\xbd\x63\x50\x52\xdf\xa4\x6c\x47\xdb\xb3\xf7\x09\x28\x11\x94\xb8\x3c\x9c\x25\x19\x25\x85\xe2\x94\x62\x87\x6a\xa1\xe8\x76\xcd\x7a\xca\x44\x4a\x4a\x4e\x9b\x29\x49\x74\x4d\x4b\x5a\x16\xcd\x03\xb2\xed\x2a\x6e\x0d\xa0\xae\x0a\xf5\x7c\x8f\x97\xb5\xdf\xee\x2d\x74\x9e\xe4\xb7\x67\x14\xde\x9b\x93\x0c\xb9\xf2\xef\x84\x36\x4a\x2f\x70\xef\xea\x80\x50\x91\xe7\x1b\xbd\xc8\xd0\xc8\xc5\x17\xf6\x35\x77\xfb\xd8\x3a\x21\xb9\xa7\xcc\x48\xc8\x24\x7b\x78\xca\xbe\xb3\xb1\xb1\xe8\x53\x1d\x65\x21\xe7\x55\x97\xd7\xf5\xed\xee\xbb\x39\x1a\xbf\xef\x19\x1f\x07\xe6\xfa\x83\x49\xc5\x5b\xdd\xd7\xee\xc4\x72\xcb\x9c\xbc\x65\xfd\x9e\xee\x7b\x8b\x52\xc8\x9f\x9c\x8d\x0b\x77\xaa\x24\x28\x72\x79\xb8\xea\x4a\x7e\xff\x87\x6a\x3b\x57\xdc\xb9\x16\x92\x7b\x83\xf7\x8e\xc4\xbf\x5c\x02\x06\xb9\x39\xc7\x88\x11\x2c\xb0\x64\x0c\xd0\x21\x4e\xc7\x3c\x9d\x59\x74\x58\x1e\x07\x8e\xd3\xec\xd0\x2c\xc6\x59\x87\xe4\x1a\xaf\x9c\x14\x7e\x8a\xd1\x6b\x20\x49\x03\xb2\x6c\xad\x55\x09\x70\xfd\x17\x00\x00\xff\xff\x68\x14\x63\x86\xa8\x04\x00\x00")

func compiledExtensionBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBinRuntime,
		"compiled/Extension.bin-runtime",
	)
}

func compiledExtensionBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8f\xb1\x0a\xc2\x40\x0c\x40\xff\x25\xf3\x4d\x15\x1d\x6e\x2c\x2e\x0e\xfa\x03\xa5\x94\x5c\x49\xe5\xe8\x35\x57\xbc\xa4\x72\x94\xfe\xbb\x28\x62\xa1\x38\x38\x39\x86\xf0\x5e\x5e\xaa\x19\xda\xc8\x49\x90\x05\xac\xdc\x94\x0c\x78\x1e\x55\x12\xd8\x6a\x06\xc6\x81\xc0\x02\xeb\x00\x06\x24\x8f\xcf\x41\x3d\xcb\xae\x80\xa5\x36\x9f\x35\x8a\x9f\xa8\xb9\x92\x94\x21\xb6\xfd\xe9\x58\xe6\xcb\x8b\x88\x2a\x5b\xd5\xea\x71\x59\x28\xbd\x45\x23\x66\x74\x81\xc0\x76\x18\x12\x19\x48\x82\x42\x67\x15\x74\x3e\x78\xc9\x60\x61\xf2\x74\x5f\xd9\x4e\xb9\x15\x1f\x19\x16\xf3\x4b\x7f\x33\x61\x50\xda\x9c\xfe\xf2\x81\x0b\xd8\x53\xe1\x8a\xfd\xe1\x3f\xf1\xf5\x23\x00\x00\xff\xff\x6c\x3b\x71\x7a\x7e\x01\x00\x00")

func compiledExtensionnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeAbi,
		"compiled/ExtensionNative.abi",
	)
}

func compiledExtensionnativeAbi() (*asset, error) {
	bytes, err := compiledExtensionnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBinRuntime,
		"compiled/ExtensionNative.bin-runtime",
	)
}

func compiledExtensionnativeBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6a\xc3\x30\x0c\x86\xdf\xe5\x3f\xfb\xd4\xb1\x1d\xf2\x0e\x3b\xed\x58\xc2\x50\x12\x75\x98\xa5\x72\x88\xa4\xac\xa6\xe4\xdd\xc7\x4a\x12\xc3\xe8\x08\x65\x47\xe3\xcf\xbf\x3e\xa3\xff\x78\x45\x9b\x44\x8d\xc4\x50\x9d\xa8\x57\x0e\x88\x32\xb8\x29\xaa\xe3\x15\x42\x67\x46\x85\xf7\x4f\xce\x08\xb0\x3c\xfc\x9c\x9a\x6c\xac\x4f\x07\xcc\xa1\x00\x13\xf5\xce\x05\xf1\x28\x76\x78\x7e\xc1\x5c\x87\x15\x51\x36\x04\x24\xb7\x25\xbc\x0e\x18\x28\x53\xd3\xf3\x36\x58\x8d\x8c\x5f\xdd\xa8\x89\x7d\xb4\x8c\x0a\x92\x64\x85\xb6\xec\x93\x4b\x6b\x31\xc9\x6d\x7e\x91\xb7\xd1\x1f\x71\x2f\x62\x1f\xbf\xc4\xb6\x97\xf7\xbf\xb3\x2f\x3d\x45\xfe\x7a\x54\xb7\xe8\xf0\x85\x5b\xb7\x34\xee\x39\x51\xd7\x8d\xac\xfa\x7f\x27\x92\x24\xf9\x9c\x5c\xef\x15\x20\x4a\xc7\x17\xee\x56\xdf\xc5\xe2\xcf\x3a\x6c\xf8\x92\xb4\xf0\xfb\xed\x78\xbb\x2d\x61\xb9\xe7\x89\xc5\x30\xd7\xdf\x01\x00\x00\xff\xff\xfb\x8f\x43\xc8\x9d\x02\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x6b\xb6\xeb\x20\x08\x85\xa7\xb4\x01\x79\x0d\x47\x8d\xce\x7f\x08\x77\x99\xa4\x4d\x9b\xb3\xce\x7d\xf4\x1e\x7f\x74\x55\x08\x6c\xf8\x44\x0d\x01\x43\x81\xb2\x01\x45\x8c\x60\x04\xa8\xa9\x9b\xcc\x73\x79\x07\xe1\xc3\x65\x00\x44\x51\xc8\x4c\xd8\x65\x96\x2c\x08\xa2\xb2\xab\x34\xf5\x80\x49\x8c\x5a\xad\x76\x1c\x56\x8f\xc3\xda\xa5\x74\xc4\xd0\xc3\x5a\x59\x5d\xdb\xca\x16\x98\x9b\x36\x29\x01\xd2\xe5\x31\x57\xbf\xec\xba\xd7\xef\xb6\x77\xa3\x06\x5e\xbf\x04\x8c\xd5\x53\x5b\x9a\x57\x64\x94\xaf\x91\x89\x33\x92\x40\xad\xae\x98\x45\x27\xa0\x94\x14\xac\xac\x94\x08\x4a\x40\x0c\x0c\x50\x62\xca\x6b\xce\x3a\xbe\xe6\x6c\x6e\x04\x2e\xf1\x9a\xcd\x9f\x74\xff\xb4\x12\xc9\x64\xdf\x6b\xef\xdd\xc5\xa5\xf0\xf7\x99\xc9\x44\x76\xba\x84\x7c\xad\xfa\x59\xe3\xe4\x92\x56\x53\xea\xa7\xa7\x1f\x74\xcc\x55\x10\x28\x4a\xee\x53\xc6\xc7\x4e\xd6\x2e\xa1\x24\x48\x32\x79\x28\x25\x19\x4a\x09\x84\x80\x72\xc5\x22\x39\x57\xdf\xbc\xfa\x06\x05\x85\x84\x07\xa4\x91\x9e\xcc\xc9\xe2\x9d\xb9\xd6\x49\x97\xd7\xbb\xba\x6c\x87\x5f\xc6\xf1\xef\xfc\x0e\x8f\x4e\xa3\xac\x4a\x57\x35\xa1\x29\x0a\x9f\x1c\x43\xb8\xd8\x5c\x5e\x9d\xda\x69\x6c\x19\xde\x48\x64\x4c\x9e\x94\x52\x24\x1b\x6b\xed\xad\x5a\xd5\x61\x39\x99\x72\x44\xda\xec\xb9\x91\x67\xb2\xe2\x7e\x5a\x95\x97\xe6\xdb\x14\xcc\xb6\x91\x62\x8c\x9f\x21\xfc\x64\xba\x73\x3b\xc9\x3e\x14\x16\x59\x5e\x64\xf9\x20\xcb\x8b\x2c\x6e\x6c\xfd\xc6\x96\xc9\x7e\xc3\x96\xb9\x7e\xcf\xf6\xc1\x57\x69\xd9\x79\xdd\xfa\x33\xaa\xe0\x96\x93\xd6\x19\x5f\x6c\x56\x31\xff\x32\xc5\x26\x3c\xbb\xa1\x4c\x3a\xf4\x82\xae\xb7\x8b\xec\x7f\x5e\x2f\xf0\x83\x2f\x16\xbd\xb3\x9f\x7d\x3a\x25\x76\xca\x77\x5e\xf7\xfb\xff\xce\xab\xf3\x27\xbc\xb6\xfb\x7c\x53\x62\x4d\x97\x1a\x50\xc9\xd4\xd8\xab\x57\x67\x81\x06\xc3\x03\xa8\xea\x03\x42\x34\x80\x21\x32\xab\x1a\xb7\x36\x10\x52\xcc\x5c\xcd\x36\x6f\x95\xa5\x37\x65\x2e\x5b\xd7\xd6\x54\x4b\x76\x31\xd9\x5c\x01\xce\x5f\x01\x00\x00\xff\xff\x37\x85\x51\x9e\x16\x06\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x4a\xc4\x40\x10\x44\xff\xa5\xcf\x73\x5a\xd1\x43\xee\x1e\xfd\x82\x25\x48\x27\xdb\x2b\x83\x63\x4f\x48\x57\x47\x87\x65\xff\x5d\x36\x98\x49\x44\x21\xe8\x71\x98\x6a\xde\xab\x3a\x5e\xa8\xcf\x6a\x60\x05\x35\x67\x4e\x26\x81\xa2\x0e\x0e\xa3\xe6\x78\x21\xe5\x37\xa1\x86\x5e\xa5\x50\x20\x94\xe1\xf6\xe8\x0a\xc4\xee\x0e\x74\x0d\xf5\x7f\xe2\xe4\xb2\x26\x3c\x2a\x0e\xf7\x0f\x74\x6d\xc3\x92\x50\x46\x9c\xe4\xd9\x04\x14\x28\x3b\xbe\x08\x6d\xa0\x81\x0b\x77\x49\x2a\xdd\xc0\x90\x27\x07\x77\x31\x45\x94\xdb\x6d\xd6\x25\x54\x11\x67\xd7\x1e\x31\xeb\x6c\xb1\x36\xc0\xe8\xdb\x02\x3f\xf8\x2f\x82\xc7\x0f\xe9\x1d\x79\xfc\xe6\x51\x9b\xac\x04\x3e\x9d\x46\x31\x9b\x4b\xec\x3b\x4e\x51\xde\xff\x6a\xb7\x33\xef\x6f\xf2\x7b\xd2\xdb\xe5\xff\x2f\xdd\x7e\x06\x00\x00\xff\xff\x31\x85\x28\xfa\x16\x02\x00\x00")

func compiledParamsnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeAbi,
		"compiled/ParamsNative.abi",
	)
}

func compiledParamsnativeAbi() (*asset, error) {
	bytes, err := compiledParamsnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBinRuntime,
		"compiled/ParamsNative.bin-runtime",
	)
}

func compiledParamsnativeBinRuntime() (*asset, error) {
	bytes, err := compiledParamsnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x3f\x6f\xdb\x40\x0c\xc5\xbf\x0b\xd1\x51\x53\x8a\x76\xd0\x96\x1a\x1d\x9d\x16\xfd\x33\x05\x19\x28\x89\x71\x0f\x39\x91\xc6\x91\xe7\x40\x08\xf2\xdd\x0b\xb9\x95\xa5\xda\xe7\x3f\xa9\x9c\x58\xa3\x21\x1e\xfd\x7e\x7a\xbc\x27\xde\x3e\x41\x29\xac\x86\x6c\x90\x5b\x88\x94\x81\xe3\x65\x34\x85\xfc\xf6\x09\x18\x6b\x82\x1c\x0c\xc3\x82\x0c\x32\xb0\x66\xd9\xfe\xc6\xaa\x0a\xa4\x0a\xcf\xd9\xa6\xa4\xf0\x52\x3e\xdc\xc4\xba\xa0\xd0\xd7\x45\xc7\xf6\xfe\x0a\x9e\xef\xb2\xae\xec\x5d\x81\x1e\xb9\xa4\x6b\xfb\xd4\x1e\x80\x0c\x24\xda\xf6\xdf\x61\x2d\x91\xed\xdf\x36\x57\x1f\x3e\xae\xfb\x2c\xb1\xc1\xc2\x13\xe4\xf7\xe8\x95\x32\x50\x43\xa3\x79\x34\x2c\x9c\x77\xd6\x40\x0e\x2b\x47\x8f\xfd\xd9\xfb\xc8\xa5\x39\xe1\xb5\xd6\x11\xa4\x03\x84\x5f\xa8\x33\xa9\x28\xad\xbd\x3f\x5a\x88\xf8\xa9\x48\x2e\x63\x08\xc4\xf6\x7d\x29\xac\x12\x8e\x29\x1f\x76\xb8\x94\xf8\x97\x4f\x16\x31\x85\x45\x73\xe9\xc1\xfa\x7b\xfa\xbf\x48\xa3\x0e\x11\x53\x3e\x06\xaa\x65\x45\x3f\xff\xd4\xf5\x80\x27\xc9\x67\xe1\xae\xe8\x15\xdd\x3a\xce\xe0\x74\x47\xff\x1b\xdc\x9e\x31\xbe\x94\x81\x2a\x97\x1a\x9b\xbe\x24\x50\x29\x2b\x0a\xcd\x37\x34\x4a\xcf\x57\x87\xaf\x64\x2d\xff\x57\x8f\x3c\x55\x0f\x75\x13\x13\x07\x6d\x3c\x31\x4d\x2e\x9e\x83\x2f\x19\xce\xb6\x62\xd6\xd9\x9d\xc0\x0a\x54\xa3\x63\xaa\x66\xfb\x46\x62\x12\x9c\x0f\xd4\x0c\xde\x7f\x63\xa4\x5b\x59\xa9\x26\x01\x17\x74\xbd\x87\x72\x85\x3e\x52\xba\xc3\x04\xae\xe3\x71\x17\xb1\xaa\xa6\x97\x91\x5b\x53\xb6\x13\x00\xe7\x8d\x9b\x09\xf8\x74\x52\x8c\x28\x79\x2a\x93\x8b\xc9\xb9\x0d\x1b\x83\x62\x72\xf0\xf1\xa1\xbd\xa2\x03\x6d\x3f\xdc\x9f\xd7\x2b\xca\x0f\x99\x2c\x67\x43\xfa\x25\xdc\x48\x22\xbc\x37\x7e\xbd\x81\x53\x63\xae\x56\x8d\x6a\xfb\xb6\x8b\xcd\xb3\xd7\xdb\x73\xc7\xbc\x7c\xa6\xc7\xf9\x01\x85\x83\x05\x62\xbe\x0b\x79\x06\x0f\xee\x7e\x07\x00\x00\xff\xff\xe9\xc6\xad\xb9\x0c\x0e\x00\x00")

func compiledPrototypeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeAbi,
		"compiled/Prototype.abi",
	)
}

func compiledPrototypeAbi() (*asset, error) {
	bytes, err := compiledPrototypeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x0b\x96\xda\x3a\x0c\xdd\x92\x3e\xd6\x6f\x39\x76\x6c\xef\x7f\x09\xef\x38\x4e\x06\x02\x0c\xcd\x0c\x79\x2d\x3d\xed\x29\x97\xa0\xcf\xd5\x95\x64\xa3\xe0\xa0\x90\x40\x48\x01\x12\x2b\x82\x22\x40\x07\x31\xe5\xbe\xbd\x6c\x01\x84\x5f\xbe\x14\x00\x58\x20\xa1\x2a\x63\x80\x61\x57\x71\xc4\xb4\x7a\x11\x31\x07\xe5\x94\x00\x9b\xe6\x58\x51\x64\xdc\x50\x4f\xb5\xf3\x02\x13\x55\x9d\xa8\xa6\xbe\x20\xb4\x69\x01\x33\x6f\xa8\x79\xd6\x52\xb6\x67\x97\x3a\x51\xb3\x14\x1c\x99\x27\xda\x37\x0b\x91\x2c\x19\x5a\x59\x51\xc2\xed\xd9\x30\xca\x04\x79\x5a\xa0\x94\x36\xd4\x93\x99\xf8\xf6\xac\x96\x0d\x6d\xbd\x2f\x59\x75\xa2\x41\x13\xcd\xb9\x86\xa3\xd7\x89\x96\xcd\x5b\x51\xab\xbe\xe4\x19\x2f\xd5\xcd\xdb\x52\x15\xb8\x48\x5b\x51\x46\xfb\x42\x43\x95\xfa\x44\xb9\x4d\xb4\xe6\x24\xad\x7a\x9e\xa8\xfa\x44\x1b\xb8\x3b\xe2\x66\xc1\xb7\x67\x5b\xcb\x59\xb5\xcb\x44\x73\x17\x93\x32\x2a\xe0\xd0\xab\x14\x4e\x0e\x28\x83\x0b\x40\xb1\x1b\x2e\xa3\xe6\x88\x5d\x01\x50\x21\x8f\x9a\x0d\x2a\x78\x55\x84\x8c\xca\xed\x4a\x50\xa0\x89\x20\x70\x55\xd1\x61\x3d\x81\x83\x60\xa0\x93\x90\x60\x80\x63\xc0\xf8\x2e\x01\x60\x40\xe7\x7b\xbf\x5c\x9f\xfd\xae\xca\x7b\xed\x17\x21\x59\x1c\xbd\xa0\xa0\x9c\xf1\x64\xf4\xec\xc9\xed\x8d\x27\x81\x7e\xef\xe9\xf1\xc9\x80\x20\xd4\x33\x9e\x07\xeb\x1f\x72\x2b\xc6\x23\x96\x9b\xcd\x1a\xcf\x36\x7b\x7a\x6d\xd3\x11\x35\xe0\xde\x5a\x5b\xad\x01\xdc\x59\x24\x78\xc1\xcf\x77\x95\x78\xb2\xa8\x11\x87\xf8\x88\x7e\x10\x1f\xea\xb4\xa4\x90\xc6\xbf\x08\x06\x72\xb4\x26\xf0\x41\x6c\xb6\xd0\xd1\x9a\xd9\xf9\x7a\x3c\x59\x73\x6a\x47\x6b\xd1\x7e\x54\xdd\x99\x29\x82\x47\x3e\xda\x59\x5e\xf0\x7f\xba\xa2\xf1\xc8\x58\x7b\xe6\x9f\x7a\x7b\xa3\xf6\x88\x83\xda\x83\x9c\x07\xc3\x04\xce\x80\x81\x01\x81\x42\x7b\x5f\x0f\xad\x3f\xe9\x9c\x89\x3f\xc8\x20\x73\x3f\x64\xc0\x29\xff\xda\xda\xae\xa3\x5c\x8f\xaa\x64\x4b\x3f\x57\xe5\x98\x2f\x8a\x50\xec\x58\x2f\x8e\x17\xf1\xbd\x9d\x27\xa5\xf9\xd1\x42\x29\x1f\xf0\xb5\xa4\xe5\xbe\x5e\xd6\x0b\x34\x74\x4f\xf9\xb7\x7b\xd9\x5f\x74\x94\x8f\x2d\x0d\x90\x9c\xd6\x7e\xfb\x9a\x4c\xce\x93\x9d\x89\xc7\x9c\x8e\x10\xc8\x10\xa8\xbc\x47\x12\x38\x2a\xe1\x30\x9e\x8a\x55\x4b\x41\x43\x47\x01\xbb\x82\x1c\xdd\xdc\x1c\xb8\xa0\x6c\xac\xa4\xa4\x47\x56\x24\x77\xbc\x7d\x2a\x59\x8c\xeb\xfc\x9c\xdb\xfc\xdf\xf6\xdc\xfa\x67\x3d\xb9\xe0\xc0\x09\x1c\x71\xfb\x96\x3d\xcc\x0f\xc1\xe0\xa0\xed\x3b\x07\x16\x25\x34\xf7\x5e\xe4\x52\x16\xf9\x9e\xc5\x47\xb6\x76\x8f\x83\x2d\xfa\x31\x5b\xb5\xbe\x63\xab\xe3\x2f\xd8\x12\xb0\x27\xb6\x28\xf0\x05\x57\x8d\x72\xb2\xcc\x7f\x91\xab\xcd\xe3\x15\x5c\xdd\xf2\x40\xaa\x02\xd4\xeb\xa5\x79\xfc\xaa\x73\xf6\x48\xae\xe8\x1c\xe6\x75\xd3\x57\xe7\xdb\xec\x79\x8c\x12\x15\x93\x8f\xb9\xa3\x90\xc5\x86\x1e\x1e\xb2\x20\x54\x66\x4c\x52\xb6\x29\xa8\x28\xaf\x39\x8c\xe2\xa9\x2f\x51\xae\xe5\x70\x4c\xbd\x95\x45\x1e\x6c\x3d\x73\x37\x59\xdb\x7d\x7f\xb1\xc6\x93\x35\x18\xac\x1d\x39\xe3\x07\xce\xd4\xde\xf5\x8f\xc6\x1f\xfa\xe7\xb9\x27\x78\x54\x11\xe2\x62\x2d\xfd\x89\x87\x7b\x0d\xed\x11\x5c\xa6\x21\x83\xee\xe9\x84\x86\x8c\x96\x97\x1a\xe2\x07\x0d\x19\xdb\x6b\x0d\x51\x22\x6f\xb1\x7e\x74\x1d\x77\x72\xe8\xc3\xc1\xda\xd8\xd3\x29\xd6\xfb\x6d\x9a\xef\x78\xbc\xbb\xe9\x69\x8f\x63\x30\xa8\x3f\xd3\x93\x65\x79\xa3\x27\x2b\x71\x42\x4f\x4f\x53\xd6\x15\x09\xff\x72\x67\x1d\xa7\xee\x8c\xe0\x0a\x45\xdd\xf2\x5a\x6a\xea\x44\xe0\xff\x2e\xaf\x3d\x82\x6b\xf3\xa2\x45\x5b\xf3\x65\xb9\x36\xaf\x97\x2a\xfe\xd2\xed\x7d\x56\xbb\xff\xcb\xfa\x3f\xa0\x9f\xda\x21\xf1\x4d\xff\x3f\xee\x90\xf8\xae\xff\x3d\xb0\x52\x36\xfa\xbb\x8a\x98\xac\xed\xbe\x3f\xdf\x21\xb7\x7c\x6a\x4e\x05\x73\x8e\x4b\xf3\x39\x9c\x8f\x1c\xb7\xda\x93\x73\x10\x43\xd0\xfa\xeb\xd0\xea\x35\x68\x3b\x23\x25\x18\xa7\xdd\xf5\x0c\xf7\xa6\xf2\xf9\xf1\xfe\x7f\x98\x5c\x19\xf5\xec\x49\x32\xdd\x4e\x92\x79\x28\xe2\xde\xe6\xfc\x1d\x85\x60\xe8\x10\x50\xc6\xad\x92\x64\x5c\x5e\xc7\xed\x72\xfc\xd5\x4d\x73\x39\xc5\x29\xcd\x65\xd5\x53\x9a\xcb\x86\xaf\x6b\xa4\x92\xb5\x54\xfd\x27\x9a\xdb\x7d\x7f\xae\xb9\xc9\x59\xe3\x53\x7b\xba\x00\x9c\xda\xd3\x05\xca\x37\x13\x2e\x43\x4e\xb0\x5c\x7b\xc6\x91\x07\xce\xd2\x3d\x67\xdf\x6e\xea\x2d\x92\xcf\x37\xf5\x2d\x3b\x10\x0f\xf2\x76\xf1\xbe\xbd\xef\x5a\xe6\x5b\x66\x4e\x2b\xdb\x23\xbf\x07\x75\xec\x71\xfc\x22\xb7\x6f\x27\x12\x48\x84\x40\xfb\x1f\x27\xd2\xe3\x36\xda\x3d\x5e\x71\x63\x5b\x55\xbe\x88\x9e\x9a\x0c\x8b\xf1\xa9\xc9\xb0\x58\xfb\xe6\x56\x98\xbd\xfc\xab\x6d\xb4\xfb\xfe\x74\x32\xc0\x3a\xb8\x95\x2c\x5b\x36\x1a\x92\x22\xb0\x05\x1b\x74\x30\xa8\xad\x7b\x0b\xae\x3d\x7a\x6b\x80\x55\xb0\x56\xac\xa5\x2f\x94\x53\x0d\x5b\x9a\xe4\xea\xb5\xb5\x2c\x8b\x14\xe3\xa5\xe5\x84\xa9\x18\x00\xc5\x7f\x01\x00\x00\xff\xff\x37\x30\x0c\x54\x24\x1a\x00\x00")

func compiledPrototypeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBinRuntime,
		"compiled/Prototype.bin-runtime",
	)
}

func compiledPrototypeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x41\x4f\xdb\x40\x10\x85\xff\xcb\x9e\x7d\xa2\x6a\x0f\xb9\xd1\xa8\xc7\xd0\xaa\x2d\x27\x14\x55\x63\xfb\x91\xae\x58\xef\x44\x3b\xb3\x46\x16\xe2\xbf\x57\x46\x8d\x0d\x78\x49\x4d\x63\x88\x73\x8c\x3c\x9e\xbc\xcf\x33\xf3\x66\xae\xee\x4c\xc1\x5e\x94\xbc\x9a\xc5\x35\x39\x41\x66\xac\xdf\x46\x15\xb3\xb8\xba\x33\x9e\x2a\x98\x85\x51\x0a\x1b\xa8\xc9\x8c\x36\xdb\xf6\x37\x95\x65\x80\x88\xb9\xcf\xba\x90\x82\x9c\x43\xd8\x1b\xd2\x40\xbe\x86\x0b\xee\x63\x72\x66\x67\xee\xd7\xd9\x2e\xc0\x93\xda\x1a\xbf\x64\xcb\x5e\xb8\xcd\xc5\x51\xff\x4a\x59\x67\x66\x4b\x0d\xe5\x0e\x9d\x4c\x51\x52\xac\xa2\x52\x6e\x9d\xd5\xa6\x7d\x9f\xfd\x2e\xa8\xfb\x8f\xeb\xe8\x0b\xb5\xec\x1f\x84\xf4\xa8\x1a\xe2\xeb\x48\x07\x2a\x2b\x12\xc5\x53\x91\x5d\x96\xee\x59\x22\xcb\xbf\x31\x6a\x8b\xdb\xe9\x01\xfa\x3a\xe4\x8e\x8b\x9b\x8b\x58\xe5\x8f\x25\x46\xeb\xf5\xc3\x59\x82\x13\x1e\x61\xd3\x9c\xeb\xe7\xf6\xad\x34\x2e\x55\x1c\xbd\x3e\xcd\x75\xf6\xf1\xd3\x94\xb8\x87\xb4\xa6\xc7\xed\x6a\x4f\x41\x9e\x35\x1f\x74\x35\xac\xec\xd4\xed\x77\xd0\xa4\x05\x94\x36\xf5\xb5\xfb\x90\x80\x82\x6b\x84\xe6\x3b\x29\xd2\x65\x19\x40\x5f\x0a\xc2\x37\x47\x7e\xb6\xd8\xca\x7b\x1f\xef\xeb\xc1\x67\x83\xcb\x35\xbe\x3c\x34\xf5\x4f\x9e\x97\xc7\xf4\x34\x37\x68\x1e\xd9\x64\xa3\x90\xe4\x6c\x8a\x72\xa0\x0d\xce\x35\x3d\x97\x35\xb9\x88\x74\x9e\xe3\xbb\x50\x94\x71\x03\x69\xe5\x52\x5e\xf2\xd9\xc4\x2a\x39\x16\xd8\x40\xf7\x6f\x92\x25\x97\x38\x3d\xe1\x45\x0c\x01\x5e\x7f\x24\xb6\x70\x42\xff\xbc\x56\x5b\x7f\x3a\x8c\xe8\xab\x91\x84\x53\x57\xe8\x10\x13\x7c\x05\x9f\xc0\xa1\x48\x56\x71\x4e\xae\x3e\xd6\x05\xa8\x2c\x07\x36\x70\x8a\x1c\x01\xed\xfa\x79\x73\x94\x77\xbb\x0e\x73\x72\xe4\x0b\x1c\xfb\x3c\x7c\x87\x3d\xd4\xc6\x2d\x77\xa7\x57\x82\x32\xa0\x22\xeb\x51\x2e\x5f\x3a\xcf\xe6\xe4\xf1\x31\x75\xed\x4d\x7b\x61\xfe\x3f\xeb\xfa\x4f\x00\x00\x00\xff\xff\xb0\xcc\x54\xb5\x95\x0e\x00\x00")

func compiledPrototypenativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeAbi,
		"compiled/PrototypeNative.abi",
	)
}

func compiledPrototypenativeAbi() (*asset, error) {
	bytes, err := compiledPrototypenativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBinRuntime,
		"compiled/PrototypeNative.bin-runtime",
	)
}

func compiledPrototypenativeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypenativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x3f\x4f\xc3\x30\x10\xc5\xbf\xcb\xcd\x99\x90\x60\xc8\xc6\xc2\x86\x18\x60\xab\x2a\x74\x49\x2e\xc8\x92\x73\x67\xd9\xe7\x94\xa8\xea\x77\x47\x2d\x69\x5c\x41\xfe\x54\x05\x04\xac\xf1\x3b\xdf\x7b\xfe\x5d\xec\xd5\x16\x4a\xe1\xa0\xc8\x0a\x79\x8d\x36\x50\x06\x86\x5d\xd4\x00\xf9\x6a\x0b\x8c\x0d\x41\x0e\xcf\xc1\x11\x57\xe4\x21\x03\xed\xdc\xfe\x0b\x56\x95\xa7\x10\x60\x97\x25\x51\x8b\x36\x52\x92\x44\xc3\x7a\x75\x7d\x03\xbb\x75\x76\x94\xa0\x73\x5e\xda\xbd\x46\xa2\x7e\x6c\x12\x62\x59\xee\xb7\x1c\x36\x28\x44\xec\xa1\xda\x61\x87\x85\xa5\xc1\x60\x50\x54\xba\x8f\x8a\x85\xb1\x46\x3b\xc8\x81\x85\x8f\xa2\xa1\xbc\x8e\x5c\xaa\x11\x3e\x78\x4c\x21\xd5\xc7\xd3\x8c\xc9\x9c\x8a\xa2\x7d\x8c\xce\xd9\x6e\xca\x60\xbf\x36\x12\x70\xd9\x62\x6b\x68\xb3\x68\x6e\x9a\x40\xed\xa5\x99\x3f\x7e\x95\xaf\xe2\x51\x8f\x1c\x6a\xf2\x77\xef\xbd\xfe\x0c\xa3\x94\x41\x36\x3c\x3a\x85\x29\x43\x81\x16\xb9\xa4\x87\x7a\x3c\x40\xbf\xfc\x4b\x10\xbf\x0f\xd1\xff\xc2\x93\x9d\x73\x93\x9c\x5c\x13\xd6\xca\xa6\xc7\x34\x92\xd2\x53\x83\x86\x0d\xbf\xfc\x00\x45\x64\xe1\xae\x91\x18\xc6\x30\x1a\xae\xe8\x95\xaa\xe3\x01\x2c\xff\x9a\x13\x05\x53\x63\x30\xc8\xfb\xd6\xe7\x8f\xc5\x53\x1a\x8b\x5e\x44\x2d\xb1\x5e\x1c\x69\x06\xe4\x44\xc5\xec\x0b\x71\x79\xb0\xdb\xc3\x8b\x81\xf6\x53\xb0\xf5\x5b\x00\x00\x00\xff\xff\x73\x6f\x06\xdc\xba\x06\x00\x00")

func compiledTokenAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenAbi,
		"compiled/Token.abi",
	)
}

func compiledTokenAbi() (*asset, error) {
	bytes, err := compiledTokenAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledTokenBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenBinRuntime,
		"compiled/Token.bin-runtime",
	)
}

func compiledTokenBinRuntime() (*asset, error) {
	bytes, err := compiledTokenBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledThorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x4d\x6f\xdb\x30\x0c\xfd\x2f\xc2\x8e\x3e\x75\xd8\x0e\xb9\x65\x41\x8f\x69\x87\x64\x3b\x15\x3d\xd0\x16\xd3\x09\xb5\xa9\x40\xa4\xdc\x19\x45\xff\xfb\x90\x34\x4e\xec\xc4\x5f\xf9\x5a\xd5\xab\x4d\x51\xef\xe9\x51\x8f\xd4\xc3\xab\x4a\x2c\xb1\x00\x89\x1a\x89\xf3\x18\x29\x43\x4b\x2f\xac\x46\x0f\xaf\x8a\x20\x43\x35\x52\x0e\x13\x34\x39\x3a\x15\x29\x29\x96\xab\x2f\xa0\xb5\x43\x66\xf5\x16\x6d\x83\xe2\xd4\x26\xcf\x77\x3e\x8b\xab\x71\xde\x90\x7c\xbd\x51\x6f\x8f\x51\x19\xf6\x25\x86\x14\x28\xc1\xb1\xfc\x58\x2d\x50\x91\xb2\x5e\xf6\x37\x84\xcc\x7a\x92\x7a\x9a\x9b\x6f\xdf\xd7\x79\x96\x50\x40\x9c\xa2\x1a\x2d\x20\x65\x8c\x14\x0b\x08\x4e\xbd\x40\x6c\x52\x23\x85\x1a\xa9\xdc\xe0\xcb\x6e\xed\xc2\x53\x22\xc6\xd2\x1a\xeb\x59\x5c\x2b\x24\xfe\x00\x4f\xac\xc6\x66\xf4\xbb\xa5\xb1\xb5\x69\x38\xa0\x13\xef\x1c\x92\xcc\x97\x96\xd8\xba\x3e\xec\xd5\x0c\x1f\x07\xff\xf8\xfa\x42\x42\xf7\x54\x7c\x74\x79\x6d\x56\x9f\xc8\xd5\x73\x9f\x96\x0e\x33\x9b\xe3\xef\xf7\xb8\x1d\xc5\x41\x04\xc8\x52\x19\x74\x55\xc5\xfa\x59\x18\x3e\x60\xf0\x1f\x6e\xd1\x79\xda\x24\x0e\xb5\x69\x2a\x9e\xa8\x9a\xc7\xe6\xe8\x8a\x19\x08\x36\x57\x59\x79\x00\x8c\xb2\x3a\x81\x9f\x29\x50\xb8\x3a\xf2\xd6\x30\x3a\xa5\x1c\xe8\x2b\x01\x78\xe2\x31\x25\xba\x8a\x98\x94\x92\x37\x10\x73\x98\x81\x21\xd4\x93\xb6\xb2\x08\xc5\xfd\xdf\x7d\xf1\x33\xf5\xdb\x9d\x4c\xcf\x58\x54\x0a\xa8\x10\xe4\x3d\xd3\x67\xb1\x0e\x9e\x70\xdc\x22\x52\x0e\xa9\xc7\xe6\x0c\x41\x78\x4a\x7f\x19\x82\xd6\x21\x9a\xfd\xde\x45\x39\xf0\xb1\xcb\xba\x66\x10\x5a\x0d\x72\x43\xc6\x14\x93\xc6\x49\xeb\xd2\xa2\x9d\x47\x46\x6c\xe7\xef\x2e\x5f\x28\xa9\xae\xe6\x90\xdb\xb5\xb7\xfc\xb2\x01\x33\x2d\x90\xef\xdd\x9d\x6d\xe8\x43\x5b\xcd\x82\x57\x6b\x88\x1c\xe2\x80\x78\x81\xee\xf6\xd0\xee\xc3\xf2\x8b\x0c\x58\xda\x66\xbf\xed\xbf\xeb\xbd\x45\xce\x53\x82\xf0\x65\xda\x81\xb1\x32\xde\x4d\x0f\x69\x5e\x46\x07\x20\x4b\x45\x66\x3d\x37\x71\x31\xa4\xf1\x2f\xea\x52\xa3\xe3\x50\xcf\x2b\xa8\x37\x61\x98\x23\xc9\xa9\xdb\xb6\x74\xb7\xa8\x12\xbf\x49\x55\xd6\xb9\xd6\xf7\x6e\xb6\x7e\xe1\x74\xdc\xd7\xb1\xd6\xb3\xea\x2b\xe8\x44\xa8\xf5\xad\xbb\xfa\x54\xcb\x92\xe1\xd3\xfe\xbc\x36\xed\x5f\xe2\x68\xdb\x9b\x51\x3b\xde\x7e\x27\x9c\xef\x67\xbd\x12\xc6\xda\xd1\xd4\x1b\x66\x7d\xe3\xc7\x7f\x01\x00\x00\xff\xff\xc2\xf4\x7a\x86\xa7\x12\x00\x00")

func compiledThorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledThorAbi,
		"compiled/thor.abi",
	)
}

func compiledThorAbi() (*asset, error) {
	bytes, err := compiledThorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/thor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledThorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x0d\x72\x23\xad\x0e\xbc\x92\x24\xd0\xdf\x71\x18\x06\xee\x7f\x84\x57\x0c\x10\x7b\xec\x64\xd6\x76\xa8\xf7\xc5\x5b\xd9\x4a\x64\x10\xdd\x52\x23\x01\x1a\xe0\xc5\x4f\x00\x8c\x02\x06\x02\x11\x98\x04\x20\x06\x41\x10\x04\xc4\x9d\x55\x42\x1d\x1f\xcd\x80\xaf\xfa\x7c\xfc\x48\x5b\x87\x21\xa2\x48\x40\x07\xc5\x2a\x6c\x88\xb1\xad\x42\xc4\x6a\x20\x21\x46\xc0\x22\xc9\xbb\x95\x71\x58\x2d\xee\x35\x64\xe8\x56\xf5\x6e\x95\x58\x33\x42\x19\x1e\xd2\xb4\xaa\x25\xd9\xb6\x31\x36\x4b\xb7\xaa\x46\x0f\x9e\x42\xb7\x96\xda\xad\x1e\x35\x2a\xea\x76\x58\x09\x86\x07\x57\x4a\x04\xa9\x7b\xa0\x00\xc3\x6a\x51\x95\x6d\x8c\x8d\x69\x58\xb3\x25\xf4\xd2\xf1\x92\xc4\x61\x2d\xb5\xe6\x24\xd2\xad\x6a\xdd\x9a\xd2\xee\x86\xb6\x77\xab\x0d\x0c\x9b\xe8\x6e\x39\x75\x16\xb4\x0d\xbc\x79\x17\x08\x1b\x97\x6e\x2d\xe1\xcb\xea\x22\x54\x0f\x6b\x80\x81\x61\x4f\x91\xcb\x6e\xa9\x5b\xc3\xc0\xb0\x97\x4a\xe8\x75\x58\x79\x8c\x2d\x60\x66\x88\xdd\x6f\xd0\x32\xac\x25\x25\x91\xca\xdd\xea\xc4\xca\x5b\xcb\x96\x41\xdd\x79\x6b\x11\x0b\x55\x00\x50\x20\xb5\x2c\xb6\xe0\x84\x43\x23\xdc\x72\x39\xb5\x21\x40\xdd\x82\x10\x36\x67\x69\x3e\x22\x18\x30\x3a\x1a\x31\x31\x3a\x18\x3a\xb4\xb9\x04\x80\x0e\x35\x74\xef\xc2\x3f\x7a\x47\x88\xc2\x67\x5f\x4d\x16\xd7\xfe\x6c\xbf\xf0\xc7\x10\xef\xfd\x3d\x8e\x74\x70\x42\xb9\xf6\xff\x66\x34\x58\xb1\xad\x68\x68\x80\xdc\xe6\xef\xc4\x7a\x8b\x2f\x1f\xfb\xac\xfc\x80\xd9\x10\xc5\xe1\xde\x5b\x49\xcd\x1b\xc0\x75\xec\x9e\xe6\x89\xea\x09\x05\x21\xbf\x8e\x02\xa5\x7b\x12\x88\xed\x7f\x04\x29\xf9\x88\xe2\x3b\x08\xd4\x60\xce\xf9\x29\x82\xcf\x73\x2a\xff\x6b\xce\x31\xce\x24\xbd\x30\xae\x73\x40\xb0\x3d\x9e\x63\xe1\xdb\x2f\x32\xe2\xd1\xc6\xda\x94\xd3\x05\x46\x7f\xd8\x15\x64\xa1\xd5\x5a\x02\x0b\x80\x8e\x0e\x8e\x4c\x73\xbf\xf8\x51\x94\xbb\xe6\x6e\x38\x5b\xe5\xfa\x18\x67\x12\x3a\xb1\x0e\x28\x1f\x7b\x9b\x3a\x48\x7b\x38\xfb\x8c\xf0\xbe\xaa\xda\x8e\x16\x84\x2d\x6e\x67\x5f\xf2\x06\xbe\xbb\xec\x6e\xdb\x97\x36\x2f\x2b\x41\xe6\x74\x5e\xcf\xcb\x2f\xa2\x9b\xb3\xde\x67\x57\xeb\xec\x71\x9f\xf6\x4b\xc3\xa3\x13\x9f\xd6\xb6\xd6\x3d\x01\xa2\x11\xb4\x6f\xbf\xaa\x8d\x85\xce\xbf\xdb\xbd\xd7\x35\x70\x14\x63\x50\x92\xaa\xb1\xfd\xa8\x2b\x08\x3b\xde\xfa\xaf\x63\xcb\xa4\x41\x9b\xe7\x87\x16\x9d\x9a\x0e\x1d\xa6\x02\x0d\x4d\x4d\x0d\xc2\x86\x3c\xe2\x14\xc3\x43\xfd\xe2\x54\xf1\xf6\x6d\x14\xd6\xb0\xf7\xef\x43\xe9\xbf\x8d\x71\xc7\xbf\xe3\x8c\x81\xcd\x4e\x60\x88\x63\x16\xe7\x07\x9f\xe8\xad\x13\xf5\x39\xa7\xb8\xce\x33\xc2\xd2\xb8\x86\xfb\xb8\xfe\x3b\x7e\x13\x43\x8b\x1f\xbd\x1d\xbf\xc7\xfa\x7f\x8e\x5f\xf9\x28\x7e\xf5\x39\x7e\xe4\xf8\x4d\xf4\xc6\x59\xea\x3f\x8d\xde\xc0\xb0\x22\x7a\x37\x66\xf3\x3c\xb8\x94\xd9\xa2\xfd\x36\xb1\xad\xd8\x6f\x77\x8c\xc7\x59\x77\x2d\xe3\x56\xd9\x0e\xce\xa1\x71\xfb\x86\xe9\x4f\x1c\x07\x9a\x2f\x8e\xa1\x73\x84\xc6\xf1\xcc\x30\x3c\x30\x14\xde\x2e\x76\x44\x3b\x9a\x5e\xee\x88\x67\x95\xcf\xf3\xfe\xff\x39\x32\x97\x1a\x98\x98\xd6\x6a\x60\xde\x61\x96\x32\xe5\x93\xea\x1b\xc7\xd6\x4b\xa3\x1f\x77\xc3\xd8\xff\x0a\xed\xaf\x2b\x3d\x4c\x64\x8d\xaf\xbc\xa7\x07\x95\x70\xa1\x07\x55\x7d\x41\x0f\x0f\x8a\x98\xb7\xba\xbf\xa4\x88\x89\x69\xb1\x22\xc6\x4d\xf5\x4f\x31\x1d\x98\xd6\x32\x55\x48\x60\x14\xd6\x56\xfc\x9f\x7a\x19\x47\x96\xd6\x9a\x49\x54\xfd\xd8\xcf\x63\xf5\xb5\x5d\x6c\xbe\x1d\xac\xcd\xde\xb7\xfb\xf9\xb6\x83\xaf\x73\x37\x10\xad\xcd\xdd\x7c\x0d\x59\xcb\xf3\xd3\xde\x35\xd1\xfc\xbe\x77\xdd\x18\xce\x97\x9d\xa5\x0c\x4f\xea\x34\x1c\xb9\x23\x0b\x4e\xdf\x72\xa3\xdb\x0b\x93\xd3\xd0\x69\x84\x76\xb6\x3e\xce\x87\x17\x99\x4b\xc4\x17\x35\x38\x05\x7f\xf5\x94\x1a\x6f\xa7\xd4\x14\x1f\xee\xaf\xfd\x05\x86\xa0\xe9\x08\x90\xdb\x1d\x98\x18\x1c\xb8\xdd\x85\xdb\xcf\xa9\x86\xcf\x57\xb1\xbf\xa1\x99\x89\x66\xa5\x66\xe6\x0b\xdf\x52\x86\xfc\xc0\x30\xde\x33\x7c\xbd\x9f\x4f\x6c\xbf\xef\xe7\x37\xbe\xf3\xed\x72\x6d\x46\x4f\x7b\x84\x8e\xd7\x85\x97\x32\x3a\xd1\xac\xcc\x68\x72\x60\xcf\x9f\x1f\xd2\x3f\xaa\xe7\x4f\xbd\x6a\xa2\x78\x64\x46\x4f\xcc\x0e\x0e\x67\x6e\x99\xd2\x45\x25\xc8\xa1\x7c\x70\x5f\xcd\x1c\x1f\x7c\x7e\x73\x66\x9b\xaf\xd5\x4b\x63\xf7\xe6\x5d\x75\x62\x58\xdb\xe5\xe7\x8b\xfb\x5a\x55\x7c\x5a\xc9\x26\x9a\xdf\xea\x1e\x20\xa1\xb0\x90\x26\x4d\x4a\x01\xd8\x08\xd4\x82\xc6\x5c\x8c\x18\x3d\xec\xb8\x6b\x42\xd7\xcd\x42\x86\x7d\x93\xd6\x10\xac\x01\xac\x59\x63\xc8\x58\x93\x63\xa9\x04\x7b\xc9\x5b\xa5\x54\x62\x73\x4d\xfe\xbf\x00\x00\x00\xff\xff\x51\x67\xc3\x8f\xc8\x1a\x00\x00")

func compiledThorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledThorBinRuntime,
		"compiled/thor.bin-runtime",
	)
}

func compiledThorBinRuntime() (*asset, error) {
	bytes, err := compiledThorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/thor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/AuthorityNative.abi": compiledAuthoritynativeAbi,
	"compiled/AuthorityNative.bin-runtime": compiledAuthoritynativeBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/EnergyNative.abi": compiledEnergynativeAbi,
	"compiled/EnergyNative.bin-runtime": compiledEnergynativeBinRuntime,
	"compiled/Executor.abi": compiledExecutorAbi,
	"compiled/Executor.bin-runtime": compiledExecutorBinRuntime,
	"compiled/Extension.abi": compiledExtensionAbi,
	"compiled/Extension.bin-runtime": compiledExtensionBinRuntime,
	"compiled/ExtensionNative.abi": compiledExtensionnativeAbi,
	"compiled/ExtensionNative.bin-runtime": compiledExtensionnativeBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ParamsNative.abi": compiledParamsnativeAbi,
	"compiled/ParamsNative.bin-runtime": compiledParamsnativeBinRuntime,
	"compiled/Prototype.abi": compiledPrototypeAbi,
	"compiled/Prototype.bin-runtime": compiledPrototypeBinRuntime,
	"compiled/PrototypeNative.abi": compiledPrototypenativeAbi,
	"compiled/PrototypeNative.bin-runtime": compiledPrototypenativeBinRuntime,
	"compiled/Token.abi": compiledTokenAbi,
	"compiled/Token.bin-runtime": compiledTokenBinRuntime,
	"compiled/thor.abi": compiledThorAbi,
	"compiled/thor.bin-runtime": compiledThorBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"AuthorityNative.abi": &bintree{compiledAuthoritynativeAbi, map[string]*bintree{}},
		"AuthorityNative.bin-runtime": &bintree{compiledAuthoritynativeBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"EnergyNative.abi": &bintree{compiledEnergynativeAbi, map[string]*bintree{}},
		"EnergyNative.bin-runtime": &bintree{compiledEnergynativeBinRuntime, map[string]*bintree{}},
		"Executor.abi": &bintree{compiledExecutorAbi, map[string]*bintree{}},
		"Executor.bin-runtime": &bintree{compiledExecutorBinRuntime, map[string]*bintree{}},
		"Extension.abi": &bintree{compiledExtensionAbi, map[string]*bintree{}},
		"Extension.bin-runtime": &bintree{compiledExtensionBinRuntime, map[string]*bintree{}},
		"ExtensionNative.abi": &bintree{compiledExtensionnativeAbi, map[string]*bintree{}},
		"ExtensionNative.bin-runtime": &bintree{compiledExtensionnativeBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ParamsNative.abi": &bintree{compiledParamsnativeAbi, map[string]*bintree{}},
		"ParamsNative.bin-runtime": &bintree{compiledParamsnativeBinRuntime, map[string]*bintree{}},
		"Prototype.abi": &bintree{compiledPrototypeAbi, map[string]*bintree{}},
		"Prototype.bin-runtime": &bintree{compiledPrototypeBinRuntime, map[string]*bintree{}},
		"PrototypeNative.abi": &bintree{compiledPrototypenativeAbi, map[string]*bintree{}},
		"PrototypeNative.bin-runtime": &bintree{compiledPrototypenativeBinRuntime, map[string]*bintree{}},
		"Token.abi": &bintree{compiledTokenAbi, map[string]*bintree{}},
		"Token.bin-runtime": &bintree{compiledTokenBinRuntime, map[string]*bintree{}},
		"thor.abi": &bintree{compiledThorAbi, map[string]*bintree{}},
		"thor.bin-runtime": &bintree{compiledThorBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

