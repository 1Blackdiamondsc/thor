// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/AuthorityNative.abi
// compiled/AuthorityNative.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/EnergyNative.abi
// compiled/EnergyNative.bin-runtime
// compiled/Executor.abi
// compiled/Executor.bin-runtime
// compiled/Extension.abi
// compiled/Extension.bin-runtime
// compiled/ExtensionNative.abi
// compiled/ExtensionNative.bin-runtime
// compiled/Measure.abi
// compiled/Measure.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// compiled/ParamsNative.abi
// compiled/ParamsNative.bin-runtime
// compiled/Prototype.abi
// compiled/Prototype.bin-runtime
// compiled/PrototypeNative.abi
// compiled/PrototypeNative.bin-runtime
// compiled/Token.abi
// compiled/Token.bin-runtime
// compiled/thor.abi
// compiled/thor.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x41\x6f\x83\x30\x0c\x85\xff\x8b\xcf\x39\x6d\x37\x6e\xfb\x01\xbb\xec\x5a\x21\x14\x88\xa9\x22\x81\x8d\x62\x87\x81\xaa\xfe\xf7\xa9\x15\x10\x3a\xb1\x76\x9d\xd6\x49\xbb\xb6\xf6\x7b\xdf\x7b\x49\xd8\x1d\xa0\x62\x12\xb5\xa4\x90\xd5\xb6\x11\x34\xe0\xa9\x8b\x2a\x90\xed\x0e\x40\xb6\x45\xc8\xa0\x10\xbf\x27\x0c\x60\x40\xc7\xee\xf4\x83\x75\x2e\xa0\x08\x1c\x73\x33\xcf\x04\x6c\xb9\x47\x30\xc0\x51\xa7\xfd\xdc\x40\x67\x47\x5b\x36\xb8\x68\x8b\x5a\xc5\xd7\xa8\xb6\xf4\x8d\xd7\x11\x32\x20\xa6\x79\x68\x91\xaf\x23\x55\xea\x99\xe0\x68\xd6\x7c\x1a\xe2\x1a\x2f\x79\xd7\x3e\x88\x5e\x58\x2f\xe8\xdb\xcc\xb7\xb1\x7a\x8f\xef\xf7\x02\xdd\xd5\x17\xe1\xf0\xdf\x90\xf7\xf8\x05\x71\xe3\x45\xd1\xa5\xdd\x92\xb9\x39\xfb\x4e\xff\x23\x39\x0e\xc2\x5b\xea\x69\xc8\x3b\x24\x3d\x25\x49\x32\xa3\xa2\x3c\x3f\xad\x87\x6c\xa5\xbe\xc7\xcf\x4e\x0f\xab\x27\x65\xc7\x01\xab\xa8\xe7\x08\x7f\x7d\x64\x3f\x78\x96\xa9\xb0\xe2\x5b\xdd\x17\x57\xca\x4f\x1d\x58\xe7\x1e\xf0\xbe\x2d\x31\x8d\x2d\x47\xd9\x4a\xea\xc9\xe1\x80\x6e\x3e\x98\x09\xe4\x5a\xee\x65\x63\x12\xbb\x7d\xbb\x52\xc0\x17\xb7\xba\xc4\xd8\x23\xe9\xaf\x13\x26\xb3\xb7\xf9\x83\x79\xe9\x97\x7f\x04\x00\x00\xff\xff\xc0\x4e\x73\x3a\x93\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\x57\x92\xe3\x38\x0c\x86\xaf\xf4\x23\x12\x3c\x0e\xe3\xfd\x8f\xb0\x45\x4a\x1e\x07\x79\x3c\xb3\xae\xed\x75\xbf\xa8\x21\x11\xe1\x43\xa2\x23\xe0\x50\x18\x3b\xa0\xe2\x04\x27\xc0\x86\x25\x97\x79\xfe\x1c\x03\x0e\x30\x8a\x03\x10\x83\x92\xbb\x70\x46\xe6\x8e\x11\x44\xba\xce\xb8\x58\x0a\xb8\x48\x9f\xda\xfb\xd4\x43\x1a\x7e\x48\x4b\x4d\x32\x84\xfc\x90\xd6\x74\x48\x1b\xd7\xc6\x63\xb6\x43\xda\xe3\x94\x8a\x36\xc4\xb0\x2d\x25\xae\x87\xb4\x37\x20\x6b\x8d\x43\xaa\xb0\x64\x75\xf9\x13\x98\xdd\xaa\x68\x80\x6c\xfb\x31\x2d\xdd\xe5\xb6\xe3\x09\x75\x80\x1c\xe5\x8c\x03\xb2\xa3\x35\xf2\xa5\xcb\x8b\xb9\x55\xe0\x51\x4b\xe6\xab\x96\x5c\x9d\xc0\xd3\xd6\xd7\x8b\x59\xc0\xe8\x55\xef\x82\x42\x1e\x6c\x6c\x94\x11\x94\xb1\x6c\x31\x40\x19\x53\x1e\x2d\x34\x79\x6b\xe1\xf7\x7e\x8a\xfb\xb2\x7c\xd7\x30\xf4\xaa\x61\xe6\x4f\x1a\x66\x7b\xf4\x3d\x2b\x19\x59\xd8\xce\xfd\x6b\x14\x42\xbe\xfc\x0e\x03\x19\x87\x84\x80\x32\x65\x64\x32\x5e\xa7\x1c\x8e\x25\x7b\x8e\x33\xae\x71\x92\xa4\xdf\x90\xd4\x92\x9f\xe2\x21\x6d\x7f\x9f\xb9\x20\xf2\x0c\x07\x1f\xb1\x41\x55\x96\x0e\x1d\x5b\xe7\xd2\x96\xf8\x6e\xe3\x55\x07\xb9\xc8\x55\x46\x1a\xcb\x26\x53\xb5\x64\xb8\x51\x4a\x13\xdc\x97\x1b\x15\x5f\xfe\x82\xae\x84\x63\xf3\x85\x06\x2f\x86\x19\x46\x82\x4c\x2e\x37\x5b\x99\x56\x6c\xb1\x19\x67\x5e\x99\xc8\xbc\xf8\x07\x2f\xd2\xa0\xa0\x4d\x2a\x05\xa4\x92\xdd\x08\x8e\xfe\x4c\xd0\xca\xa4\x5f\x6f\x97\xa5\x24\xfd\x78\x2f\xe3\x78\x3a\xbf\xdb\x7f\x7b\x0e\xd0\x92\x33\x82\xe8\x3c\x45\x2f\xf9\x33\x22\xb3\xba\x6b\x80\xc0\xec\x8f\x6f\xef\xcc\xb8\xe6\xa8\x70\xfb\x3f\x98\xdd\x6c\x7d\xc5\x8c\xe3\x35\xbe\x27\x66\xb9\x7e\xc3\xac\xd2\x95\xd9\xf9\x66\xbc\xf2\xba\xce\x90\xe0\x55\xdb\x69\xd6\x91\x5a\x2a\x4d\x58\xa3\x4f\xb5\xa0\xc6\xf0\x12\x5a\x4a\x95\x56\x75\xa4\x6e\xab\x56\x25\x47\x55\xae\x1e\x2b\x53\x33\x45\xb1\x92\xba\x12\x8d\xd5\x1f\x40\x46\x61\xc3\xd9\x05\x10\x5c\xeb\xde\x65\x12\x12\x46\x1b\x87\x3f\x41\xf7\xd9\xbf\x88\xdf\xa6\x3f\xf8\xcc\x8a\x2e\x0d\x7c\xc6\xbe\x79\xcb\x5b\xb6\x22\xf6\x81\xad\x68\xfe\x82\xad\xd8\x7c\x65\x9b\x61\xc8\x78\x9c\x6c\x69\x96\x2e\xa5\xfb\xe8\x3f\x5b\x7f\x9b\xef\x59\x85\x37\x8b\xbf\xaa\x90\x1f\xaa\x10\xcf\x75\x18\xe9\x95\x54\x2b\x9f\x48\xf5\xf1\x0d\xa9\xa9\x17\x52\x9c\x69\x9f\xf0\xdb\xee\x3c\x75\xbe\xad\x8a\x31\xd6\x60\x0d\x84\x9f\x99\xe6\x3f\xd7\xc5\x8a\xfb\x8d\xae\x8b\xe4\x38\xb1\xf7\x22\x1d\x11\xc4\x9f\xeb\x49\xed\xd3\x7c\xd3\xf4\xd7\xf3\x2d\xee\x94\xf4\xb5\xff\x8f\xad\xce\x3b\x7f\xeb\x49\x8f\x3d\x47\x6b\xe3\xad\xbd\xb8\x9e\x33\xe5\xc8\xc8\xc9\x56\x5e\xcd\x90\x65\x3d\x3d\x92\x7d\x4f\x94\x67\x73\xe8\xa4\x9f\xed\xb3\x15\xd5\xa4\xcf\xdb\x6f\xdf\xa2\x0c\xcf\xe7\xde\xd4\xfb\x61\x23\xaf\xbd\x68\x6c\xc7\x5e\xbc\x4e\xab\x35\xdd\xac\x9e\xde\x98\xac\xbb\x19\xd6\x7f\x0f\x9b\xc2\xa4\xbe\xdf\x14\xe0\xea\xde\xd6\xae\xff\x0f\x3b\x75\xdf\x0f\x76\xaf\xee\x3b\x4a\xe8\xbe\xcd\x9c\x9d\xbb\x6e\x0b\x41\xa0\x90\x8c\xe7\xdd\x7b\x78\xb2\x3a\xd8\xff\xed\x1e\xb1\x52\x3f\xd4\xa6\xd5\xf9\x45\x07\x5b\x7f\x9d\x9f\xb7\x3d\x62\x83\xdf\xd1\x8c\x5d\x39\xf9\xdd\x4e\x31\xf2\x4c\x69\xe6\x39\x53\x31\x52\xd1\xdc\x7a\xd3\x3a\xbd\x64\xb5\x9a\x7a\xd7\xc8\x62\x14\xb5\x51\x30\x1a\xf7\xd2\x9c\x73\x9d\xee\x5d\xdc\xa2\x76\x41\x41\x4b\xf9\x72\xab\xdd\xdb\x65\x57\x3e\x50\xc8\xcd\x39\x95\x54\x12\x0b\x2c\x18\x45\xbc\x78\xd5\xd4\x6a\x34\xd5\xa1\xa5\x34\x92\x48\xc3\x5c\xd7\x2d\x8b\x48\x28\x8d\x18\xd3\xa4\x39\xeb\x08\xe2\xa2\x9e\xf2\x8a\xbf\x17\x69\x0c\x70\xfe\x27\x00\x00\xff\xff\x5e\xec\x09\x8c\xa4\x0c\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x51\x6b\x83\x50\x0c\x85\xff\x4b\x9e\xef\xd3\xf6\xe6\x7b\x1f\xf7\x0b\x4a\x19\xa9\x37\x4a\xc0\x26\x72\x93\xeb\x2a\xa5\xff\x7d\xd4\x51\x5b\x66\x51\xca\x64\x6c\x8f\x92\x13\xfc\xce\xc9\xd1\xed\x09\x4a\x15\x73\x14\x87\xa2\xc2\xc6\x28\x00\x4b\x9b\xdd\xa0\xd8\x9e\x40\xf0\x40\x50\x80\x71\x2d\x94\x20\x80\xf7\xed\xe5\x19\x63\x4c\x64\x06\xe7\x30\x4a\x48\xa2\x26\xd3\x79\x11\x47\x12\x67\xef\x6f\xa2\x7d\xef\x64\xaf\x2f\x70\xde\x85\xab\x48\xd0\xb9\xa3\x77\x8c\x11\x02\x68\xf6\xef\x30\x77\xcb\xaa\xcd\xb0\xd9\x62\x8f\xfb\x86\x46\x07\xe6\xe8\xf4\x96\x1d\xf7\xdc\x5c\x5e\x57\x80\xa8\x5c\x45\xe3\x7a\x95\xa5\x74\x56\x19\x08\x6f\x29\x78\xca\xcf\x85\x30\x41\x67\xdb\x0c\x69\xd0\x9a\x0e\x3a\xa6\x8f\x45\xf6\xe7\x2f\x38\x81\x4f\x74\xd0\x8e\xfe\x44\xf4\x13\xb6\x9a\x7c\x73\xa4\x32\xfb\xd0\xb3\x59\xc0\x7b\x83\x2b\x85\xfb\xf3\x62\x08\x1d\xfd\x5f\x82\xd7\xb4\xc8\xfd\xd5\x88\x30\xe7\xe8\xd1\x70\xfc\x01\x3c\x1c\xae\xfc\x79\x2c\xf5\xab\xe2\x64\xbf\x74\xa0\xdd\x67\x00\x00\x00\xff\xff\x6b\x47\xa3\x3a\x7a\x05\x00\x00")

func compiledAuthoritynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeAbi,
		"compiled/AuthorityNative.abi",
	)
}

func compiledAuthoritynativeAbi() (*asset, error) {
	bytes, err := compiledAuthoritynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledAuthoritynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeBinRuntime,
		"compiled/AuthorityNative.bin-runtime",
	)
}

func compiledAuthoritynativeBinRuntime() (*asset, error) {
	bytes, err := compiledAuthoritynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xcb\xaa\x14\x31\x10\xfd\x97\x5a\x67\x25\x28\xd2\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\xdd\x5d\x2d\x81\xa4\x2a\x24\x95\x19\x9b\xcb\xfd\x77\x99\xb9\xfd\x42\xfb\xe5\x38\x32\xb3\xea\x86\x7a\x9e\x53\x75\x92\x3c\x3d\x43\x25\x9c\x14\x59\xa1\xd0\x98\xc9\x80\xe5\x90\x35\x41\xf1\x74\x30\xc0\xe8\x09\x8a\xd7\x8f\x01\xc9\xda\x99\x9e\x7b\x0b\x18\xd0\x36\x9c\xff\x92\x46\xcb\x3f\xe0\xe5\x60\x20\x60\x8b\xa5\x23\x28\x1a\x74\x89\x0c\x24\x45\xa5\xcf\x59\xb1\xb4\xce\x6a\x0b\x05\x84\x1c\x69\x0c\x6d\x32\x57\x6a\x85\xe1\xc5\x4c\xdb\xe9\xa2\x87\x7e\x86\xa2\xdf\x53\x20\xae\x29\x8e\x19\xb0\xae\x23\xa5\x74\x49\xd0\x3b\x1d\xd1\xe5\x49\x91\x6c\x59\xdf\xbc\x7d\x77\x69\xb0\x73\xc1\x10\xa2\x1c\x17\x90\xa5\x5c\x55\xe7\x94\x43\x82\x52\xc4\xed\x84\xc7\xc2\xbd\xd3\x16\xc8\x45\xce\x55\x14\xdd\xd7\x1c\x82\x6b\xb7\xa8\x9f\x42\xdb\x6e\xee\x68\xe9\xf4\x0f\xdc\x37\x51\xfc\x3a\xf1\x2a\xeb\x76\xf4\x92\x59\x57\x27\xa3\x11\x39\x35\x14\x3f\xbd\x16\x7b\xc0\xf1\xd4\x54\x59\x8f\x2e\xed\x99\xcd\xfb\x5b\xaa\xe2\xb7\x8e\x46\x5a\xe5\xc4\xb3\x92\x18\x7b\x2e\xd1\x21\x57\xf4\xa5\x99\x6f\xba\x33\xff\xd7\xbd\x5a\xe4\x33\xb5\xbe\x14\xf7\x48\x87\xcc\x0d\xd7\xf8\xae\x2b\x7c\x67\x29\xfb\xc7\x3e\x61\x3f\xe6\xc8\x54\xdf\xe1\x84\xfd\x6b\x1d\x9b\x3d\xf7\xdf\xe4\x72\x73\x4e\x4e\x9d\x9e\x67\xb0\x45\xf2\x68\xf9\x2c\xa6\xdb\x83\x44\x16\x6e\xbd\xe4\x34\xb7\x7c\x96\x6b\xfa\x49\x75\x4f\xc0\xf6\x2e\x2e\x04\x2c\xad\xe6\xe0\xde\x95\xde\xff\x1c\xf8\x36\xaa\xb5\x73\xa2\x23\xb1\x5e\x0d\x69\x65\x90\x0b\x11\xab\xef\x9a\xeb\x81\x7d\xb8\xbc\x73\xd0\xfd\x01\xec\xf0\x2b\x00\x00\xff\xff\x66\xc7\x72\x63\xff\x09\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x0b\x6e\xe3\x3c\x0f\xbc\x12\xdf\x22\x8f\x23\x59\xd2\xfd\x8f\xf0\x83\x92\xbd\xad\x9d\xb4\x7f\xd1\xdd\x2f\x41\x00\x87\xb6\xf9\x18\x72\x86\x32\x70\x30\x10\x50\x32\x00\x61\x43\x30\x04\x08\xd5\x62\x3c\xcf\x8f\xc1\x00\x03\x20\xa8\x06\x00\xac\x20\x68\xc6\x60\xb3\xf7\x01\xec\x88\xb2\xde\xa9\x5a\x1c\x8c\x21\x74\xd4\xd2\x78\x59\x91\x64\x5b\xd1\xd1\xa0\xf7\xbe\xad\x7a\x6c\x2b\x71\xf3\x42\x97\xd5\x79\x5b\x19\xf9\x18\x6a\x65\x5b\x6b\xdf\xd6\x02\x15\x9c\x78\x47\xc3\xee\xdb\x1a\xda\x3d\x9a\x9c\xd6\x19\xdb\x5a\x03\x34\x8e\xd6\x96\x95\x60\x6c\x6b\x6b\x19\x80\x4f\x2b\xd3\xb6\x76\x0f\x64\x3d\x76\x0e\x74\x65\xd6\xbb\xd1\xe8\x3c\xb6\xb5\xa0\x16\x6d\x59\xbd\xc3\xec\xda\x58\x1c\x50\xb3\xea\x6a\x5a\x3e\xec\xba\xd0\xab\x33\xdf\x09\x57\xcb\x77\x04\x1c\x14\x0d\x08\x1c\x9c\x94\x9c\x15\x1d\x9d\x01\xf7\x75\x60\x90\x73\x50\x40\xda\x02\x5d\x01\x23\x9f\x65\xe7\xf4\xac\xcd\x13\xe3\x33\xde\xc8\x0a\xd1\xf3\x2f\x3a\x3b\xa5\x97\xf4\x0d\x98\x77\x3b\x66\x4c\x85\xfd\x8d\xf5\xcb\x67\x03\x0c\x70\xa2\x9d\x59\x23\x5a\x56\xe9\x04\xbc\x73\x4b\xec\x97\x97\x1c\x00\x04\x80\x0a\x8c\x81\xe6\x7f\xbc\x07\x2a\xa4\xe7\xa0\xed\x7b\xcd\x0c\x3a\x04\x02\x07\x4c\xfe\x84\x09\x32\xbc\x60\x82\xe2\x19\xc5\xa0\x9e\x93\x04\xbc\xe6\x4d\xd1\x0c\x48\x38\xdf\xa3\x63\x7e\x46\x2c\x10\x15\x35\x11\xd3\xc4\x03\x23\xb3\xdb\xb9\x3c\xe2\x99\xbf\xc6\x2b\x89\x07\x33\xdf\x3d\xfe\xc4\x9b\xcf\x9f\x67\xef\x88\x96\xd8\xd2\x59\x89\xec\x4a\xb8\x4a\xc6\xfd\xf0\xd9\xe2\xd5\xe7\x41\x86\x20\xa8\xf7\x29\x99\x33\x20\x08\xed\x27\x99\x0e\x79\x5b\xf7\x57\x38\x67\xb4\x7a\xcb\x8b\x40\xbf\x98\x5e\x69\x70\x7f\x12\xeb\xaf\x7a\x2a\xa3\xdc\xfd\xf0\xf8\x6b\x74\x65\xf6\xbb\xcf\x2f\xfb\xaf\x7c\xdc\x9f\x2c\xfd\xe7\x88\x3d\xa2\x23\x68\x39\x3e\xf7\x6a\xf1\x07\x03\x62\x71\x04\x16\x57\xca\x54\x33\x55\x31\xb7\x59\x08\x7e\xf1\x59\x3a\xb1\x58\x1d\xbb\x03\x4b\x03\x92\xf1\x9b\x89\xd7\x95\x2c\x85\x20\x78\xe6\xee\x25\x59\xee\xaa\x4b\x4f\x94\x1c\x5d\x08\xdc\x02\x54\x3d\x35\x63\xe5\x19\xa8\x18\x1c\x12\x10\x9c\xf3\x56\xa6\x1f\xda\x06\x0e\x1d\x6d\x1c\xa5\x6b\xeb\x28\xb3\xa0\x50\xe9\x38\x5c\x26\xf7\x0e\x8c\x72\xc0\x2c\x8d\x28\x70\x68\x23\x80\x7a\xf8\x51\x0e\x6e\x41\x1a\xe4\x94\x93\x9a\x88\x54\xd6\x95\x57\xd0\x52\x0d\xd8\xa8\xe5\xcd\x67\xb6\x6b\x8f\x94\xc0\xe9\xd2\x4f\x45\xc1\x8f\xbd\x93\x3d\xbf\x36\x0f\xd0\xae\x1b\x04\x96\x96\x5e\xfa\xe3\x9c\x1b\x68\x61\x54\x1c\xb8\xa1\x9e\xbd\xe6\xc2\xf7\x5e\x6b\x9d\xf8\x71\xd7\x8b\x16\xee\xfb\x3e\x8f\x7d\x75\x3e\xf7\x49\xdf\xd2\x9e\x98\x9f\xea\xcb\xf1\x98\x9f\x64\xe8\xd2\xd9\x5d\xe1\xbd\x13\xe0\xb9\x27\x01\x96\x06\xbf\xef\x5e\xb0\x1b\x5a\xf6\x29\xf5\x7f\xf5\x0c\x09\x54\x9c\x10\x77\xc4\x7e\xdb\x2f\x6f\x62\xe8\x0f\x62\x94\xcf\x31\x72\x0f\xa9\x38\x67\xb7\x72\x2a\x92\x51\xd0\x5c\xf2\x9b\x53\x5e\x75\xef\x90\xd5\x41\xbe\xf4\x7e\x57\x88\x74\xd5\xba\x39\x50\xe6\x51\x8f\x5e\x3d\xf0\x37\xb3\x0e\x6b\xb2\x57\x57\xef\x55\xf1\xaa\x49\xfe\xf0\x60\xf5\x37\x90\x21\xd0\xf8\x8a\x18\x39\x07\x72\xb2\x70\x55\x9e\xf5\x45\x6a\xe6\x39\x89\x8e\x5e\x1e\x53\x21\x65\x7c\x33\x15\x12\xf4\x8b\xa9\x90\xea\x2f\x53\x71\x9b\xfc\xb7\x7a\x21\x97\x5e\xa8\x88\xcb\xfc\x2d\x7e\x4f\xbd\xc8\x3c\x96\x46\x0a\xf3\xdb\x8e\x3e\x38\xf9\x82\xbd\x60\x1e\xc0\xc4\xd3\x8b\x92\x69\x51\xe0\x3c\x15\x28\x36\xcf\x6a\x0b\xf6\x77\xd3\x8e\x86\xa2\x2d\x37\xf6\xd2\x5d\xbc\x4d\xed\xdb\x09\xfb\x5a\x11\x90\x6a\x21\xc6\xff\x58\x11\x9e\x91\xf3\x74\xf0\xff\xb9\x14\x10\xb2\xb7\x73\x9c\xbd\x4c\xbe\x7e\x60\xef\x78\x32\xd7\x8e\xa5\x15\x17\x4f\x64\xba\xb0\x8e\xfa\x4f\x79\xa2\x9f\x79\xb2\xd8\xb0\x4e\xd1\x5b\x49\xf4\xe4\xcb\x15\x39\xf9\x22\xe2\xfb\x94\x79\xf1\xe5\xc6\x96\x37\x98\x19\xda\x37\x7c\x31\xaa\xbf\xe0\x8b\x09\x3c\xf9\x72\xce\x8d\x49\xbf\x77\xe8\x42\xaf\xf6\xe1\xbd\xd0\xbf\x45\x4f\x7e\x82\xde\x15\xf9\x89\x1e\xbc\xa0\xe7\xfc\xc4\xae\xc9\x77\xd8\x1d\xfe\x3d\x76\xda\xfc\xe5\x64\x92\x3a\xfe\x6a\x2b\xb3\xf7\x49\x4a\xb5\x63\x1b\x74\x78\x34\x8b\x83\x1a\x98\xcf\x83\x8b\xf7\x5a\x43\xa9\xd5\x32\x53\x3d\xa5\x22\x1a\xf9\x54\xad\xd2\xa7\x12\x37\x1e\x33\xbd\x9e\xec\xa1\xc7\x99\xff\x71\xd2\xcf\xdd\xfe\x54\xb6\x32\x07\xb8\x3b\xe2\xf8\xa7\xfd\xf9\x62\x0b\x98\x2b\x14\xb2\x59\x24\x7f\x25\x0a\x98\x66\xa7\xae\x1c\xfe\x7e\x2f\x00\x54\x34\x35\x2a\xb5\xa4\x10\x81\x3a\x41\x23\x39\x88\xb4\x4f\x68\x73\x16\xae\xb5\xb5\x38\x66\x99\xb3\x7b\xad\x5d\xca\x10\x9d\xb3\x61\x1e\x66\xbc\x70\x6f\x63\xf8\x61\xed\xa8\x78\x54\x13\x1a\x0a\x40\xf1\xbf\x00\x00\x00\xff\xff\x95\xcc\x62\x06\x6c\x0f\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x41\x4b\x03\x31\x10\x85\xff\xcb\x3b\xe7\x24\xe8\x21\xc7\xde\x3d\xe9\xad\x2c\x32\xbb\x99\x4a\x20\x9d\x09\x9b\x99\xca\x52\xfa\xdf\xa5\xd2\x6d\x51\x16\x5a\xa4\xa0\xb7\x04\xde\x23\xdf\x47\xde\x7a\x8f\x41\xa5\x19\x89\x21\xda\xe8\x1c\x90\xa5\xba\x35\xc4\x75\x17\x20\xb4\x65\x44\x08\x59\xde\xf1\xdb\x3b\xdb\xab\x1a\x95\x17\xaf\xb5\x4c\x08\x50\xb7\x53\x76\x3f\x47\x11\x60\x53\x3d\x9e\x3c\x8b\x3d\x3c\x3e\xe1\xd0\x05\x54\x9a\xa8\x2f\x8c\xb8\xa1\xd2\x38\xa0\x19\x19\x3f\xbb\x51\x9f\x4b\xb6\x09\x11\xbb\xcc\x1f\x97\xee\xc6\x65\xb0\xac\x82\x43\xf8\x0d\xe0\xca\x47\xe1\xf4\x07\x80\xa7\xf6\x99\xf0\xfc\x2a\xa5\x34\x5e\xda\xc7\x1b\xb7\xf6\x55\x9e\x03\x5b\x75\xb1\x65\xb8\xef\x92\xcd\xfb\x15\x15\x92\x81\xaf\x09\xf6\xaa\xe5\x46\x3b\x51\x99\x43\xff\xc1\x91\x52\x5a\x72\xbc\xb7\xca\x8f\x3d\x5d\x33\x59\xda\xdb\x8d\x5f\x71\x9f\xad\x75\x9f\x01\x00\x00\xff\xff\xb9\x70\x8c\x04\xaf\x03\x00\x00")

func compiledEnergynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeAbi,
		"compiled/EnergyNative.abi",
	)
}

func compiledEnergynativeAbi() (*asset, error) {
	bytes, err := compiledEnergynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledEnergynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeBinRuntime,
		"compiled/EnergyNative.bin-runtime",
	)
}

func compiledEnergynativeBinRuntime() (*asset, error) {
	bytes, err := compiledEnergynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledExecutorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorAbi,
		"compiled/Executor.abi",
	)
}

func compiledExecutorAbi() (*asset, error) {
	bytes, err := compiledExecutorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x09\x01\x03\x31\x08\x00\x41\x4b\x1b\xfe\xc8\xa1\x1c\xf1\x2f\xa1\x13\x14\x81\xe1\x12\x40\xf1\x3e\xe8\x13\x1e\x92\x9d\x9d\xa2\x78\x09\x3d\x2a\xb0\x35\x72\xd3\x56\x8f\x7c\xfa\xf3\xee\x3a\xee\xcb\x4c\xdc\x9f\xe4\x5a\x73\x5c\x53\x87\xb1\x30\xed\x57\x9b\xde\x0f\xbb\x0d\x72\xff\x01\x00\x00\xff\xff\xb6\x43\xa6\xbf\x6a\x00\x00\x00")

func compiledExecutorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBinRuntime,
		"compiled/Executor.bin-runtime",
	)
}

func compiledExecutorBinRuntime() (*asset, error) {
	bytes, err := compiledExecutorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\xb1\x6a\x33\x31\x10\x84\xdf\x65\x6b\x55\xf7\xff\x71\xa1\x3a\x4d\x8a\x80\x21\x81\x14\xe6\x08\xab\xbb\x35\x88\xd3\x69\x85\xb4\x7b\x89\x30\x7e\xf7\xe0\xe3\x62\x27\x4d\xec\x26\xc6\xe9\x54\xcc\x30\x1f\x83\x66\x37\x3b\xe8\x38\x16\xc1\x28\x60\x25\x2b\x19\xf0\x31\xa9\x14\xb0\x9b\xd6\x40\xc4\x91\xc0\x82\xb0\x60\x78\xd2\x94\x42\x05\x03\xac\xb2\x28\x76\x9f\x02\x30\x20\x35\x1d\x5e\xea\xa3\x34\x77\x2b\xd8\xb7\x06\x12\x56\x74\x81\xc0\x6e\x31\x14\x32\x50\x04\x85\x1e\x55\xd0\xf9\xe0\xa5\x82\x85\xc9\xd3\xdb\xc9\xbb\xd5\xd8\x89\xe7\x08\x7b\xf3\x03\xd6\x31\xf4\x75\xc2\xa0\x74\xb2\xbb\x2a\x54\xe6\xe0\x45\xe0\x02\x0e\xd4\xb8\x03\xce\x19\xea\xd9\xfa\xaf\xb9\x06\x75\xd4\xf1\x7b\x5b\x4b\xec\x91\x99\xbb\x61\x9d\x39\x71\xa1\x7c\x0e\x1b\xfb\x3e\x53\x29\xb7\x82\xfd\x70\xff\xc7\x7a\x7e\xf6\x23\x5d\xf2\xa1\x57\xff\x7f\x91\xf8\xcb\xcc\xde\xd7\x99\x27\xea\x5f\x38\x0f\x37\xb4\xb3\x8b\x9a\x9c\x2f\x44\xc7\xf9\x3a\x7d\xb6\x1f\x01\x00\x00\xff\xff\x49\x8c\x6e\x0d\xb8\x04\x00\x00")

func compiledExtensionAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionAbi,
		"compiled/Extension.abi",
	)
}

func compiledExtensionAbi() (*asset, error) {
	bytes, err := compiledExtensionAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x6b\x7a\xe4\x38\x08\xbc\x52\xf1\x14\x1c\x47\xb2\xac\xfb\x1f\x61\x3f\x2c\x77\xba\x93\xcc\xce\x66\x33\x0f\xf7\x1f\x1b\x21\xa0\x0a\x8a\xaf\x1d\x01\x87\xc2\xd8\x01\x15\x27\x38\x01\x9e\xd6\x5c\xd6\xfd\x38\x4e\x38\xc0\xe8\x0e\x40\x0c\x4a\xee\x42\x41\x8e\x39\x67\x10\xe9\x75\xe7\xb4\x16\x70\x91\xc6\x6a\x41\xba\xad\x69\xdb\xaa\x18\x3d\x3d\xb0\xad\xe7\xed\xeb\x3c\x87\xa1\x8d\xcb\x4a\x72\xfb\x56\xec\xd9\xe6\xdc\x56\x93\x6d\x3d\xc6\xf2\x39\x8f\x73\x5b\xe3\x8e\x30\x8f\xde\x0d\x27\x6f\x6b\x17\x6b\x36\xaa\xca\xc0\x9a\x36\x44\x03\x64\x95\xb1\x75\x6b\x4f\xbb\x5d\x28\xa3\xe0\xd2\x41\xe6\x75\x47\x11\x30\x4a\x0a\x36\x36\x4a\x04\x25\x20\x0e\x06\x28\xb1\xe4\x35\x5a\xa7\x0f\xd1\xee\xdb\xe5\x5d\x3c\x06\xc4\x02\xc1\x85\xc9\x41\x2b\xaa\x62\xcd\x3a\x51\x70\x58\x7d\x55\xd4\x34\xe3\xd0\x50\xe3\x5d\x4f\xaa\x78\x6a\x72\x56\x5e\x4d\x49\xbe\xfc\xee\x6a\xea\x3d\x24\xb8\x22\x87\x4a\x33\xa4\x66\xbb\xb0\xb0\xac\x74\xc3\xbb\x9f\xbf\x56\xbc\x3e\xe3\x27\x1c\xaf\x3d\x86\x8a\x91\x3b\x41\x78\xbe\x32\xd2\xde\x7c\xfe\xeb\x49\x24\x93\x7f\x81\x3f\xd2\x8f\xfc\xed\x6e\xfc\xb0\x9a\x38\xdf\x21\x21\x5b\x9f\x91\x34\xfa\xf1\xdd\x73\xbd\x22\xf1\xf6\xfd\x8a\xf3\xdf\xe6\x47\x3f\x30\x4d\xfd\xeb\xf5\x69\xde\x4c\x03\x82\xaf\xf3\x5c\xea\x1b\x90\x73\x0e\x9d\x97\x76\x4b\x8a\xf2\x72\xfa\xa6\x57\x70\xd0\x56\x36\xee\xd9\xbc\xbc\x11\x02\x29\xf9\x02\xd1\x02\x32\xc8\xee\xea\x19\xe7\xfb\xea\xad\x2f\x7a\x9e\x32\x5b\x93\xb9\xcf\xe5\xdc\x6f\xb7\xdf\xf5\xdb\xf1\xcb\xce\x08\xa2\xfb\x96\xc4\x87\x98\x94\x30\x24\x1e\xbd\x31\x6a\xab\xb7\x13\xbd\x73\xe0\x9b\xcf\xc6\x79\xab\x8f\x41\x41\x65\x09\xb9\x34\x59\xaa\x7b\xfb\x02\x52\x04\x29\x2e\x8f\x9c\x29\xd1\x52\x6a\x16\x42\x92\x1d\xaa\x89\xa4\x5b\x77\x56\xb3\x50\x8c\x85\xc4\xb0\x11\xf2\xc4\x55\x9d\xae\x3c\x20\xbb\x74\x89\xbb\x06\x50\x9d\x66\x2b\x7c\x0f\x66\x36\xe2\xf2\x4d\xd4\x46\x20\x7f\x70\x3a\x8f\xda\x64\xc1\x90\xbd\x41\x4a\xe3\x57\x94\x6b\x3b\x01\xe8\x10\x4a\xf2\x78\x8b\x9e\x64\xa8\xc8\xc9\x0f\xd6\xbf\xd2\xd9\x35\x7e\xd2\x59\xc1\xfa\x46\x67\x85\xed\x53\x67\xf9\xaa\x0e\xef\x36\xc8\xca\xc3\x88\x6a\x1e\x7f\xa5\xbb\x6f\x13\x1e\x52\x33\xbe\xfb\x6c\x9c\xb8\xbb\x4a\x82\x24\x97\x47\xae\xdc\x9d\xbf\xb6\x70\x5e\xcc\x25\x57\x5f\x13\xc1\xa5\xf3\x6b\x46\xda\xcf\x59\x7a\x22\x70\x8b\x18\x7c\x25\xfa\xe3\x08\x1e\xb9\x7e\x2f\x02\x5d\xda\x10\xc4\x7f\x03\xc1\x23\xd7\xef\x41\xf0\xff\xb7\x23\xb9\x58\xb6\x93\xfe\xec\x76\x7c\x72\xcb\xb2\x66\xa4\xb6\xbf\xc1\xed\x23\xd7\xaf\x73\x5b\xff\x63\xdc\x9c\x5b\x6f\xbd\xb1\xc0\x82\x31\x9a\xaa\x8e\x33\x8f\x3e\xd3\x8f\x71\xb6\x45\xe3\x08\x53\xf6\x68\x0e\xc2\x68\x8b\x07\x2b\x5a\x57\x56\xed\x06\x3a\x0f\x38\x93\x6b\x9e\x87\x4c\x02\x38\xff\x09\x00\x00\xff\xff\x00\xba\xb4\xa5\x54\x0a\x00\x00")

func compiledExtensionBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBinRuntime,
		"compiled/Extension.bin-runtime",
	)
}

func compiledExtensionBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x41\x4b\x03\x31\x10\x85\xff\xcb\x9c\x73\x5a\xb5\x87\x3d\x16\x2f\x1e\x94\x82\x82\x87\xb2\x94\xc9\xee\x54\xc2\x66\x27\x21\x33\x59\x09\xa5\xff\x5d\xba\x56\x45\x2d\xda\x53\xad\xb7\x5c\x5e\xde\xfb\x1e\xbc\x59\x6e\xa0\x0d\x2c\x8a\xac\x50\x6b\xca\x64\xc0\x71\xcc\x2a\x50\x2f\x1b\x03\x8c\x03\x41\x0d\x8c\xea\x46\x5a\x3d\x91\x3e\x24\x64\xc1\x56\x5d\xe0\x45\x0a\x23\x75\x8f\x29\xf4\x60\x20\x64\xdd\xab\x36\x6f\x22\x30\xa0\x25\xee\x5e\xd9\xb1\x56\x57\x33\xd8\x36\x06\x22\x16\xb4\x9e\xa0\x5e\xa3\x17\x32\x20\x8a\x4a\xb7\x59\xd1\x3a\xef\xb4\x40\x0d\xa3\xa3\xe7\x0f\xed\x3a\xf3\xe4\x06\x5b\xf3\x43\xd4\x77\x53\xce\xc3\x67\xdf\x8b\x6a\xb2\xfd\x0e\x12\x14\xfd\x7d\x1b\x12\xcd\xcb\xdd\x24\xfa\x15\x61\x76\x79\x5e\x04\x6e\x20\x51\x1c\xe2\x7f\x05\x98\xfb\xd0\xf6\x37\xd7\x47\xc5\xb7\x45\x49\xf6\x1f\x9d\x4b\xfe\x45\x0a\x31\x08\xa5\xa3\x00\xb0\xeb\x12\x89\x9c\x02\x60\x35\xa2\xcf\xf4\xa5\xbb\x03\x08\xd6\x63\x4f\x95\xdd\x2d\xf3\xcf\xdb\x3f\x3c\xd1\x9e\xf8\x75\xa7\x39\x46\x5f\x4e\x73\x66\x9a\x97\x00\x00\x00\xff\xff\x8e\x64\xfc\xb0\x13\x05\x00\x00")

func compiledExtensionnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeAbi,
		"compiled/ExtensionNative.abi",
	)
}

func compiledExtensionnativeAbi() (*asset, error) {
	bytes, err := compiledExtensionnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBinRuntime,
		"compiled/ExtensionNative.bin-runtime",
	)
}

func compiledExtensionnativeBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcd\x31\x0a\xc2\x40\x10\x85\xe1\xbb\xbc\x7a\x4e\xb0\x77\xf0\x04\x21\xc5\x24\x4c\x60\x20\xce\x2e\xbb\x6f\x94\x45\xbc\xbb\x58\xd9\x58\x88\xf5\x0f\xff\xb7\x3c\xb0\xd7\x18\xd4\x20\x0a\x7b\x9a\xc0\xa3\x25\x07\xca\xb2\x0a\x42\xaf\x86\x02\x8f\xb0\x0e\x41\x4d\x7e\x5a\xd3\xa9\xdb\x69\x28\x87\x9e\xc3\x04\x83\x4a\xbb\x24\x75\xf3\xd3\x39\x51\xd0\xb2\x1b\x04\x9c\xed\x3d\x39\x32\x76\x7a\x0d\x3c\xe5\x27\xb4\x26\xff\x41\x6f\x6e\xf7\x6f\xe8\xfa\x0a\x00\x00\xff\xff\x0a\x34\xa0\xdd\xeb\x00\x00\x00")

func compiledMeasureAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureAbi,
		"compiled/Measure.abi",
	)
}

func compiledMeasureAbi() (*asset, error) {
	bytes, err := compiledMeasureAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x01\x8a\x25\x21\x0c\x44\xaf\x54\x31\x56\x25\x1e\xc7\xb4\xed\xfd\x8f\xb0\x74\xf7\xdf\xff\x97\x65\x60\x60\x26\x22\x68\xa5\x94\xd4\x13\x12\x42\x07\x9b\x80\xee\xb2\xeb\x96\x0c\xf9\x7e\x55\x1c\x30\xfc\xb0\x04\xc0\x89\x6e\x92\xf7\xb9\x2a\xa2\x8d\x34\xeb\x42\x5f\x8c\x84\x3c\xe3\xf0\x55\xa5\x4b\x93\x31\x58\xd7\x9b\xc4\x5e\x2c\xef\x09\xa3\xc0\x6b\x9e\xb7\x4a\x08\xdc\x42\x38\xc5\x02\x3e\x3e\x1d\x5f\xfa\x78\xf9\xae\xed\x88\x77\xaa\xef\xea\xdf\x89\x6f\x3e\x96\xf6\x61\x62\xfa\x0d\x15\xb4\xb4\x87\x37\x4c\x37\xa5\xfb\x7f\xa4\xc3\xf3\x56\x32\x12\x5e\xc6\x27\xd7\xfa\x2f\x3f\xe7\xb6\xbf\xbd\xb3\x18\xbe\x9e\xae\x9f\xcf\xe9\xe5\x7a\x96\x80\x69\xa2\x5a\xcc\x98\xd1\x1c\xcc\x06\x4a\x2d\xbb\xaf\x6a\xcb\xe7\x88\xae\x3a\x0f\x8e\x7e\xb2\xd0\xfa\x18\xa7\x50\x83\x61\xfb\x30\x45\xc5\x1e\x83\x1b\xb6\xea\x64\xc4\x48\x3b\x26\xd0\xc6\x9f\x00\x00\x00\xff\xff\x7f\xd2\x0d\x5d\x3a\x02\x00\x00")

func compiledMeasureBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureBinRuntime,
		"compiled/Measure.bin-runtime",
	)
}

func compiledMeasureBinRuntime() (*asset, error) {
	bytes, err := compiledMeasureBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6a\xc3\x30\x0c\x86\xdf\xe5\x3f\xfb\xd4\xb1\x1d\xf2\x0e\x3b\xed\x58\xc2\x50\x12\x75\x98\xa5\x72\x88\xa4\xac\xa6\xe4\xdd\xc7\x4a\x12\xc3\xe8\x08\x65\x47\xe3\xcf\xbf\x3e\xa3\xff\x78\x45\x9b\x44\x8d\xc4\x50\x9d\xa8\x57\x0e\x88\x32\xb8\x29\xaa\xe3\x15\x42\x67\x46\x85\xf7\x4f\xce\x08\xb0\x3c\xfc\x9c\x9a\x6c\xac\x4f\x07\xcc\xa1\x00\x13\xf5\xce\x05\xf1\x28\x76\x78\x7e\xc1\x5c\x87\x15\x51\x36\x04\x24\xb7\x25\xbc\x0e\x18\x28\x53\xd3\xf3\x36\x58\x8d\x8c\x5f\xdd\xa8\x89\x7d\xb4\x8c\x0a\x92\x64\x85\xb6\xec\x93\x4b\x6b\x31\xc9\x6d\x7e\x91\xb7\xd1\x1f\x71\x2f\x62\x1f\xbf\xc4\xb6\x97\xf7\xbf\xb3\x2f\x3d\x45\xfe\x7a\x54\xb7\xe8\xf0\x85\x5b\xb7\x34\xee\x39\x51\xd7\x8d\xac\xfa\x7f\x27\x92\x24\xf9\x9c\x5c\xef\x15\x20\x4a\xc7\x17\xee\x56\xdf\xc5\xe2\xcf\x3a\x6c\xf8\x92\xb4\xf0\xfb\xed\x78\xbb\x2d\x61\xb9\xe7\x89\xc5\x30\xd7\xdf\x01\x00\x00\xff\xff\xfb\x8f\x43\xc8\x9d\x02\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x6d\x76\x34\x29\x08\x85\xb7\x74\x2f\x08\xc2\x72\xd4\xd2\xfd\x2f\x61\x8e\x55\xd5\xe9\xa4\x72\x32\x1f\x99\xd7\x1f\x7d\x5a\x28\xb8\xf0\x88\x3a\x02\x8e\x02\x13\x07\x8a\x3a\xe1\x04\xcc\xad\xba\xae\x7b\xd5\x01\xe2\x97\xcb\x01\xa8\xa1\xd0\x5d\xa5\xea\x2a\x59\x10\x64\x39\x55\xba\xd5\x80\x6b\xcc\xd6\xbc\x0d\x5c\xd6\x1a\x97\x75\x68\x19\x88\x69\x97\xb5\x89\x55\xeb\x3b\x5b\x60\x1d\xd6\xb5\x04\x68\xdb\xe3\xd5\xea\xdb\x6e\x67\xfd\xd5\xcf\x6e\xcc\x21\xfb\x97\xc0\xdc\x3d\xf5\xad\xf9\x8e\x8c\xf2\x3d\x32\x71\x47\x12\xec\x6d\xc7\x6c\x3a\x01\x63\x32\xc4\xc4\x98\x08\x26\xa0\x0e\x01\x98\x58\xfa\x39\x67\x9b\xdf\x73\xf6\xea\x84\x94\xf8\x9c\xad\x7e\xd0\xfd\xa7\x95\x48\xa1\xff\xac\x7d\x76\x17\x6f\x85\x7f\x9f\x99\xae\x7a\xd2\x25\xf2\x73\xd5\x1f\x35\x2e\x29\xe9\x2d\xb5\xfd\xf6\xf4\x83\xd7\x5c\x05\xc1\x28\x79\x4e\x99\x5c\x3b\xdd\xbb\x84\x51\x91\x74\x7d\x29\x25\x1d\xa5\x04\x42\xc1\xdc\xb1\x48\xc9\xdd\xb7\xec\xbe\xc1\x60\x68\xd4\x80\x76\xda\xcd\x9c\x1e\x5f\x99\x5b\x5b\x7c\x7b\xeb\xb0\xaa\xc7\xe5\xd7\x79\xfd\xbb\xbf\xc3\xab\xd3\x28\xbb\xd2\x5d\x4d\x58\xaa\xa1\x2e\x89\xa9\x52\x7c\x6d\xaf\x2d\x1b\x9c\x47\x46\xed\x54\x9d\x4b\x16\x53\x8b\x66\x17\x6b\xa3\x37\x6f\x36\x3d\x97\x30\x67\xa4\xaf\x91\x07\x6b\xa6\x18\x9e\xa7\xd5\x64\x6b\x7e\x99\x82\xd5\x0f\x1a\xe6\xfc\x33\x84\x3f\x98\x9e\xdc\x6e\xb2\x2f\x85\x4d\x56\x36\x59\xb9\xc8\xca\x26\x8b\x07\xdb\xfa\x60\x2b\xf4\xbf\x61\x2b\xd2\x7e\x66\xfb\xe2\x6b\xdc\x76\xd9\xb7\xfe\x8e\x2a\x78\xe4\xe4\x3e\xe3\x37\x9b\x5d\xcc\x7f\x99\x62\x57\x59\xc3\x51\x16\x2f\xbd\xe0\xfb\xed\xa2\xff\x9f\xd7\x0b\xf2\xe2\x8b\x4d\xef\xee\xe7\x9c\x4e\x8d\x93\xf2\x93\xd7\xf3\xfe\x7f\xe5\x35\xe4\x37\xbc\x8e\xe7\x7c\x33\xb1\xa7\xcb\x1c\x68\x74\x73\xa9\xad\xb6\x2a\x0a\x0b\x81\x1c\x35\x8a\x6a\x33\x4b\x63\x77\xae\xe8\x5d\x7b\x1b\x4d\x96\x0f\x8c\x95\xed\x40\xef\xa3\x5a\x2f\x1a\x1c\x23\xa6\xf7\x50\xe2\x70\xa9\x63\xf6\x05\x48\xfe\x15\x00\x00\xff\xff\x73\x9b\x5f\xac\x16\x06\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x4a\xc4\x40\x10\x44\xff\xa5\xcf\x73\x5a\xd1\x43\xee\x1e\xfd\x82\x25\x48\x27\xdb\x2b\x83\x63\x4f\x48\x57\x47\x87\x65\xff\x5d\x36\x98\x49\x44\x21\xe8\x71\x98\x6a\xde\xab\x3a\x5e\xa8\xcf\x6a\x60\x05\x35\x67\x4e\x26\x81\xa2\x0e\x0e\xa3\xe6\x78\x21\xe5\x37\xa1\x86\x5e\xa5\x50\x20\x94\xe1\xf6\xe8\x0a\xc4\xee\x0e\x74\x0d\xf5\x7f\xe2\xe4\xb2\x26\x3c\x2a\x0e\xf7\x0f\x74\x6d\xc3\x92\x50\x46\x9c\xe4\xd9\x04\x14\x28\x3b\xbe\x08\x6d\xa0\x81\x0b\x77\x49\x2a\xdd\xc0\x90\x27\x07\x77\x31\x45\x94\xdb\x6d\xd6\x25\x54\x11\x67\xd7\x1e\x31\xeb\x6c\xb1\x36\xc0\xe8\xdb\x02\x3f\xf8\x2f\x82\xc7\x0f\xe9\x1d\x79\xfc\xe6\x51\x9b\xac\x04\x3e\x9d\x46\x31\x9b\x4b\xec\x3b\x4e\x51\xde\xff\x6a\xb7\x33\xef\x6f\xf2\x7b\xd2\xdb\xe5\xff\x2f\xdd\x7e\x06\x00\x00\xff\xff\x31\x85\x28\xfa\x16\x02\x00\x00")

func compiledParamsnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeAbi,
		"compiled/ParamsNative.abi",
	)
}

func compiledParamsnativeAbi() (*asset, error) {
	bytes, err := compiledParamsnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBinRuntime,
		"compiled/ParamsNative.bin-runtime",
	)
}

func compiledParamsnativeBinRuntime() (*asset, error) {
	bytes, err := compiledParamsnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x6e\xdb\x30\x0c\xfd\x17\x62\x47\x9f\x3a\x6c\x07\x5f\x73\x4e\x37\x6c\xd8\xa9\xe8\x81\x96\xd9\x4c\xa8\x4c\x05\x22\x95\x42\x28\xfa\xef\x83\xb7\xc5\xd6\x1a\x3b\x75\x60\x2f\xf5\xd1\xd0\xa3\xf0\x9e\x1e\xf9\xcc\xbb\x67\x30\x9e\x45\x91\x15\x4a\x0d\x91\x0a\xb0\xbc\x8f\x2a\x50\xde\x3d\x03\x63\x43\x50\x82\x62\xd8\x91\x42\x01\x9a\xf6\xed\x37\xd6\x75\x20\x11\x78\xb9\x2f\x8e\x90\x0f\x3f\x51\x36\xbe\x26\x28\xc0\x47\x7d\x7d\x41\x5f\x5a\x79\xef\x7e\xd7\xed\x31\x61\xe5\x08\xca\x07\x74\x42\x05\x88\xa2\xd2\x36\x2a\x56\xd6\x59\x4d\x50\xc2\xc1\xd2\x53\x5f\xf8\x10\xd9\xa8\xf5\x0c\x2f\xc5\x52\x94\x4d\x0c\x81\x58\xbf\xef\x3d\x8b\x0f\x6f\x31\xcf\x6f\x58\x88\xfc\xdf\xea\x0b\xd8\x17\x1d\x24\x0a\x85\xf3\xf2\x02\x35\xfe\x40\x3f\xfe\xe0\x7a\x69\x93\xe8\xb3\xe7\x23\x68\x71\x07\x2e\xd1\x60\xe5\x84\xff\x15\x9a\x6a\x8e\x2f\x26\x50\x6d\x33\x48\xb4\xac\x37\x9f\x3e\xe7\x90\x40\xc6\x1f\x28\xa4\x6f\xa8\x34\x00\xcc\xe4\x0b\x69\xab\xff\xab\x43\x5e\xab\x87\xd2\x4d\xcf\x59\x1b\x27\x0e\xd9\xbb\xc7\xc3\x25\xcd\xd9\x22\x36\x47\xbb\x07\x64\x05\x6a\xd0\x32\xd5\x9b\xb1\x96\x58\x85\xce\x47\x4a\xd9\xfb\x27\x25\xf9\x78\xf3\x6f\x13\xaa\x0f\xb8\x1b\x49\xf6\x03\xba\x48\xc3\xf5\x2b\x18\xc6\xb7\x3d\xc4\xba\x5e\x5f\x42\xbe\xea\xb1\x93\xf1\x5f\x36\x6c\x56\xe0\xd3\xa4\x10\x11\x72\x64\x06\xff\xd6\x4b\x1b\x36\x47\x4a\x22\xf9\x12\x6e\xfd\x40\xa4\x75\x3a\xae\xa0\x60\xf1\x3c\xe8\xcf\x2b\xe7\xcd\xe3\x6d\x6c\xaa\x7c\xb4\xda\x7e\x5a\x57\x6c\xcc\x78\x81\xa9\x0a\x2b\x74\xc8\x66\x44\x21\x36\x3e\xf2\xca\x42\x3f\xe3\xde\xa0\xe8\xd8\x62\xd5\x9d\xfd\xbf\xcd\xf7\x0a\xee\x10\x53\xd8\xa5\x77\x33\x67\x4e\x86\x30\x3d\x6d\xcf\x78\x90\x6d\x87\xdb\x53\x1b\x17\x88\x92\xfb\x5f\x01\x00\x00\xff\xff\x16\x49\x10\x05\x16\x0e\x00\x00")

func compiledPrototypeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeAbi,
		"compiled/Prototype.abi",
	)
}

func compiledPrototypeAbi() (*asset, error) {
	bytes, err := compiledPrototypeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x09\x76\xe3\x48\x08\xbd\x12\x4b\x41\xc1\x71\x6a\xbd\xff\x11\xe6\x95\x96\xd8\x92\x65\x47\xb1\x95\xc9\xbc\x49\xbf\xee\x8e\x51\x99\xe5\xf3\x81\x42\x0a\x06\x0a\x01\x84\x14\x20\xb0\x22\x28\x02\x74\x90\xa8\xdc\x97\x9f\x58\x00\xe1\xcd\x1f\x05\x00\x16\x08\xa8\xca\x21\x00\x36\x4d\x6e\x88\x61\xb2\x22\x12\x0d\x94\x83\x85\xda\xb9\xc0\x24\x45\x4a\xb3\x54\xa3\x25\xcd\x79\x91\x6a\x9c\xa5\x31\x06\x67\x4f\x3c\x4b\x1d\x66\xa9\x87\x18\x22\xc6\x3c\x4b\xf3\x72\xd6\x23\x25\x82\xb4\x68\xa8\x6d\x91\x5a\x88\x51\x6c\x3e\x4b\xb0\xf8\x90\xa8\x53\x41\xf0\x59\xca\xcb\xd9\x94\xaa\x1b\x5a\x9d\xa5\x4a\xb3\x34\x6b\xac\x56\xd2\x1c\x05\x99\xcf\xd2\x52\x15\x38\x4b\x9b\xa5\x85\x67\x69\x4d\x41\x5a\xb5\x34\x4b\x5b\x5a\xa5\xee\x04\x2c\x93\x94\x71\x89\xa2\x81\x10\x52\x98\xcf\x32\xd7\x55\x6a\x66\x88\xb3\x5e\x5e\x71\x68\x31\x62\x69\x30\x47\xc1\x66\x8b\xb4\xa5\xa4\xda\x17\xbd\x99\x24\x4a\x1e\x19\x30\xe8\x55\x32\x07\x03\x94\x81\x05\xa0\xc4\x9b\x5c\x46\xce\x11\x55\x01\x50\x21\x8d\x9c\x0d\xd8\x78\x62\x84\xa0\x0e\x5d\xd5\x45\x87\xae\x00\x06\x82\x8e\x28\x28\x46\x42\x82\x0e\x86\x0e\xe3\x34\xc1\xc8\x48\xe7\x7b\x4b\xac\x8f\x96\x42\x7e\x61\x29\x68\xbf\xb7\xb4\x3f\xe9\xe0\x84\x7a\xc6\x72\xe4\x47\xcb\xd6\x8e\x2d\x1b\xa2\x3a\x28\xd0\x97\x17\x95\x87\x17\x00\xf7\x1a\xbd\x9c\x47\xed\x41\xa3\xd2\x84\xe0\x4d\x5b\xf9\x81\x7f\xc3\xca\xd0\xa4\x10\xc6\xbf\x08\x5a\x6c\xab\x6d\x30\xeb\x6d\xdf\xa2\xc9\x46\x1b\xe1\x23\x3f\x88\xca\x59\x6d\xb5\x6f\xb9\x72\x22\x5b\x14\x1e\xfd\x7f\x6a\xf1\x0b\x0d\x04\x0b\x79\xeb\xb9\xb6\x0f\xb2\x6e\x59\xb7\xda\x5c\x1e\xbd\x4a\xe9\x05\x7b\xbd\x6d\x63\x27\xe3\xd1\x59\x09\x8c\x01\x1d\x1d\x1c\x85\x56\x54\x06\x1a\x8f\x48\x94\xfe\x41\x04\xc9\xfa\x36\x82\x7e\x50\x7f\xdf\xb1\x6c\xd4\xb6\x22\xe4\x1c\x37\xba\x18\x1f\xf9\xff\x7d\x8e\xbe\xa6\xc8\xcc\xdd\xc9\xcb\x1a\x76\x9a\x83\xff\x48\xf3\x9d\xce\xaf\xc8\x6b\xa7\xad\xce\xa3\xfa\x7f\xd9\x79\x9a\xee\x34\x78\xf8\xd8\xab\x56\xb6\x8c\xe2\xfc\x09\x3f\x3b\xeb\x3d\xbb\x62\x17\xd7\xd4\x7b\x96\x77\xa7\xb3\xe1\x34\xf7\x37\xb6\x8d\xa7\xbe\x11\x8c\x00\x85\x7c\xee\xc1\xe0\xc8\xe0\xa8\xbc\x5a\x74\x1c\x7e\x19\x8c\x53\x3e\x31\xdc\x69\xb0\xdb\x61\xe5\xb5\xa1\x45\x8b\x06\x9c\x51\x96\xe8\xc3\x98\x69\xf7\xd1\x4b\xea\x78\x7b\x2a\x28\x91\xeb\xfc\x9c\xdb\xfc\xdb\x72\x6e\xfa\x33\xdd\x53\x70\xc8\x09\x0c\x71\xf9\xd6\x98\x88\x1b\x9d\xe8\xe4\x38\x7d\x63\x8b\x55\xa3\x14\x62\xe2\x7f\x11\xab\xc5\xe2\x15\x58\x31\x4f\x53\xa9\x1a\xdf\x98\xba\xf7\x06\x15\x83\x0d\x46\x85\x9e\x24\x0e\xbc\x76\xde\x12\x2a\x33\x06\xc9\x4b\x85\x0b\x6c\xfa\xdb\x0d\x2b\x46\x65\x04\xaf\x97\x62\x15\x0c\x17\xb4\x78\xa0\x35\x63\x47\x77\xd8\xcd\xa8\xad\xb6\x07\x6a\x61\xa0\xc6\x77\xa8\x6d\x30\x9b\x3c\xdf\xa2\x26\xfb\xfe\xbf\x61\xd8\xb8\xb1\xfc\x9c\x61\xe2\xb6\x67\xd8\x8a\x5f\x7a\x82\x9f\x67\x0b\xbd\x78\xfe\x0b\xfc\x56\xdb\x7b\xfc\xe0\x01\x3f\xe3\x1d\x7a\x0a\xaf\xea\x53\xe9\x9b\xfa\x7c\xac\xb9\xbf\xe1\xd1\x7d\x0d\x3e\xb0\xe9\x27\x35\xa8\xfb\xf9\xbf\xc5\x23\xf9\x1b\x6c\xd2\xdc\x1f\xfa\x15\x3b\xdd\xd0\x9b\x2a\x5d\x2b\x59\x38\x51\xe9\xda\xfa\x61\xa5\xf3\xae\xd2\xb5\xa7\x63\xa6\x52\x20\x6b\x3e\x3d\xba\x2e\x43\x72\xdf\x15\xa7\xdc\x8c\x29\x17\x7c\xda\x32\xc3\xfc\x89\xc7\xa7\x1b\x6b\x57\x3f\x46\x9e\xf4\x67\xac\x8d\xba\xaf\xcf\xfb\x2c\xc5\x58\x4e\xb0\x16\x76\x3b\xc7\xf2\x3f\x0d\x8c\x7b\x45\x63\x76\xc3\x71\x6b\x13\xfa\x9c\x93\xd2\x4c\x91\x30\x5f\xc1\xc9\x5b\x26\x4b\x0d\x9d\x08\xec\xef\x6a\x6d\xf5\xe0\xda\xb8\xba\x14\xcd\xd0\x2e\xee\x21\x87\x0c\xfd\xe2\xe4\x7d\x54\xab\xfd\x2b\xa2\x9a\x6a\xdb\x0a\x9c\x9a\xe2\x56\xeb\xa9\x29\x6e\xcd\xfe\x67\x53\xdc\x05\x5f\x54\xb4\xab\xbc\xd1\x77\x3d\xe6\xc7\x29\x3e\xe4\x16\x8f\xd1\x33\xc7\x4a\x29\xd2\x5f\xa0\xb7\xda\xfe\x7c\x86\xdf\xe2\xa9\x29\x64\x4c\xc9\x2f\x8d\x67\x73\xff\x1d\x1d\x72\xf6\xd1\xd8\x89\xc1\x69\x7a\xff\x35\x59\x75\x5a\xee\xc0\x01\xc6\xbc\x9b\xee\xe8\x2f\xea\x26\x09\xbd\x60\x40\x52\x3d\xcb\x80\x70\x63\x40\x8a\xbb\xfd\x75\xed\xf1\xa3\x8a\x61\x74\x77\x18\x73\xd8\x41\xc6\x96\x3e\xfe\xae\xd3\x38\xb9\x9f\xaa\xd8\x94\xf5\x54\xc5\xa6\x82\x47\x39\xfa\x8d\xb9\xf3\x64\xe2\xfc\xa4\x1a\x33\xbe\x9a\xaf\x99\xbe\x99\xaf\x87\xd5\x98\xc3\x3e\xbf\xeb\x9d\x3a\x87\x7e\xcc\x5f\x95\xa4\xb9\xea\x9f\xd4\xe3\x6a\xfb\xf3\x7a\x5c\xa4\x25\x4c\xd2\xf7\xf3\x7e\x5f\x77\xcc\x97\xe7\xbc\xe0\xab\xfa\x2b\x74\xba\xfe\xee\x72\x5e\xb8\x1c\x76\xe0\x12\xb6\xf3\x0b\xa1\x6c\xdf\x36\xff\x17\xf1\x49\x2f\xf1\xc9\x6f\xe1\x53\x0e\xf0\x99\x9f\x54\x3f\xae\x09\x10\x73\xb2\x76\xf1\x9e\xf9\x0c\x3b\xa3\xc9\x9f\x81\xd6\x0e\xcb\xd5\x8f\x37\x6e\xef\x4f\xe7\x55\x31\xa8\x22\x1c\x2f\x8d\xed\xd5\x66\xf2\xf5\xfe\x6e\xee\x02\xe1\xd9\x2d\x77\xf1\xeb\x2b\xd6\x9f\xdc\x07\xeb\xfe\xfd\xdf\x86\x37\xb5\xbe\xf3\x7e\xa2\xb6\x87\xf7\x13\x1e\x9c\x8f\x37\xf2\x0c\x0d\xcd\x42\xfa\x3d\xc6\xec\x71\x7c\xb6\x2d\xac\x9e\x5c\xbb\x2d\x80\xb8\x0b\xb4\x5f\xbc\xe5\xec\xe3\x58\x2d\x5e\xf1\x96\xef\x16\x07\x52\x15\xa0\xfe\x9b\x5b\xcf\xc9\x3c\xad\x9e\x5c\xb6\xff\xf4\x70\x6e\xff\xe9\x72\x6e\xff\xe9\xfa\x64\xff\xc1\x64\xf9\xaf\x6e\xf0\xab\xed\x4f\x6f\x0c\x00\xeb\x9c\x7a\x37\x8a\x84\x2a\x4a\x31\xc5\x14\x69\x34\x6a\x82\x5c\xc1\xdc\xab\x09\x34\x1c\xcb\x56\xcc\xc5\x6b\x16\xef\xc6\x29\xa0\x74\xd1\x92\x4c\x6a\x8b\x54\x38\x42\x8e\xa0\xea\xd4\x5a\x8f\x50\x08\x7b\x2a\x00\xe4\xff\x04\x00\x00\xff\xff\xe1\xe0\xba\xe4\x38\x20\x00\x00")

func compiledPrototypeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBinRuntime,
		"compiled/Prototype.bin-runtime",
	)
}

func compiledPrototypeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x41\x6f\xd3\x40\x10\x85\xff\xcb\x9e\x7d\x2a\x82\x43\x6e\x90\x73\x0a\x02\xf5\x54\x45\x68\x6c\xbf\x86\x55\xd7\xb3\xd1\xce\xac\x2b\xab\xea\x7f\x47\x46\xc4\x6e\xf1\x26\xb8\xd8\x34\xce\x31\xca\x78\xfd\xbe\x7d\x6f\xc6\x73\xfb\x68\x0a\xcf\xa2\xc4\x6a\x56\x77\xe4\x04\x99\xb1\xbc\x8f\x2a\x66\x75\xfb\x68\x98\x2a\x98\x95\x51\x0a\x3b\xa8\xc9\x8c\x36\xfb\xf6\x37\x95\x65\x80\x88\x79\xca\xba\x92\x82\x9c\x43\x38\x59\xd2\x40\x3e\x87\x6b\xdf\xd7\xe4\xde\x3b\xf3\xb4\xcd\x0e\x05\x4c\x6a\x6b\x7c\x97\xbd\x67\xf1\xed\x59\x3e\xea\x6f\x29\xdb\xcc\xec\xa9\xa1\xdc\xa1\x93\x29\x4a\x8a\x4d\x54\xca\xad\xb3\xda\xb4\xcf\x7b\x3e\x14\x75\xef\xb8\x8b\x5c\xa8\xf5\xfc\x4b\x48\x8f\xaa\x21\xbe\x8e\x74\xa0\xb2\x22\x51\xbc\x14\xd9\x9d\xd2\xfd\x97\x38\xe5\xef\x18\xb5\xc5\xc3\xfc\x00\xbd\x0f\xb9\xf3\xc5\xfd\x75\xac\xf2\xe7\x12\xa3\x65\x7d\x77\x95\xe0\x04\x23\xec\x9a\x8f\xfa\xa9\x7d\x2a\x8d\x4b\x95\x8f\xac\x2f\xcf\xba\x7a\xff\x61\x4e\xdc\x29\xd1\x64\x3c\x6c\x4e\x18\xf2\x47\xf8\xa0\x9b\xa1\xb3\x73\xc7\x6f\x52\xa7\x05\x94\x36\x75\xdb\x7d\x49\x40\xe1\x6b\x84\xe6\x2b\x29\xd2\xb6\x0c\xa0\x6f\x04\xe1\x8b\x23\x5e\x56\xd7\xf5\x48\x51\xc6\xf9\x67\xe5\x46\x8e\xb5\x65\x62\xf2\x9c\xab\x1b\x07\xba\x7f\x90\xac\x7d\x89\xcb\x13\x5e\xc4\x10\xc0\xfa\x2d\x31\xb4\x13\xfa\x97\x35\x09\xfb\x2f\xcd\x88\x5c\x8d\x24\x9c\xdb\xa1\x29\xa3\xe2\x15\x7c\x02\x87\x22\xe9\xe2\x92\x66\xdf\xd8\x29\x40\x65\x39\x18\x03\x97\xc8\x11\x50\xf9\x1a\xff\x1d\xe5\xcd\x96\x89\x9c\x1c\x71\x81\x73\x6f\x13\x13\x78\xef\xd1\x3c\xeb\xf5\x46\x21\x2d\xe8\xbf\xde\x87\xa8\x0f\xb4\x3b\x7d\x1f\x35\xb9\x88\xc4\x3b\x17\x71\x1d\x63\x83\xdc\xd6\xad\x0f\x8b\x4b\x02\x32\xa0\x22\xcb\x28\xd7\xc7\x96\x9b\x25\x7d\xf2\x62\x6a\x57\x9a\x77\x3f\x3b\xbf\xb3\xe9\xa0\x1f\x4b\xf0\x1b\x46\x77\xfb\x33\x00\x00\xff\xff\x30\x62\xdf\xaf\xb4\x0e\x00\x00")

func compiledPrototypenativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeAbi,
		"compiled/PrototypeNative.abi",
	)
}

func compiledPrototypenativeAbi() (*asset, error) {
	bytes, err := compiledPrototypenativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBinRuntime,
		"compiled/PrototypeNative.bin-runtime",
	)
}

func compiledPrototypenativeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypenativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x3f\x4f\xc3\x30\x10\xc5\xbf\xcb\xcd\x99\x90\x60\xc8\xc6\xc2\x86\x18\x60\xab\x2a\x74\x49\x2e\xc8\x92\x73\x67\xd9\xe7\x94\xa8\xea\x77\x47\x2d\x69\x5c\x41\xfe\x54\x05\x04\xac\xf1\x3b\xdf\x7b\xfe\x5d\xec\xd5\x16\x4a\xe1\xa0\xc8\x0a\x79\x8d\x36\x50\x06\x86\x5d\xd4\x00\xf9\x6a\x0b\x8c\x0d\x41\x0e\xcf\xc1\x11\x57\xe4\x21\x03\xed\xdc\xfe\x0b\x56\x95\xa7\x10\x60\x97\x25\x51\x8b\x36\x52\x92\x44\xc3\x7a\x75\x7d\x03\xbb\x75\x76\x94\xa0\x73\x5e\xda\xbd\x46\xa2\x7e\x6c\x12\x62\x59\xee\xb7\x1c\x36\x28\x44\xec\xa1\xda\x61\x87\x85\xa5\xc1\x60\x50\x54\xba\x8f\x8a\x85\xb1\x46\x3b\xc8\x81\x85\x8f\xa2\xa1\xbc\x8e\x5c\xaa\x11\x3e\x78\x4c\x21\xd5\xc7\xd3\x8c\xc9\x9c\x8a\xa2\x7d\x8c\xce\xd9\x6e\xca\x60\xbf\x36\x12\x70\xd9\x62\x6b\x68\xb3\x68\x6e\x9a\x40\xed\xa5\x99\x3f\x7e\x95\xaf\xe2\x51\x8f\x1c\x6a\xf2\x77\xef\xbd\xfe\x0c\xa3\x94\x41\x36\x3c\x3a\x85\x29\x43\x81\x16\xb9\xa4\x87\x7a\x3c\x40\xbf\xfc\x4b\x10\xbf\x0f\xd1\xff\xc2\x93\x9d\x73\x93\x9c\x5c\x13\xd6\xca\xa6\xc7\x34\x92\xd2\x53\x83\x86\x0d\xbf\xfc\x00\x45\x64\xe1\xae\x91\x18\xc6\x30\x1a\xae\xe8\x95\xaa\xe3\x01\x2c\xff\x9a\x13\x05\x53\x63\x30\xc8\xfb\xd6\xe7\x8f\xc5\x53\x1a\x8b\x5e\x44\x2d\xb1\x5e\x1c\x69\x06\xe4\x44\xc5\xec\x0b\x71\x79\xb0\xdb\xc3\x8b\x81\xf6\x53\xb0\xf5\x5b\x00\x00\x00\xff\xff\x73\x6f\x06\xdc\xba\x06\x00\x00")

func compiledTokenAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenAbi,
		"compiled/Token.abi",
	)
}

func compiledTokenAbi() (*asset, error) {
	bytes, err := compiledTokenAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledTokenBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenBinRuntime,
		"compiled/Token.bin-runtime",
	)
}

func compiledTokenBinRuntime() (*asset, error) {
	bytes, err := compiledTokenBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledThorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xcd\x4a\xc3\x50\x10\x85\xdf\x65\x70\x79\x57\x82\x2e\xb2\xf3\x01\xb4\xd2\xe2\xaa\x74\x71\xcd\x1c\x21\x90\xcc\x84\x99\xb9\xd1\x50\xfa\xee\x52\x2c\xd6\x94\x1a\xf0\xa7\xdb\xe1\xcc\x39\x1f\xdf\x7a\x4b\x59\x54\xc6\x4e\x8b\x53\xf5\x92\x5b\x47\xa2\x46\xfa\x12\x4e\xd5\x7a\x4b\x8d\x30\xde\xc0\x54\x85\x15\x24\x92\xdc\x81\x2a\x12\xbc\xde\x67\x0f\x18\x25\x8a\xb1\xdf\x9f\x32\xb3\xc1\x9d\x76\x9b\xcf\xd4\xd5\x0a\x71\x1a\xc3\x00\x09\xda\xa5\x5f\xcd\x16\x3f\xbb\x98\xbe\xe4\x0f\x55\x87\x87\xcc\xbc\xb0\x25\x3a\x1d\x70\xfc\x7b\x56\x6d\x27\x98\x77\xcc\x1f\x99\x27\xff\x0b\xea\x74\xba\x36\x70\x13\xc7\xb6\xd2\x48\x5c\xdf\xdc\xce\xd1\x1a\x6a\x1d\x60\xe3\x32\x07\xce\x3c\x4e\xc5\xee\x59\x1f\xdb\x2c\xff\xa4\xd6\x7b\x15\xd7\x9f\xd9\x1d\xe1\x0b\x7b\xd0\x19\xb3\xab\xd3\xd6\x0b\x31\x4e\xd4\xb4\xa8\xe3\xbb\xe1\xcd\x7b\x00\x00\x00\xff\xff\xa5\x6f\x0a\x97\xf0\x02\x00\x00")

func compiledThorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledThorAbi,
		"compiled/thor.abi",
	)
}

func compiledThorAbi() (*asset, error) {
	bytes, err := compiledThorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/thor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledThorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xc0\x09\x01\x43\x21\x0c\x03\x50\x4b\xa1\x57\xf2\xe5\x00\x2d\xfe\x25\xcc\xc2\x1e\x1d\x7f\x72\xac\x28\x08\x85\x40\x5a\x01\x10\x5e\x03\x7b\x55\x96\x71\x73\xd3\x1c\x29\xc3\x19\xb2\xe7\x5c\x9f\x64\xbf\x8e\x17\xda\x3e\x31\xdc\x4b\xef\xba\x45\x67\x3a\xee\x77\x29\xf6\xaa\x32\xf7\x65\x32\x86\x24\xbb\x12\x60\xdf\x2f\x00\x00\xff\xff\xa0\xab\xf0\x8e\x98\x00\x00\x00")

func compiledThorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledThorBinRuntime,
		"compiled/thor.bin-runtime",
	)
}

func compiledThorBinRuntime() (*asset, error) {
	bytes, err := compiledThorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/thor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/AuthorityNative.abi": compiledAuthoritynativeAbi,
	"compiled/AuthorityNative.bin-runtime": compiledAuthoritynativeBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/EnergyNative.abi": compiledEnergynativeAbi,
	"compiled/EnergyNative.bin-runtime": compiledEnergynativeBinRuntime,
	"compiled/Executor.abi": compiledExecutorAbi,
	"compiled/Executor.bin-runtime": compiledExecutorBinRuntime,
	"compiled/Extension.abi": compiledExtensionAbi,
	"compiled/Extension.bin-runtime": compiledExtensionBinRuntime,
	"compiled/ExtensionNative.abi": compiledExtensionnativeAbi,
	"compiled/ExtensionNative.bin-runtime": compiledExtensionnativeBinRuntime,
	"compiled/Measure.abi": compiledMeasureAbi,
	"compiled/Measure.bin-runtime": compiledMeasureBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ParamsNative.abi": compiledParamsnativeAbi,
	"compiled/ParamsNative.bin-runtime": compiledParamsnativeBinRuntime,
	"compiled/Prototype.abi": compiledPrototypeAbi,
	"compiled/Prototype.bin-runtime": compiledPrototypeBinRuntime,
	"compiled/PrototypeNative.abi": compiledPrototypenativeAbi,
	"compiled/PrototypeNative.bin-runtime": compiledPrototypenativeBinRuntime,
	"compiled/Token.abi": compiledTokenAbi,
	"compiled/Token.bin-runtime": compiledTokenBinRuntime,
	"compiled/thor.abi": compiledThorAbi,
	"compiled/thor.bin-runtime": compiledThorBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"AuthorityNative.abi": &bintree{compiledAuthoritynativeAbi, map[string]*bintree{}},
		"AuthorityNative.bin-runtime": &bintree{compiledAuthoritynativeBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"EnergyNative.abi": &bintree{compiledEnergynativeAbi, map[string]*bintree{}},
		"EnergyNative.bin-runtime": &bintree{compiledEnergynativeBinRuntime, map[string]*bintree{}},
		"Executor.abi": &bintree{compiledExecutorAbi, map[string]*bintree{}},
		"Executor.bin-runtime": &bintree{compiledExecutorBinRuntime, map[string]*bintree{}},
		"Extension.abi": &bintree{compiledExtensionAbi, map[string]*bintree{}},
		"Extension.bin-runtime": &bintree{compiledExtensionBinRuntime, map[string]*bintree{}},
		"ExtensionNative.abi": &bintree{compiledExtensionnativeAbi, map[string]*bintree{}},
		"ExtensionNative.bin-runtime": &bintree{compiledExtensionnativeBinRuntime, map[string]*bintree{}},
		"Measure.abi": &bintree{compiledMeasureAbi, map[string]*bintree{}},
		"Measure.bin-runtime": &bintree{compiledMeasureBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ParamsNative.abi": &bintree{compiledParamsnativeAbi, map[string]*bintree{}},
		"ParamsNative.bin-runtime": &bintree{compiledParamsnativeBinRuntime, map[string]*bintree{}},
		"Prototype.abi": &bintree{compiledPrototypeAbi, map[string]*bintree{}},
		"Prototype.bin-runtime": &bintree{compiledPrototypeBinRuntime, map[string]*bintree{}},
		"PrototypeNative.abi": &bintree{compiledPrototypenativeAbi, map[string]*bintree{}},
		"PrototypeNative.bin-runtime": &bintree{compiledPrototypenativeBinRuntime, map[string]*bintree{}},
		"Token.abi": &bintree{compiledTokenAbi, map[string]*bintree{}},
		"Token.bin-runtime": &bintree{compiledTokenBinRuntime, map[string]*bintree{}},
		"thor.abi": &bintree{compiledThorAbi, map[string]*bintree{}},
		"thor.bin-runtime": &bintree{compiledThorBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

