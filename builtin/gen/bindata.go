// Code generated by go-bindata.
// sources:
// compiled/Authority.abi
// compiled/Authority.bin-runtime
// compiled/AuthorityNative.abi
// compiled/AuthorityNative.bin-runtime
// compiled/Energy.abi
// compiled/Energy.bin-runtime
// compiled/EnergyNative.abi
// compiled/EnergyNative.bin-runtime
// compiled/Executor.abi
// compiled/Executor.bin-runtime
// compiled/Extension.abi
// compiled/Extension.bin-runtime
// compiled/ExtensionNative.abi
// compiled/ExtensionNative.bin-runtime
// compiled/Params.abi
// compiled/Params.bin-runtime
// compiled/ParamsNative.abi
// compiled/ParamsNative.bin-runtime
// compiled/Prototype.abi
// compiled/Prototype.bin-runtime
// compiled/PrototypeInterface.abi
// compiled/PrototypeInterface.bin-runtime
// compiled/PrototypeNative.abi
// compiled/PrototypeNative.bin-runtime
// compiled/Token.abi
// compiled/Token.bin-runtime
// compiled/proto.abi
// compiled/proto.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledAuthorityAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x41\x6f\x83\x30\x0c\x85\xff\x8b\xcf\x39\x6d\x37\x6e\xfb\x01\xbb\xec\x5a\x21\x14\x88\xa9\x22\x81\x8d\x62\x87\x81\xaa\xfe\xf7\xa9\x15\x10\x3a\xb1\x76\x9d\xd6\x49\xbb\xb6\xf6\x7b\xdf\x7b\x49\xd8\x1d\xa0\x62\x12\xb5\xa4\x90\xd5\xb6\x11\x34\xe0\xa9\x8b\x2a\x90\xed\x0e\x40\xb6\x45\xc8\xa0\x10\xbf\x27\x0c\x60\x40\xc7\xee\xf4\x83\x75\x2e\xa0\x08\x1c\x73\x33\xcf\x04\x6c\xb9\x47\x30\xc0\x51\xa7\xfd\xdc\x40\x67\x47\x5b\x36\xb8\x68\x8b\x5a\xc5\xd7\xa8\xb6\xf4\x8d\xd7\x11\x32\x20\xa6\x79\x68\x91\xaf\x23\x55\xea\x99\xe0\x68\xd6\x7c\x1a\xe2\x1a\x2f\x79\xd7\x3e\x88\x5e\x58\x2f\xe8\xdb\xcc\xb7\xb1\x7a\x8f\xef\xf7\x02\xdd\xd5\x17\xe1\xf0\xdf\x90\xf7\xf8\x05\x71\xe3\x45\xd1\xa5\xdd\x92\xb9\x39\xfb\x4e\xff\x23\x39\x0e\xc2\x5b\xea\x69\xc8\x3b\x24\x3d\x25\x49\x32\xa3\xa2\x3c\x3f\xad\x87\x6c\xa5\xbe\xc7\xcf\x4e\x0f\xab\x27\x65\xc7\x01\xab\xa8\xe7\x08\x7f\x7d\x64\x3f\x78\x96\xa9\xb0\xe2\x5b\xdd\x17\x57\xca\x4f\x1d\x58\xe7\x1e\xf0\xbe\x2d\x31\x8d\x2d\x47\xd9\x4a\xea\xc9\xe1\x80\x6e\x3e\x98\x09\xe4\x5a\xee\x65\x63\x12\xbb\x7d\xbb\x52\xc0\x17\xb7\xba\xc4\xd8\x23\xe9\xaf\x13\x26\xb3\xb7\xf9\x83\x79\xe9\x97\x7f\x04\x00\x00\xff\xff\xc0\x4e\x73\x3a\x93\x05\x00\x00")

func compiledAuthorityAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityAbi,
		"compiled/Authority.abi",
	)
}

func compiledAuthorityAbi() (*asset, error) {
	bytes, err := compiledAuthorityAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthorityBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x0b\x6e\xe3\x3c\x0f\xbc\xd2\xf0\x29\xea\x38\x7a\xde\xff\x08\x3f\x68\xd7\x49\x36\x69\x93\x2e\xf0\xe3\xdb\x1a\x0d\x12\x7a\x44\x73\x86\x23\x5a\x8e\xbc\x14\xc6\x0e\xa8\x38\xc1\x09\xb0\x65\xc5\x65\x7f\xfd\x39\x16\x1c\x60\x34\x07\x20\x06\x25\x77\xe1\x8a\xca\x13\x2b\x88\x34\xd7\xb8\x58\x09\xb8\xc8\xdc\x3a\xe7\xd6\x33\x1a\x7a\x46\x5b\x2f\xb2\x84\xfc\x8c\xf6\x2f\xec\xe0\x3e\x78\xed\x71\x46\x27\x7f\x45\x45\x07\x62\xd9\x11\x25\x2e\x67\x74\x0e\xa0\x6a\x8f\x33\x2a\xcd\x8a\xf5\xac\x27\xb0\xa7\x75\x51\xb2\xa3\x8a\xac\xfc\x16\x3d\x2a\x48\x66\xe4\x68\x5f\x1c\x20\x07\x53\x23\xcf\x3c\xce\xe6\xd6\x81\x7b\x86\xd8\xcf\x19\x6a\x71\x02\xf7\x9a\xc8\x43\x2b\x7a\xce\x58\x51\x89\x3c\x28\x55\xe4\xe3\x5e\xa2\x02\x95\xf2\xde\x96\x7b\xf6\xfe\x52\x5f\x2d\x6f\xea\x13\x46\x3e\xf5\x5a\x3d\xe7\xf3\xea\xfd\x52\xcb\xe3\xea\xfa\x50\x73\x15\x32\xb2\x50\x7b\xd1\x23\x1b\x49\x9e\x95\x87\xe2\xe0\xa0\x88\xe3\x7b\xa5\x64\x66\x5c\x91\x6b\xd3\x29\x21\x27\x22\x90\x77\x40\xf5\x7b\x9e\x24\xfc\xad\x8a\x2a\xfc\xc0\x87\xd4\x7e\xdb\xad\x20\xf2\x0a\x07\x9f\xdc\xa0\x2a\x99\x41\x4b\x3b\x18\x66\x27\xdb\x3d\xff\x73\x0e\x72\x91\xd7\x18\x69\xa4\xdb\x69\x87\x15\x83\xe0\x15\xe1\x02\x9e\xa1\x8e\x7e\xd4\x85\xab\xfb\xd9\xe3\x53\xa7\xfc\x75\xdb\x1d\xb7\x1d\x13\x9a\xa0\xd3\x0f\xdf\x39\x25\x39\x05\x9f\x39\x58\x71\x64\xbc\x3c\x13\x02\x09\x3a\x54\x29\x01\xe9\x87\xf2\x04\x9a\xfd\x49\x2b\x1e\x6e\x0d\xb2\xe9\x42\xac\xf1\x88\x30\xe4\x75\x65\xb5\xec\x14\xc8\xec\xca\xc7\x90\x47\xf4\xf7\xec\xb9\xd7\xe8\x70\xfb\xe7\xec\xd9\xda\x07\xf6\xec\xfd\x33\xfb\x13\x19\x78\x44\xc6\x37\xcc\xcb\xee\xab\x8c\xd2\x86\xb0\xc6\xdc\x6a\x41\x83\xe1\x2d\xb4\xb5\x2e\xa3\xeb\x2a\xd3\x98\xba\x49\x8d\xae\xdc\x3d\xa8\x58\xd9\x25\x9a\xb5\x32\x95\x68\x5d\xea\x3c\xce\x81\xc6\x86\x2f\x77\xfe\xe0\xb6\x4d\x28\x58\x63\xfd\xa4\x76\xd0\x5d\xe5\xd4\xf1\xd2\xfe\xa6\xf6\xef\xd4\xcc\x3d\xfc\x5e\x4d\x21\x7e\xab\x26\xe5\xef\xfa\x81\x4d\x9b\xd2\xa6\xaf\x19\xf2\x8f\xdd\x23\xa5\x7e\xe2\x1b\xed\x2d\x5f\xa9\x7c\xc6\x2e\xc6\x87\x6b\x10\x3f\x30\x5f\x2b\x47\x54\x20\xfc\x91\x79\xfc\xdf\x99\xc7\x47\xe6\xdb\x3f\x30\x57\x94\xf7\xfb\xe6\xec\xd8\xfb\xef\x86\x2a\x4f\xff\x74\xfb\x7c\xeb\x11\xde\xc3\xa1\xc7\x5b\xec\xbf\x75\xbc\x06\xff\xfd\xfb\xe2\xd2\xac\xfd\x99\xed\x09\x19\x89\xb5\x00\x59\xcd\xf7\x8b\x0e\xca\xf7\xcb\x0b\x8a\x13\x95\x13\x39\x91\x07\x6e\x24\x2e\x70\x46\xaf\x67\xcd\xf2\x79\x4e\x83\xbb\xfb\x70\x0a\xcd\xeb\xaf\x76\x9b\xff\xe8\x39\x49\x3f\xde\x3d\x77\x9c\x05\xce\x73\xc2\xcd\x85\xaa\x41\xf7\x53\x82\xc3\x7f\xd7\x0d\xd3\x4f\xf3\xc7\xec\xfd\xfc\xb9\x4f\x73\xf3\x3f\xf4\x79\x3d\x3f\xe4\x34\xaf\x7b\x97\x66\xa4\xa2\x75\xcc\xa1\x7d\x7b\xab\x6a\xbd\xcc\xa9\x51\xc5\x28\xfa\xa0\x60\x0c\x9e\x6d\x38\xd7\xbe\xdd\xa7\xb8\x45\x9f\x82\x86\x51\xe2\x4b\xc1\x8a\x9f\xce\x78\xed\x36\x1f\x80\x46\x6e\xce\xa5\x95\x56\x58\x60\xc1\xc0\x8a\xa9\x2b\x62\x8c\xe1\xab\xf4\xde\x07\x84\x5a\xd8\xe2\xd0\x2a\xcc\x58\xd5\xa5\x83\x1b\x61\x70\x20\xa2\x47\xdb\x3a\xd5\x8c\x7c\x75\x9a\x00\xd7\xff\x05\x00\x00\xff\xff\x5b\xe5\x03\x10\xaa\x0b\x00\x00")

func compiledAuthorityBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthorityBinRuntime,
		"compiled/Authority.bin-runtime",
	)
}

func compiledAuthorityBinRuntime() (*asset, error) {
	bytes, err := compiledAuthorityBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Authority.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x51\x6b\x83\x50\x0c\x85\xff\x4b\x9e\xef\xd3\xf6\xe6\x7b\x1f\xf7\x0b\x4a\x19\xa9\x37\x4a\xc0\x26\x72\x93\xeb\x2a\xa5\xff\x7d\xd4\x51\x5b\x66\x51\xca\x64\x6c\x8f\x92\x13\xfc\xce\xc9\xd1\xed\x09\x4a\x15\x73\x14\x87\xa2\xc2\xc6\x28\x00\x4b\x9b\xdd\xa0\xd8\x9e\x40\xf0\x40\x50\x80\x71\x2d\x94\x20\x80\xf7\xed\xe5\x19\x63\x4c\x64\x06\xe7\x30\x4a\x48\xa2\x26\xd3\x79\x11\x47\x12\x67\xef\x6f\xa2\x7d\xef\x64\xaf\x2f\x70\xde\x85\xab\x48\xd0\xb9\xa3\x77\x8c\x11\x02\x68\xf6\xef\x30\x77\xcb\xaa\xcd\xb0\xd9\x62\x8f\xfb\x86\x46\x07\xe6\xe8\xf4\x96\x1d\xf7\xdc\x5c\x5e\x57\x80\xa8\x5c\x45\xe3\x7a\x95\xa5\x74\x56\x19\x08\x6f\x29\x78\xca\xcf\x85\x30\x41\x67\xdb\x0c\x69\xd0\x9a\x0e\x3a\xa6\x8f\x45\xf6\xe7\x2f\x38\x81\x4f\x74\xd0\x8e\xfe\x44\xf4\x13\xb6\x9a\x7c\x73\xa4\x32\xfb\xd0\xb3\x59\xc0\x7b\x83\x2b\x85\xfb\xf3\x62\x08\x1d\xfd\x5f\x82\xd7\xb4\xc8\xfd\xd5\x88\x30\xe7\xe8\xd1\x70\xfc\x01\x3c\x1c\xae\xfc\x79\x2c\xf5\xab\xe2\x64\xbf\x74\xa0\xdd\x67\x00\x00\x00\xff\xff\x6b\x47\xa3\x3a\x7a\x05\x00\x00")

func compiledAuthoritynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeAbi,
		"compiled/AuthorityNative.abi",
	)
}

func compiledAuthoritynativeAbi() (*asset, error) {
	bytes, err := compiledAuthoritynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledAuthoritynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledAuthoritynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledAuthoritynativeBinRuntime,
		"compiled/AuthorityNative.bin-runtime",
	)
}

func compiledAuthoritynativeBinRuntime() (*asset, error) {
	bytes, err := compiledAuthoritynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/AuthorityNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xcb\xaa\xd4\x40\x10\xfd\x97\x5a\xf7\x4a\x50\x24\x3b\x5d\xb8\x13\x17\xba\xbb\x0c\x52\x49\x2a\xd2\xd0\xa9\x6a\xba\xab\x33\x86\xcb\xfd\x77\x99\x4c\x5e\x68\x5e\x8e\x23\x77\x56\x33\x50\xaf\x73\x4e\x9d\x54\x3f\x3d\x43\x21\x1c\x15\x59\x21\xd3\x90\xc8\x80\x65\x9f\x34\x42\xf6\x74\x32\xc0\x58\x13\x64\xd7\x1f\x03\x92\xb4\x0f\x3d\x0f\x11\x30\xa0\xad\xbf\xfc\x8b\x1a\x2c\xff\x80\x97\x93\x01\x8f\x2d\xe6\x8e\x20\xab\xd0\x45\x32\x10\x15\x95\x3e\x27\xc5\xdc\x3a\xab\x2d\x64\xe0\x53\xa0\xa9\xb4\x4a\x5c\xa8\x15\x86\x17\x33\x87\xd3\x57\x8f\x78\xc6\xa1\xdf\xa3\x27\x2e\x29\x4c\x1d\xb0\x2c\x03\xc5\xd8\x35\x18\x92\x1a\x74\x69\x36\x24\x59\xd6\x37\x6f\xdf\x75\x00\xfb\x14\xf4\x3e\x48\xb3\xc2\x2c\xa6\xa2\xb8\xb4\x1c\x1b\xe4\x22\xee\x20\x3d\x16\x1e\x92\xf6\x48\xae\x6a\xae\xa2\xe8\xbe\x26\xef\x5d\xbb\x27\xfd\x9c\xda\x3e\xb8\xc6\xd2\xf9\x1f\xb4\xaf\x82\xd4\xdb\xc2\xab\x6c\xc7\xb1\x96\xc4\xba\xb9\x19\x0d\xc8\xb1\xa2\xf0\xe9\x3a\xec\x01\xd7\x53\x52\x61\x6b\x74\xf1\xc8\x6e\xde\xdf\xf3\xab\xf8\x0d\xd1\x24\xab\x9c\x79\xf1\x93\x98\x30\xe7\xe8\x90\x0b\xfa\x52\x2d\x83\xee\xc3\xff\xd5\x57\xab\x7a\xc6\xb6\xce\xc5\x3d\xd2\x91\xb9\xa3\x8d\x1f\xd3\xc2\xdd\x85\xf9\x98\x02\x53\xf9\x0a\x17\xe6\xaf\x7d\x6c\x8e\xdc\xff\xd9\x71\x77\x4e\xce\xbd\x9f\x17\xb8\x05\xaa\xd1\xf2\xc5\x4c\xf7\x27\x89\x2c\xdc\xd6\x92\xe2\x92\xbd\x2c\x97\xf4\x93\xca\x41\x80\xfd\xb3\xba\x52\xb0\x66\xcf\x31\xbd\x1f\x7d\xfc\x39\xfc\x36\xb9\xb5\x4f\xa2\x86\x58\x6f\xa6\xb4\xb1\xc8\x95\x8a\xcd\x77\xfd\x76\x62\x1f\xba\x77\x1e\xdd\x1f\xc4\x4e\xbf\x02\x00\x00\xff\xff\x89\x62\x8f\x19\xff\x08\x00\x00")

func compiledEnergyAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyAbi,
		"compiled/Energy.abi",
	)
}

func compiledEnergyAbi() (*asset, error) {
	bytes, err := compiledEnergyAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergyBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x0b\x72\xc3\x38\x08\xbd\x12\x7f\xc1\x71\xf4\xb1\xee\x7f\x84\x1d\x24\x3b\x4d\xd2\x36\xc9\x76\x66\x37\x9e\x4c\x1b\x2c\x01\xef\x3d\x40\x32\xc8\x47\x40\xc9\x00\x84\x0d\xc1\x10\xc0\xab\x16\xe3\x79\x7e\x0c\x0e\x30\x00\x82\x6a\x00\xc0\x0a\x82\x66\x0c\x36\xc7\x38\x80\x1d\x51\xd6\x9e\xa9\xc5\xc1\x18\x42\x8f\x5a\x1a\x2f\x2b\x62\x6c\x2b\x3a\x1a\x8c\x31\xb6\x55\xce\xb5\xc4\xcd\x0b\x5d\xd6\x22\xdb\xca\xc8\xfd\x50\x2b\xdb\x1a\x7d\x5b\x0b\x54\x70\xe2\x1d\x0d\xbb\x6e\x6b\xe8\xf0\x68\x72\x5a\x8f\xd3\x43\x0d\xd0\xe8\xad\x6d\xeb\x2c\xdb\x3a\x3c\x90\xb5\xef\x68\x74\x65\x36\x86\xd1\x31\xf8\xd8\x56\xea\x5a\xb4\x25\x4e\x87\x39\xb4\xb1\xa0\x26\xba\x48\x46\x6e\xd6\xb4\x54\xca\xf5\x8a\x6a\xb9\x5e\x40\xd1\x80\xc0\xc1\x49\xc9\x31\xc0\x11\xd0\xd9\xd1\x51\xf3\x4b\xf9\x16\x30\x50\xc1\x41\x31\xe0\xfc\x9d\x3b\xd8\x39\x7d\x6b\xcb\xf5\x08\x3b\xe2\x38\x32\x3f\x27\xc8\xfd\xbc\xfe\x9e\x3e\xf2\x6d\xb7\x8c\xab\xb0\x9f\x58\xdf\x8c\x98\x7e\x71\xa2\xf9\xf6\x82\xd0\x4e\x2f\xec\x2b\xc3\xcc\x69\x79\xe1\xf5\x16\xa0\x02\x63\xa0\x3d\x66\x98\x9e\x83\xb6\xef\x8d\xcd\x21\x10\x38\x60\xf2\x8d\x13\x24\x79\xe2\x04\x39\x99\x43\x83\x7a\xd6\x0b\xf0\xaa\x2a\x45\x33\x20\xe1\xdc\x45\x41\x5f\x8c\x45\x82\xd3\xaf\xd8\xbf\xc7\xd2\x67\xfe\xd1\x16\xff\xb3\xdf\x7b\xfb\xc4\x53\x99\x9f\x66\xed\x88\xb6\x74\x3a\x11\xc8\x46\xc0\xc6\x19\xf3\xf2\x57\xcb\xb3\xbf\x3a\x73\xd5\xd0\xfb\xca\x98\x33\x20\xf0\x9e\xe7\xdf\x33\x1c\xf0\x03\xd6\xdf\x78\xcd\x48\xf5\x3e\x9f\xe3\x19\xdf\xae\x54\xd1\xfb\xac\x09\xe8\x0f\xda\x49\xc8\xbd\x8f\xef\xfa\x2f\x4d\xa4\xde\xe7\x43\xfc\x8d\x9f\xdf\xd0\x3c\xf1\x8d\x20\x73\xd7\x4a\xf6\x59\xe4\x68\xd2\x9b\xda\x7e\xea\x7d\xf2\x98\x1e\x17\xb7\x65\xaa\x99\xaa\x98\xdb\x2c\x04\x7f\xf8\xac\x2e\x5e\xdd\xb6\xbb\x6a\x47\x7c\xcc\x97\xb3\x4f\x6d\xa1\xba\xf5\xf6\xf5\x9f\xac\x8e\x26\x08\xf1\x92\x7d\xe8\xa2\x14\x92\xea\x2b\x65\x27\x12\xb8\x06\xa8\x06\x04\x05\x06\x94\xe9\x5d\xdb\x81\x87\x1e\xed\xe8\x65\x68\x1b\x28\xb3\xa0\x50\x19\x78\xb8\x4c\x1e\x03\x18\xa5\xc3\x2c\x8d\x28\xf0\xd0\x46\x00\xb5\x7b\x2f\x9d\x5b\x90\xc6\xf6\xf8\xa2\xfe\x2b\x67\x1f\x03\x66\xc4\xd5\xd5\x1b\x13\x30\x3c\x23\x5b\x93\xbd\x04\x4e\x97\x61\x8b\x8d\x6b\xb2\xc1\x89\x2e\xa7\xd9\xd7\xd9\x90\x2c\x5c\xa7\x03\xd0\x8e\x0f\x02\x6b\xc7\x95\x83\x73\x9e\x12\x8b\xad\xe2\xc0\x2d\x7b\x3e\xeb\x56\x9e\xeb\x87\xba\x69\x05\x9e\x78\xad\x50\xbd\x5f\xf1\x38\x8f\x74\x4f\xaa\x5f\x14\x4a\xde\xb7\x42\x5f\xac\x7c\x53\x88\xdd\xd0\x9c\x95\x22\xb5\xa6\x5c\x49\xa0\xe2\x14\x70\x4e\x61\x0e\x7b\xc8\xf1\x7b\x14\xfd\x20\x4a\xb9\x8f\x92\x67\x84\x8a\x73\x40\x2a\xa3\x2b\x4a\x6f\x2e\xf9\x18\x82\x62\xdb\x93\x7d\xe9\xc5\xd7\x14\xde\x18\x91\xe2\x8d\x76\xbd\xf6\x51\x3d\x70\x9f\x28\x3f\xa9\x77\x77\x9a\xdf\x54\x4c\xae\x6e\xea\x3d\xf8\xdc\x53\x2b\x35\xbd\x9d\x40\x9f\xa9\x2b\xcc\x6f\xd4\x95\x47\xfd\xbf\xa9\xfb\x88\x3d\x27\x58\x7b\x3b\x03\xe4\x9a\x01\x2a\xe2\x32\xff\xd2\xff\x2f\x66\x00\xac\xe9\x86\xcc\x3f\x6a\xf5\x51\x6f\x21\xd5\x42\x8c\xff\x77\x6f\x3d\xab\x8a\x4e\xef\xeb\x36\x20\x04\x2d\xef\x33\x39\xa7\x72\x7e\x65\x77\x7c\xb1\xe1\x88\xb8\xa2\x25\x15\xe5\x67\xbc\x32\x5d\x58\x8f\xea\xf2\x2f\x2b\x52\x5f\x54\x24\x9d\x15\xc9\x57\x45\x5e\xb5\x29\x9f\xb1\x93\x37\x8e\xd7\xb5\xa9\x41\x2f\x6b\x13\x14\xae\x95\x8f\xe7\xff\xcf\x2c\xd4\x71\xf8\x28\x54\xf7\x4d\xef\xbf\xc0\x0c\x6f\x31\xcf\xf6\x06\xb3\x41\xff\x8e\x59\xdb\xf2\xf5\x84\x68\x69\xf9\x64\x2b\x73\x8c\x49\x4a\x75\x60\x3b\xa8\x7b\x34\x8b\x4e\x0d\xcc\x67\xe7\xe2\xa3\xd6\x50\x6a\xb5\x4c\x34\xee\x52\x11\x8d\x7c\xaa\x56\x19\x53\x89\x1b\x1f\xf3\xe2\xe6\xf5\x39\xf6\xd5\x63\x97\xce\x4f\x33\x60\xed\xce\x2a\x05\xa8\x68\x6a\x54\x6a\xc9\xa6\x03\xcd\x6b\xf0\xe0\x59\xcb\x74\x9b\xa3\x56\x1e\x51\x62\x56\xe5\xa1\x0c\xda\x5b\x3f\x2a\x4a\xd3\x3e\xa9\x3b\x90\x2a\x21\x8a\x4b\x5e\xd8\xd9\x3d\x5a\x87\x2c\x7b\x8a\x7f\x02\x00\x00\xff\xff\xdc\xc7\x63\x60\x34\x0d\x00\x00")

func compiledEnergyBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergyBinRuntime,
		"compiled/Energy.bin-runtime",
	)
}

func compiledEnergyBinRuntime() (*asset, error) {
	bytes, err := compiledEnergyBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Energy.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x41\x4b\x03\x31\x10\x85\xff\xcb\x3b\xe7\x24\xe8\x21\xc7\xde\x3d\xe9\xad\x2c\x32\xbb\x99\x4a\x20\x9d\x09\x9b\x99\xca\x52\xfa\xdf\xa5\xd2\x6d\x51\x16\x5a\xa4\xa0\xb7\x04\xde\x23\xdf\x47\xde\x7a\x8f\x41\xa5\x19\x89\x21\xda\xe8\x1c\x90\xa5\xba\x35\xc4\x75\x17\x20\xb4\x65\x44\x08\x59\xde\xf1\xdb\x3b\xdb\xab\x1a\x95\x17\xaf\xb5\x4c\x08\x50\xb7\x53\x76\x3f\x47\x11\x60\x53\x3d\x9e\x3c\x8b\x3d\x3c\x3e\xe1\xd0\x05\x54\x9a\xa8\x2f\x8c\xb8\xa1\xd2\x38\xa0\x19\x19\x3f\xbb\x51\x9f\x4b\xb6\x09\x11\xbb\xcc\x1f\x97\xee\xc6\x65\xb0\xac\x82\x43\xf8\x0d\xe0\xca\x47\xe1\xf4\x07\x80\xa7\xf6\x99\xf0\xfc\x2a\xa5\x34\x5e\xda\xc7\x1b\xb7\xf6\x55\x9e\x03\x5b\x75\xb1\x65\xb8\xef\x92\xcd\xfb\x15\x15\x92\x81\xaf\x09\xf6\xaa\xe5\x46\x3b\x51\x99\x43\xff\xc1\x91\x52\x5a\x72\xbc\xb7\xca\x8f\x3d\x5d\x33\x59\xda\xdb\x8d\x5f\x71\x9f\xad\x75\x9f\x01\x00\x00\xff\xff\xb9\x70\x8c\x04\xaf\x03\x00\x00")

func compiledEnergynativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeAbi,
		"compiled/EnergyNative.abi",
	)
}

func compiledEnergynativeAbi() (*asset, error) {
	bytes, err := compiledEnergynativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledEnergynativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledEnergynativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledEnergynativeBinRuntime,
		"compiled/EnergyNative.bin-runtime",
	)
}

func compiledEnergynativeBinRuntime() (*asset, error) {
	bytes, err := compiledEnergynativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/EnergyNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledExecutorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorAbi,
		"compiled/Executor.abi",
	)
}

func compiledExecutorAbi() (*asset, error) {
	bytes, err := compiledExecutorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc1\x0b\x11\x00\x21\x08\x04\xd0\x4a\xeb\x22\x1f\xe3\x20\x60\xff\x08\x37\x37\xcf\xf0\xdb\x50\x1a\x80\xc0\x6b\x20\x97\xa9\xd1\xd3\xd3\x29\xd0\x20\x8a\xd2\x92\xc3\xae\xb0\xec\x25\x50\x5b\xc9\xe0\xe9\xf0\xf2\xba\xb1\x45\xc5\x74\x1f\xde\x5e\xba\x63\xae\x8f\xbf\xc2\x13\x13\xde\x39\x00\xcf\x17\x00\x00\xff\xff\xd7\x93\xa9\x33\x6a\x00\x00\x00")

func compiledExecutorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBinRuntime,
		"compiled/Executor.bin-runtime",
	)
}

func compiledExecutorBinRuntime() (*asset, error) {
	bytes, err := compiledExecutorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\x41\x0a\xc2\x30\x10\x85\xe1\xbb\xbc\x75\x56\x15\x5d\xe4\x0e\x9e\xa0\x14\x99\x94\x29\x04\xe3\xb4\x98\x37\x95\x50\x7a\x77\x51\x10\xa1\xcb\x07\xef\xfb\xfb\x0d\xe3\x6c\x95\x62\x44\xe4\xd3\x35\x20\xdb\xe2\xac\x88\xfd\x06\x93\x87\x22\xe2\xb6\x4a\x71\x45\x00\xdb\xf2\xd9\xa9\x51\x2b\xf6\x21\xfc\x0e\xa9\xc8\x5d\xbb\xd4\x9d\x2f\x08\x98\x9d\xc7\xc0\x81\x9e\xba\x2f\x5e\xa4\x49\x2a\x8a\x38\x49\xa9\x1a\x50\x29\xd4\xab\x53\x52\x2e\x99\x0d\x11\x6b\xd6\xd7\xdf\x4e\x6e\x23\xf3\x6c\xd8\x87\x77\x00\x00\x00\xff\xff\xb4\x23\xfe\x55\xb7\x00\x00\x00")

func compiledExtensionAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionAbi,
		"compiled/Extension.abi",
	)
}

func compiledExtensionAbi() (*asset, error) {
	bytes, err := compiledExtensionAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x6d\xd2\x1c\x21\x08\x84\xaf\xd4\x0d\x82\x70\x1c\xe7\xc3\xfb\x1f\x21\x85\xce\xbc\xbb\xc9\x9f\x54\x25\x5a\x5b\x3b\x5a\xd8\xc0\xd3\x38\x6a\x37\x98\x38\xd0\xd4\x09\x27\xea\xdc\x5d\xe7\xb3\xfa\x09\xe2\x1f\x97\x03\x50\x43\xa3\xbb\x6a\x97\x66\xc1\x16\x64\x5b\x59\xcc\xba\x1d\x15\x11\x98\x97\x1d\xda\x68\x75\x6f\x95\xfd\xe7\xb6\x6e\xd2\xab\x3a\x87\xb4\xa0\x5a\x30\x08\x26\x42\x51\x27\x38\x04\x0e\xce\x10\x30\x98\x40\x0b\x42\xc0\xd5\x57\xc5\xf1\xf9\x96\x7a\x69\x92\x92\xcc\xf5\x2a\x1a\x18\x1a\x1a\x08\x89\xa6\xdd\x90\x2d\xdd\x16\x83\x11\x69\x86\xaf\xed\x55\xeb\xab\x58\xbc\x04\x6f\x8e\x40\x12\x9a\x98\xba\xfb\x51\xf4\x1f\x7a\x7f\x5b\x45\x66\xf4\x1b\x63\x48\x84\xfa\x62\x56\x9a\x5b\xbf\xf2\xac\x0c\xf2\xf1\x83\xfe\x3f\x8e\x40\x76\xf5\xa8\xde\xb1\xe9\x81\x21\x41\x68\x88\x49\xe8\xa2\xc4\x4f\x8f\x49\x43\xac\xbe\x9f\x33\x02\x45\xad\x6a\xb5\xa3\xe2\x89\xe5\x1c\x35\xac\x17\x4b\xd4\x7b\x5d\xff\x2f\x27\x82\xb2\x18\xbe\x3c\x73\xfd\xb6\x93\xe5\x1e\x3d\x1e\x15\xb7\x47\x45\x63\x71\x28\x8f\x96\x4a\x8d\x67\xf5\x3d\xa0\x4c\xfa\xef\x15\x96\x72\xca\xd6\xde\x13\xb1\x9d\x09\x85\x06\xd7\x3c\xf5\x80\x1e\xb4\x9d\x25\xf4\x8f\x29\x93\xd3\x6d\x40\x27\xdf\x88\x6c\xdf\x11\xaf\xf2\x56\x35\xa6\xbe\xd9\xcc\x81\x41\x37\x97\x3e\xfa\xe8\xa2\xb0\x10\xe0\xe6\x00\xe1\x69\xed\xc6\x50\x21\xee\x2b\xfb\xe5\x47\x4c\x1f\x21\xc7\x3c\x30\x6d\x0a\x4f\x37\x0b\x6d\x37\xc3\x75\x9c\x57\x77\x99\x66\x17\x4e\x40\xf2\x57\x00\x00\x00\xff\xff\xb9\x18\xac\x76\x9e\x03\x00\x00")

func compiledExtensionBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBinRuntime,
		"compiled/Extension.bin-runtime",
	)
}

func compiledExtensionBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcc\x41\xaa\x83\x40\x10\x84\xe1\xbb\xd4\x7a\x56\x3e\x5e\x16\x73\x87\x9c\x40\x44\x7a\xa4\x85\x21\x93\x56\x32\xd5\x86\x41\xbc\x7b\x48\x20\x04\x5c\x16\xd4\xff\xf5\x3b\xa6\xc5\x2a\xc5\x88\xc8\x87\x6b\x40\xb6\xd5\x59\x11\xfb\x1d\x26\x77\x45\xc4\xb8\x49\x71\x45\x00\xdb\xfa\xde\xa9\x51\x2b\x8e\x21\x7c\x0f\x26\xcc\x9b\x8e\xa9\xc8\x4d\xbb\xd4\xfd\x5f\x10\xb0\x38\xcf\xce\x49\xf8\xeb\x3e\xc6\x2a\x4d\x52\x51\xc4\x59\x4a\xd5\x80\x4a\xa1\x5e\x9d\x92\x72\xc9\x6c\x88\xd8\xb2\x3e\x7f\xed\xec\x36\x31\x2f\x86\x63\x78\x05\x00\x00\xff\xff\x30\x2a\x49\xda\xbe\x00\x00\x00")

func compiledExtensionnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeAbi,
		"compiled/ExtensionNative.abi",
	)
}

func compiledExtensionnativeAbi() (*asset, error) {
	bytes, err := compiledExtensionnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBinRuntime,
		"compiled/ExtensionNative.bin-runtime",
	)
}

func compiledExtensionnativeBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6a\xc3\x30\x0c\x86\xdf\xe5\x3f\xfb\xd4\xb1\x1d\xf2\x0e\x3b\xed\x58\xc2\x50\x12\x75\x98\xa5\x72\x88\xa4\xac\xa6\xe4\xdd\xc7\x4a\x12\xc3\xe8\x08\x65\x47\xe3\xcf\xbf\x3e\xa3\xff\x78\x45\x9b\x44\x8d\xc4\x50\x9d\xa8\x57\x0e\x88\x32\xb8\x29\xaa\xe3\x15\x42\x67\x46\x85\xf7\x4f\xce\x08\xb0\x3c\xfc\x9c\x9a\x6c\xac\x4f\x07\xcc\xa1\x00\x13\xf5\xce\x05\xf1\x28\x76\x78\x7e\xc1\x5c\x87\x15\x51\x36\x04\x24\xb7\x25\xbc\x0e\x18\x28\x53\xd3\xf3\x36\x58\x8d\x8c\x5f\xdd\xa8\x89\x7d\xb4\x8c\x0a\x92\x64\x85\xb6\xec\x93\x4b\x6b\x31\xc9\x6d\x7e\x91\xb7\xd1\x1f\x71\x2f\x62\x1f\xbf\xc4\xb6\x97\xf7\xbf\xb3\x2f\x3d\x45\xfe\x7a\x54\xb7\xe8\xf0\x85\x5b\xb7\x34\xee\x39\x51\xd7\x8d\xac\xfa\x7f\x27\x92\x24\xf9\x9c\x5c\xef\x15\x20\x4a\xc7\x17\xee\x56\xdf\xc5\xe2\xcf\x3a\x6c\xf8\x92\xb4\xf0\xfb\xed\x78\xbb\x2d\x61\xb9\xe7\x89\xc5\x30\xd7\xdf\x01\x00\x00\xff\xff\xfb\x8f\x43\xc8\x9d\x02\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x0b\x92\xe2\x30\x0c\x44\xaf\xd4\xfa\x5a\x3a\x8e\xed\x58\xf7\x3f\xc2\x96\x13\x32\xcc\x0c\xbb\xb0\xa4\x8a\x2a\xda\xd6\xa3\xbb\x05\x8e\xfd\x28\x8c\x1d\x50\x71\x82\x13\x20\x87\x35\x97\x7a\xbc\x1c\x0b\x0e\x30\xba\x03\x10\x83\x92\xbb\x70\x93\xd2\x54\x04\x91\xee\x19\x65\x6b\x01\x97\x58\xbd\x7b\x9f\xb8\x54\x3b\x2e\x75\x8a\x4e\xc4\xb2\x4b\x0d\xb3\x66\x63\xd3\x02\x75\xd8\x10\x25\x3b\x19\xfb\x7b\xbf\xd4\x73\x7e\x9c\xbe\xcc\xc1\xfb\x9d\x80\xa1\xe6\x36\xf6\xc9\x3d\xe5\xf1\x7b\xaa\xc9\x63\x8a\x40\xcd\xf6\xfd\x33\x23\x25\x82\x76\x52\x06\xe8\x52\x02\x49\x90\x44\xc9\x93\x97\xf8\xcd\xcb\xd8\xa4\xe5\x4f\x92\x9f\x84\xfe\xe8\x65\x13\x92\xc8\xdf\xd1\x4f\xef\xf3\x3b\xe7\x27\x81\x5c\xe4\x55\x23\x25\xbb\x5c\x1d\xe3\xbb\x2b\xc1\xeb\x5d\x17\xd6\xf4\x9e\xd2\x43\x42\x6e\x9f\x5f\xbb\xfb\xda\x67\x6c\x99\x2f\xaf\xd0\x20\x50\x72\x22\xf9\xf4\xae\xc1\x38\x4f\x54\x37\x1f\xb8\x93\x84\x40\xe2\x54\xa2\x05\x64\x3c\x7c\x11\xb7\x5f\x6d\xf1\x74\xeb\x90\xa2\xfb\x86\xfc\xd8\x8f\x21\x24\xc9\xd0\x8a\x63\x09\xab\x57\xc0\xc8\xca\x26\xad\x23\xa3\x0d\x12\x59\xc5\x45\x29\x2a\x39\xd8\xfa\x1c\xdd\xbb\x2d\xcf\x62\xca\x15\xe9\x35\xf3\xa0\x96\x09\x43\xf0\xa7\xcd\x76\x36\x18\x1e\x8d\xe3\xef\xbd\x8d\x83\x0c\x6b\xf5\xdd\xda\x9d\xf8\x62\x19\xbf\xe9\x51\x5f\x7a\xa4\xfd\x3b\xb8\x7a\xc4\x49\xf8\xd4\xde\xf4\x4f\xed\x1d\xed\x67\x7b\xfb\xb9\xa9\x46\x29\x79\xe5\xfb\x90\x90\x6b\x3a\xb4\xe8\x5f\xf9\x82\x9e\xb9\xc8\x9f\x69\x9f\xf9\xfe\x2b\x0f\xf3\xfa\x90\x87\xa5\xde\xe6\xa1\xfd\x39\x61\x0e\x74\x72\x73\x6e\xbd\xf5\xc6\x02\x0b\x86\xf1\xc2\xb2\x1a\xea\xdd\x2c\x8e\x82\xb6\x70\x49\x30\x2d\x99\x56\x69\xbd\x54\x1a\xe5\x90\xea\x93\xf7\xff\x4c\xaa\x55\xe4\x18\x01\xab\xa3\x01\x9c\x7f\x02\x00\x00\xff\xff\x88\x9a\xa7\x59\xf2\x04\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x4a\xc4\x40\x10\x44\xff\xa5\xcf\x73\x5a\xd1\x43\xee\x1e\xfd\x82\x25\x48\x27\xdb\x2b\x83\x63\x4f\x48\x57\x47\x87\x65\xff\x5d\x36\x98\x49\x44\x21\xe8\x71\x98\x6a\xde\xab\x3a\x5e\xa8\xcf\x6a\x60\x05\x35\x67\x4e\x26\x81\xa2\x0e\x0e\xa3\xe6\x78\x21\xe5\x37\xa1\x86\x5e\xa5\x50\x20\x94\xe1\xf6\xe8\x0a\xc4\xee\x0e\x74\x0d\xf5\x7f\xe2\xe4\xb2\x26\x3c\x2a\x0e\xf7\x0f\x74\x6d\xc3\x92\x50\x46\x9c\xe4\xd9\x04\x14\x28\x3b\xbe\x08\x6d\xa0\x81\x0b\x77\x49\x2a\xdd\xc0\x90\x27\x07\x77\x31\x45\x94\xdb\x6d\xd6\x25\x54\x11\x67\xd7\x1e\x31\xeb\x6c\xb1\x36\xc0\xe8\xdb\x02\x3f\xf8\x2f\x82\xc7\x0f\xe9\x1d\x79\xfc\xe6\x51\x9b\xac\x04\x3e\x9d\x46\x31\x9b\x4b\xec\x3b\x4e\x51\xde\xff\x6a\xb7\x33\xef\x6f\xf2\x7b\xd2\xdb\xe5\xff\x2f\xdd\x7e\x06\x00\x00\xff\xff\x31\x85\x28\xfa\x16\x02\x00\x00")

func compiledParamsnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeAbi,
		"compiled/ParamsNative.abi",
	)
}

func compiledParamsnativeAbi() (*asset, error) {
	bytes, err := compiledParamsnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBinRuntime,
		"compiled/ParamsNative.bin-runtime",
	)
}

func compiledParamsnativeBinRuntime() (*asset, error) {
	bytes, err := compiledParamsnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\x41\x0a\x83\x30\x10\x85\xe1\xbb\xbc\x75\x4e\x90\x3b\x94\x1e\x40\x5c\x8c\x3a\x81\x40\x3a\x09\xce\x4b\x4b\x10\xef\xde\x95\x14\x8a\xcb\x1f\xfe\x6f\x3a\xb0\x56\x73\x8a\x11\x91\x7b\xd7\x80\x6c\xad\xd3\x11\xa7\x03\x26\x2f\x45\x84\x6c\xdb\x8e\x00\x8e\x76\x95\xba\xe3\x9c\xc3\x35\x3c\x13\x02\x6a\xe7\x3f\xbc\x47\x4d\x86\x2c\x45\x11\x93\x14\xd7\x00\xa7\x50\x1f\x9d\xb2\xe4\x92\x39\x10\xf1\xce\xfa\xf9\xd9\xd4\x6d\x65\xae\x86\x73\xfe\x06\x00\x00\xff\xff\xf1\x8a\x1d\x63\xaf\x00\x00\x00")

func compiledPrototypeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeAbi,
		"compiled/Prototype.abi",
	)
}

func compiledPrototypeAbi() (*asset, error) {
	bytes, err := compiledPrototypeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x51\xd9\x6d\x6d\x31\x08\x6c\x69\xd8\xa1\x1c\xfb\xd8\xee\xbf\x84\x27\xce\x5d\xf4\x94\x9f\xe4\x26\xf8\xcb\x23\x60\x16\x1c\xfd\x14\xc6\x0e\xa8\x38\xc1\x09\xfd\x0f\x97\xf3\xac\xb8\x40\xf8\x65\x39\x00\x31\x28\xb9\xcb\xa4\xc9\xf3\x2c\x49\x22\xbd\x59\xcc\xc2\x66\x77\x24\xce\xb2\x29\x4a\xd6\xb8\x35\xfb\x1b\x6d\x24\x28\xde\x6a\xbe\xab\xdb\x87\x91\xf7\x5c\x0d\xf3\x66\x50\xd8\x07\x1b\x0a\x45\xe4\x49\x9d\x09\x03\xf4\x98\x4f\x14\x41\x0a\x47\x1e\x9a\x05\x3f\xdf\xd8\xee\xd7\x5e\x9a\x71\x24\xe5\xa9\xe7\x2f\xa9\xbe\x99\x53\xc9\xc1\xad\xf5\x53\x7f\x9d\x53\x32\x1e\x2e\xb5\x5d\x02\x2f\xa7\x29\x90\xbc\x91\x8c\x84\x4c\xb2\xfb\x32\x44\xeb\xcb\x65\xf8\x72\x1b\x90\x43\xaf\x0e\xde\xff\x77\x18\x8a\x4b\x8a\x0d\xf7\x73\x60\x90\x9b\x73\x8c\x18\xc1\x02\x6b\x01\xbe\xb6\x9e\xb5\x8a\x98\x29\x98\xe5\xd8\x08\x9d\x47\xf4\x20\x61\x65\xb2\xe5\xda\x6e\x95\x31\xa7\xe0\xec\xda\xca\x7e\xe6\x1a\xa8\x75\x35\x17\xd7\xbf\x00\x00\x00\xff\xff\x8e\x37\xcf\x55\xc6\x02\x00\x00")

func compiledPrototypeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBinRuntime,
		"compiled/Prototype.bin-runtime",
	)
}

func compiledPrototypeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeinterfaceAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x6e\x9b\x40\x10\xfd\x97\x51\x8f\x9c\x2a\xb5\x07\x6e\x55\xcf\x69\xaa\x58\x3d\x45\x11\x1a\xb3\xe3\x76\x25\x98\x45\x3b\xb3\x4e\x51\x94\x7f\xaf\x8c\x8d\x21\x64\x31\x34\x35\xa4\x47\xa4\xc7\xec\x9b\xb7\x6f\xde\xec\xfd\x13\xe4\x8e\x45\x91\x15\x52\xf5\x81\x12\xb0\x5c\x05\x15\x48\xef\x9f\x80\xb1\x24\x48\x21\x08\x79\x48\x40\xeb\xea\xf0\x85\xc6\x78\x12\x81\xe7\x87\xa4\x05\x7c\x38\x20\xb2\xdc\x93\xb1\x0a\x09\xb8\xa0\xc3\x12\x9e\x4a\xb4\x4c\xe6\x6b\x8b\x39\x15\x0b\x96\xf5\xe3\xa7\xcf\x4d\xb1\x0a\x6b\xdc\x16\x04\xe9\x0e\x0b\xa1\x04\x44\x51\xe9\x26\x28\x6e\x6d\x61\xb5\x86\x14\xf6\x96\x1e\xbb\x7f\x77\x81\x73\xb5\x8e\xe1\x39\xe9\x77\x71\xfa\xfb\x75\x1b\x4c\x8f\x37\x28\x3a\xd5\x8b\x90\x66\x65\x8b\xeb\x5a\x99\x45\x90\x1d\xb7\xa0\x37\xd3\x9c\x56\xdb\x53\xe9\xf6\x94\x9d\x80\xcb\x51\x1c\xf8\xa1\xc7\xe0\x17\x4a\x96\x3b\x43\xf1\xcb\xee\x0a\x6f\x9d\x2b\x56\xb9\xdb\x69\xd1\xd0\x98\xd5\x15\x3b\xd3\x93\xca\xb1\xb8\x09\x86\x56\xb2\x0e\xf7\x7f\xc8\x9a\x8f\x8d\x6b\xd2\x9b\xec\xdc\xed\xc9\xd7\x77\xa8\x14\x9f\xeb\xfe\x60\x35\x41\x51\x15\xc8\xef\x72\x0d\xd3\x2e\xb1\xf2\xda\x24\x2b\x5c\xc0\xf8\xa4\xe5\xc1\x7b\x62\x9d\xeb\x8c\x7e\x4f\x4b\x9b\x43\x5d\xe4\xdc\xce\x18\x58\xba\xc0\x23\x51\xdf\x76\xd7\xe4\x18\x31\xf9\x9f\x75\xd6\x94\x7b\x8f\x30\x3b\x9e\x3f\xa5\xec\x9a\x9b\x6a\x8e\x74\xea\x91\x65\x47\x3e\x8b\xd0\x5f\x4f\xbb\xc8\xa2\x3c\x77\x51\x5e\x58\xb6\x4b\x2b\x58\x93\xdc\xfa\x6f\x2e\x32\xb1\xe7\x34\x8a\x0c\xd4\x7a\xba\xc5\x73\xf0\xba\xb9\xbb\xb4\xc6\xb3\x96\x9a\x50\x41\x79\x3c\xbe\xae\xa3\x36\xb2\xe3\xba\x74\x41\x62\x4c\x2d\x1b\xfa\x4d\xa6\xbd\x89\xbf\x7b\x08\x6e\x48\x87\x30\xda\x13\xeb\x5b\x8f\x1d\xd9\x3e\x49\x0f\x7f\x2a\xd5\xc6\x80\x31\xb7\xfe\xae\x79\xec\x5d\x30\xf2\x17\x63\x8e\x98\x1f\xf2\x2f\x54\x5f\x1e\x7d\xc9\x80\x23\xbf\xcc\x7f\x08\x6c\x48\x0f\x5c\xbf\x1f\xed\x7f\x0d\x69\xc7\xad\x38\xce\x77\x3a\x22\x36\xc3\xaa\x0b\x71\x7c\x21\xcd\x61\x5c\xc6\x0e\x7e\xf8\x13\x00\x00\xff\xff\x76\x91\x45\x28\xaf\x0d\x00\x00")

func compiledPrototypeinterfaceAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeinterfaceAbi,
		"compiled/PrototypeInterface.abi",
	)
}

func compiledPrototypeinterfaceAbi() (*asset, error) {
	bytes, err := compiledPrototypeinterfaceAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeInterface.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeinterfaceBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypeinterfaceBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeinterfaceBinRuntime,
		"compiled/PrototypeInterface.bin-runtime",
	)
}

func compiledPrototypeinterfaceBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeinterfaceBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeInterface.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\x41\xaa\x84\x30\x10\x05\xef\xf2\xd6\x39\x41\xee\xf0\x4f\x20\xf2\x69\x63\x0b\x0d\x4e\x47\xd2\x2f\x0e\x41\xbc\xfb\x6c\x46\x66\x59\x50\x54\x4d\x17\x4a\xf5\xa0\x38\x91\xd9\xba\x26\x98\x1f\x9d\x81\x3c\x5d\x70\x79\x29\x32\x64\x5d\x1b\x12\x38\x8e\x87\x34\x02\xf7\x9c\x1e\xc1\x85\x76\xea\x7f\xa9\xce\x26\x85\xb6\x0d\x24\xd4\xce\x6f\x68\x4e\x38\x64\xc8\xb2\x2b\xf2\x26\x7b\x68\x42\x50\xa8\x7f\x9d\xb2\xd8\x6e\x1c\xc8\x38\x4d\xdf\xbf\xc9\xd6\xbd\xd0\xaa\xe3\x9e\x3f\x01\x00\x00\xff\xff\x15\x78\xf0\x15\xa3\x00\x00\x00")

func compiledPrototypenativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeAbi,
		"compiled/PrototypeNative.abi",
	)
}

func compiledPrototypenativeAbi() (*asset, error) {
	bytes, err := compiledPrototypenativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBinRuntime,
		"compiled/PrototypeNative.bin-runtime",
	)
}

func compiledPrototypenativeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypenativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x3f\x4f\xc3\x30\x10\xc5\xbf\xcb\xcd\x99\x90\x60\xc8\xc6\xc2\x86\x18\x60\xab\x2a\x74\x49\x2e\xc8\x92\x73\x67\xd9\xe7\x94\xa8\xea\x77\x47\x2d\x69\x5c\x41\xfe\x54\x05\x04\xac\xf1\x3b\xdf\x7b\xfe\x5d\xec\xd5\x16\x4a\xe1\xa0\xc8\x0a\x79\x8d\x36\x50\x06\x86\x5d\xd4\x00\xf9\x6a\x0b\x8c\x0d\x41\x0e\xcf\xc1\x11\x57\xe4\x21\x03\xed\xdc\xfe\x0b\x56\x95\xa7\x10\x60\x97\x25\x51\x8b\x36\x52\x92\x44\xc3\x7a\x75\x7d\x03\xbb\x75\x76\x94\xa0\x73\x5e\xda\xbd\x46\xa2\x7e\x6c\x12\x62\x59\xee\xb7\x1c\x36\x28\x44\xec\xa1\xda\x61\x87\x85\xa5\xc1\x60\x50\x54\xba\x8f\x8a\x85\xb1\x46\x3b\xc8\x81\x85\x8f\xa2\xa1\xbc\x8e\x5c\xaa\x11\x3e\x78\x4c\x21\xd5\xc7\xd3\x8c\xc9\x9c\x8a\xa2\x7d\x8c\xce\xd9\x6e\xca\x60\xbf\x36\x12\x70\xd9\x62\x6b\x68\xb3\x68\x6e\x9a\x40\xed\xa5\x99\x3f\x7e\x95\xaf\xe2\x51\x8f\x1c\x6a\xf2\x77\xef\xbd\xfe\x0c\xa3\x94\x41\x36\x3c\x3a\x85\x29\x43\x81\x16\xb9\xa4\x87\x7a\x3c\x40\xbf\xfc\x4b\x10\xbf\x0f\xd1\xff\xc2\x93\x9d\x73\x93\x9c\x5c\x13\xd6\xca\xa6\xc7\x34\x92\xd2\x53\x83\x86\x0d\xbf\xfc\x00\x45\x64\xe1\xae\x91\x18\xc6\x30\x1a\xae\xe8\x95\xaa\xe3\x01\x2c\xff\x9a\x13\x05\x53\x63\x30\xc8\xfb\xd6\xe7\x8f\xc5\x53\x1a\x8b\x5e\x44\x2d\xb1\x5e\x1c\x69\x06\xe4\x44\xc5\xec\x0b\x71\x79\xb0\xdb\xc3\x8b\x81\xf6\x53\xb0\xf5\x5b\x00\x00\x00\xff\xff\x73\x6f\x06\xdc\xba\x06\x00\x00")

func compiledTokenAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenAbi,
		"compiled/Token.abi",
	)
}

func compiledTokenAbi() (*asset, error) {
	bytes, err := compiledTokenAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledTokenBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledTokenBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledTokenBinRuntime,
		"compiled/Token.bin-runtime",
	)
}

func compiledTokenBinRuntime() (*asset, error) {
	bytes, err := compiledTokenBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Token.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProtoAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\x8e\x05\x04\x00\x00\xff\xff\x29\xbb\x4c\x0d\x02\x00\x00\x00")

func compiledProtoAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledProtoAbi,
		"compiled/proto.abi",
	)
}

func compiledProtoAbi() (*asset, error) {
	bytes, err := compiledProtoAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/proto.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledProtoBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc1\x09\x0d\xc0\x30\x08\x05\x50\x4b\x1f\xca\x29\x87\x42\xf1\x2f\x61\x59\x9e\xe1\x27\x50\x36\x00\x81\x1d\xa0\xc8\xd4\xd8\xcb\xcb\xf9\x40\x83\x91\x93\x7a\x70\x22\x23\xb7\x70\xde\x6d\xf0\xae\xae\x5d\x7d\x31\xde\x6b\xf9\x64\xbb\xe8\x4e\xc0\x85\x92\x21\x44\xd9\xb7\x84\xbc\x87\x00\xce\x2f\x00\x00\xff\xff\x05\x2b\xc2\x15\x6a\x00\x00\x00")

func compiledProtoBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledProtoBinRuntime,
		"compiled/proto.bin-runtime",
	)
}

func compiledProtoBinRuntime() (*asset, error) {
	bytes, err := compiledProtoBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/proto.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Authority.abi": compiledAuthorityAbi,
	"compiled/Authority.bin-runtime": compiledAuthorityBinRuntime,
	"compiled/AuthorityNative.abi": compiledAuthoritynativeAbi,
	"compiled/AuthorityNative.bin-runtime": compiledAuthoritynativeBinRuntime,
	"compiled/Energy.abi": compiledEnergyAbi,
	"compiled/Energy.bin-runtime": compiledEnergyBinRuntime,
	"compiled/EnergyNative.abi": compiledEnergynativeAbi,
	"compiled/EnergyNative.bin-runtime": compiledEnergynativeBinRuntime,
	"compiled/Executor.abi": compiledExecutorAbi,
	"compiled/Executor.bin-runtime": compiledExecutorBinRuntime,
	"compiled/Extension.abi": compiledExtensionAbi,
	"compiled/Extension.bin-runtime": compiledExtensionBinRuntime,
	"compiled/ExtensionNative.abi": compiledExtensionnativeAbi,
	"compiled/ExtensionNative.bin-runtime": compiledExtensionnativeBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ParamsNative.abi": compiledParamsnativeAbi,
	"compiled/ParamsNative.bin-runtime": compiledParamsnativeBinRuntime,
	"compiled/Prototype.abi": compiledPrototypeAbi,
	"compiled/Prototype.bin-runtime": compiledPrototypeBinRuntime,
	"compiled/PrototypeInterface.abi": compiledPrototypeinterfaceAbi,
	"compiled/PrototypeInterface.bin-runtime": compiledPrototypeinterfaceBinRuntime,
	"compiled/PrototypeNative.abi": compiledPrototypenativeAbi,
	"compiled/PrototypeNative.bin-runtime": compiledPrototypenativeBinRuntime,
	"compiled/Token.abi": compiledTokenAbi,
	"compiled/Token.bin-runtime": compiledTokenBinRuntime,
	"compiled/proto.abi": compiledProtoAbi,
	"compiled/proto.bin-runtime": compiledProtoBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Authority.abi": &bintree{compiledAuthorityAbi, map[string]*bintree{}},
		"Authority.bin-runtime": &bintree{compiledAuthorityBinRuntime, map[string]*bintree{}},
		"AuthorityNative.abi": &bintree{compiledAuthoritynativeAbi, map[string]*bintree{}},
		"AuthorityNative.bin-runtime": &bintree{compiledAuthoritynativeBinRuntime, map[string]*bintree{}},
		"Energy.abi": &bintree{compiledEnergyAbi, map[string]*bintree{}},
		"Energy.bin-runtime": &bintree{compiledEnergyBinRuntime, map[string]*bintree{}},
		"EnergyNative.abi": &bintree{compiledEnergynativeAbi, map[string]*bintree{}},
		"EnergyNative.bin-runtime": &bintree{compiledEnergynativeBinRuntime, map[string]*bintree{}},
		"Executor.abi": &bintree{compiledExecutorAbi, map[string]*bintree{}},
		"Executor.bin-runtime": &bintree{compiledExecutorBinRuntime, map[string]*bintree{}},
		"Extension.abi": &bintree{compiledExtensionAbi, map[string]*bintree{}},
		"Extension.bin-runtime": &bintree{compiledExtensionBinRuntime, map[string]*bintree{}},
		"ExtensionNative.abi": &bintree{compiledExtensionnativeAbi, map[string]*bintree{}},
		"ExtensionNative.bin-runtime": &bintree{compiledExtensionnativeBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ParamsNative.abi": &bintree{compiledParamsnativeAbi, map[string]*bintree{}},
		"ParamsNative.bin-runtime": &bintree{compiledParamsnativeBinRuntime, map[string]*bintree{}},
		"Prototype.abi": &bintree{compiledPrototypeAbi, map[string]*bintree{}},
		"Prototype.bin-runtime": &bintree{compiledPrototypeBinRuntime, map[string]*bintree{}},
		"PrototypeInterface.abi": &bintree{compiledPrototypeinterfaceAbi, map[string]*bintree{}},
		"PrototypeInterface.bin-runtime": &bintree{compiledPrototypeinterfaceBinRuntime, map[string]*bintree{}},
		"PrototypeNative.abi": &bintree{compiledPrototypenativeAbi, map[string]*bintree{}},
		"PrototypeNative.bin-runtime": &bintree{compiledPrototypenativeBinRuntime, map[string]*bintree{}},
		"Token.abi": &bintree{compiledTokenAbi, map[string]*bintree{}},
		"Token.bin-runtime": &bintree{compiledTokenBinRuntime, map[string]*bintree{}},
		"proto.abi": &bintree{compiledProtoAbi, map[string]*bintree{}},
		"proto.bin-runtime": &bintree{compiledProtoBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

