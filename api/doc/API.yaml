openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Thor API"
  termsOfService: "https://www.vechain.com"
  contact:
    email: "vechain@vechain.com"
  description: "Get block chain info through the API"
servers:
  - url: http://localhost:3000/v1
    description: Optional server description, local server
tags:
- name: "Account"
  description: "Everything about account"
- name: "Transaction"
  description: "Everything about transaction"
- name: "Block"
  description: "Everything about block"
- name: "Contract"
  description: "Everything about contract"
- name: "Log"
  description: "Everything about log"
paths:
  /accounts/{address}/balance:
    get:
      tags:
      - "Account"
      summary: "Get balance by address"
      description: "return account balance"
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000"
            description: address
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "1000"
        400:
          description: "Invalid address"
  /accounts/{address}/code:
    get:
      tags:
      - "Account"
      summary: "Get code by address"
      description: "return account code"
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000"
            description: address
          description: account address
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "0x101010"
        400:
          description: "Invalid address"
  /accounts/{address}/storage:
    get:
      tags:
      - "Account"
      summary: "Get storage by address"
      description: "returns storage value by address"
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000"
            description: account address
        - in: query
          required: true
          name: key
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000000000000000000000000000"
            description: storage hash
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
        400:
          description: "Invalid params"
  /transactions/{id}:
    get:
      tags:
      - "Transaction"
      summary: "Get transaction by transaction id"
      description: "returns transaction by transaction id"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000000000000000000000000000"
            description: transaction id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chainTag:
                    type: integer
                    description: byte
                    example: 0
                  id:
                    type: string
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  gasPriceCoef:
                    type: integer
                    description: uint8
                    example: 128
                  gas:
                    type: string
                    description: uint64
                    example: "10000"
                  from:
                    type: string
                    description: address
                    example: "10000"
                  dependsOn:
                    type: string
                    description: transaction id (can be null)
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  clauses:
                    type: array
                    description: transaction clause
                    items:
                      type: object
                      properties:
                        to:
                          type: string
                          description: to address
                          example: "0x0000000000000000000000000000000000000000"
                        value:
                          type: string
                          description: Transfer accounts
                          example: "10000"
                        data:
                          type: string
                          description: input data (can be null)
                          example: "0x0000000" 
                  index:
                    type: string
                    description: uint64
                    example: "10000"
                  blockID:
                    type: string
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                    description: block id
                  blockNumber:
                    type: integer
                    description: uint32
                    example: 1
        400:
          description: "Invalid params"
  /transactions/{id}/receipts:
    get:
      tags:
      - "Transaction"
      summary: "Get transaction by transaction id"
      description: "returns transaction by transaction id"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000000000000000000000000000"
            description: transaction id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gasUsed:
                    type: string
                    description: gasused
                    example: "0x5208"
                  gasPayer:
                    type: string
                    example: "0x0000000000000000000000000000000000000000"
                    description: account address
                  reverted:
                    type: boolean
                    description: is transaction reverted
                    example: false
                  outputs:
                    type: array
                    description: transaction outputs
                    items:
                      anyOf:
                        - type: object
                          description: output
                          properties:
                            outputs:
                              type: array
                              description: logs
                              items:
                                anyOf:
                                  - type: object
                                    description: output
                                    properties:
                                      address:
                                        type: string
                                        example: "0x0000000000000000000000000000000000000000"
                                        description: account address
                                      topics:
                                        items:
                                          anyOf:
                                            - type: string
                                              description: topic (can be null)
                                              example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                                      data:
                                        type: string
                                        example: "0x00"
                                        description: data
        400:
          description: "Invalid params"
  /transactions:
    post:
      tags:
      - "Transaction"
      summary: "send rawtransaction"
      description: "send rawtransaction"
      requestBody:
        description: a rawtransaction
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                chainTag:
                  type: integer
                  description: byte
                  example: 1
                nonce:
                  type: string
                  description: uint64
                  example: "1"
                gasPriceCoef:
                  type: integer
                  description: uint8
                  example: 1
                gas:
                  type: string
                  description: uint64
                  example: "30000"
                dependsOn:
                  type: string
                  description: transaction id (can be null)
                  example: 
                sig: 
                  type: string
                  description: transaction signature
                  example: 0x00
                blockRef:
                  type: string
                  description: 8 bytes
                  example: 0x0000000000000000
                clauses:
                  type: array
                  description: transaction clause
                  items:
                    properties:
                        to:
                          type: string
                          description: to address
                          example: "0x0000000000000000000000000000000000000000"
                        value:
                          type: string
                          description: Transfer accounts
                          example: "10000"
                        data:
                          type: string
                          description: input data (can be null)
                          example: "0x0000000" 
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                description: transaction id
        400:
          description: "Invalid params"
  /blocks/{id}:
    get:
      tags:
      - "Block"
      summary: "Get block by block id"
      description: "returns block by block id"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
          description: block id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                    description: uint32
                    example: 0
                  id:
                    type: string
                    description: block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  parentID:
                    type: string
                    description: parent block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  timestamp:
                    type: string
                    description: uint64
                    example: "0"
                  totalScore:
                    type: string
                    description: uint64
                    example: "0"
                  gasLimit:
                    type: string
                    description: uint64
                    example: "100000"
                  gasUsed:
                    type: string
                    description: uint64
                    example: "100000"
                  beneficiary:
                    type: string
                    description: beneficiary address
                    example: "0x0000000000000000000000000000000000000000"
                  txsRoot:
                    type: string
                    description: transactions root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  stateRoot:
                    type: string
                    description: state root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  receiptsRoot:
                    type: string
                    description: receipts root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  txs:
                    type: array
                    items:
                      type: string
                      description: transaction id
                      example: "0x0000000000000000000000000000000000000000000000000000000000000000"
        400:
          description: "Invalid params"
  /blocks:
    get:
      tags:
      - "Block"
      summary: "Get block by block number"
      description: "returns block by block number"
      parameters:
        - in: query
          required: true
          name: number
          schema:
            type: integer
          description: block number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                    description: uint32
                    example: 0
                  id:
                    type: string
                    description: block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  parentID:
                    type: string
                    description: parent block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  timestamp:
                    type: string
                    description: uint64
                    example: "0"
                  totalScore:
                    type: string
                    description: uint64
                    example: "0"
                  gasLimit:
                    type: string
                    description: uint64
                    example: "100000"
                  gasUsed:
                    type: string
                    description: uint64
                    example: "100000"
                  beneficiary:
                    type: string
                    description: beneficiary address
                    example: "0x0000000000000000000000000000000000000000"
                  txsRoot:
                    type: string
                    description: transactions root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  stateRoot:
                    type: string
                    description: state root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  receiptsRoot:
                    type: string
                    description: receipts root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  txs:
                    type: array
                    items:
                      type: string
                      description: transaction id
                      example: "0x0000000000000000000000000000000000000000000000000000000000000000"
        400:
          description: "Invalid params"
  /blocks/best:
    get:
      tags:
      - "Block"
      summary: "Get best block"
      description: "returns best block"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                    description: uint32
                    example: 0
                  id:
                    type: string
                    description: block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  parentID:
                    type: string
                    description: parent block id
                    example: "null"
                  timestamp:
                    type: string
                    description: uint64
                    example: "0"
                  totalScore:
                    type: string
                    description: uint64
                    example: "0"
                  gasLimit:
                    type: string
                    description: uint64
                    example: "100000"
                  gasUsed:
                    type: string
                    description: uint64
                    example: "100000"
                  beneficiary:
                    type: string
                    description: beneficiary address
                    example: "0x0000000000000000000000000000000000000000"
                  txsRoot:
                    type: string
                    description: transactions root
                    example: "0x21b3b7923ad7f56d63e0623146cdbb00840f89b8f9a9dbd7619dd76dc00f5426"
                  stateRoot:
                    type: string
                    description: state root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  receiptsRoot:
                    type: string
                    description: receipts root
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  txs:
                    type: array
                    items:
                      type: string
                      description: transaction id
                      example: "0x0000000000000000000000000000000000000000000000000000000000000000"
        400:
          description: "Invalid params"
  /contracts/{contractAddr}:
    post:
      tags:
      - "Contract"
      summary: "call contract"
      description: "call contract"
      parameters:
        - in: path
          required: true
          name: contractAddr
          schema:
            type: string
            example: "0x0000000000000000000000000000000000000000"
            description: contract address
      requestBody:
        description: contract calling params
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                input:
                  type: string
                  description: input data hex
                  example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                options: 
                  type: object
                  properties: 
                    clauseIndex:
                      type: integer
                      description: uint32
                      example: 0
                    gas:
                      type: string
                      description: uint64
                      example: "100000"
                    from:
                      type: string
                      description: address
                      example: "0x0000000000000000000000000000000000000000"
                    gasPrice:
                      type: string
                      description: uint64
                      example: "100000"
                    txID: 
                      type: string
                      description: transaction id
                      example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                    value:
                      type: string
                      description: transfer accounts
                      example: "10000"
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: transaction ountput
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
          description: "successful operation"
        400:
          description: "Invalid params"
  /logs:
    post:
      tags:
      - "Log"
      summary: "return logs by params"
      description: "get logs"
      requestBody:
        description: request params
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                fromBlock:
                  type: integer
                  description: from block
                  example: 0
                toBlock:
                  type: integer
                  description: to block
                  example: 1
                address:
                  type: string
                  description: contract address
                  example: "0x0000000000000000000000000000000000000000"
                topicSet:
                  type: array
                  items:
                    type: array
                    items:
                      oneOf:
                        - type: string
                          description: topic0 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic1 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic2 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic3 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic4 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  blockID:
                    type: string
                    description: block id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  blockNumber:
                    type: integer
                    description: block number
                    example: 1
                  txID:
                    type: string
                    description: transaction id
                    example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                  address:
                    type: string
                    description: contract address
                    example: "0x0000000000000000000000000000000000000000"
                  data:
                    type: string
                    description: data hex
                    example: "0x"
                  topics:
                    items:
                      oneOf:
                        - type: string
                          description: topic0 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic1 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic2 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic3 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        - type: string
                          description: topic4 (can be null)
                          example: "0x0000000000000000000000000000000000000000000000000000000000000000"
        400:
          description: "unhandled error"