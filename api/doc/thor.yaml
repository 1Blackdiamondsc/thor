openapi: 3.0.1
info:
  version: 0.1.0
  title: VeChain Thor API
  license:
    name: LGPL 3.0
    url: 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
  description: RESTful API to access VeChain Thor
servers:
  - url: 'http://localhost:8669'
    description: local thor node
tags:
  - name: Account
    description: Access to account objects
  - name: Event
    description: Access to event
  - name: TransferLog
    description: Access to transfer logs
  - name: Block
    description: Access to blocks
  - name: Transaction
    description: Access to transactions
  - name: Node
    description: Access to node info
paths:
  '/accounts/{address}':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Account
      summary: get account object detail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    post:
      tags:
        - Account
      summary: perform contract call on account object
      requestBody:
        description: arguments and environment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCall'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractCallResult'
  '/accounts/{address}/code':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Account
      summary: retrieve code of account object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                example:
                  code: >-
                    0x6060604052600080fd00a165627a7a72305820c23d3ae2dc86ad130561a2829d87c7cb8435365492bd1548eb7e7fc0f3632be90029
  '/accounts/{address}/storage/{key}':
    parameters:
      - $ref: '#/components/parameters/AddressInPath'
      - $ref: '#/components/parameters/StorageKeyInPath'
      - $ref: '#/components/parameters/RevisionInQuery'
    get:
      tags:
        - Account
      summary: retrieve storage value of account object for given key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  value:
                    type: string
                example:
                  value: >-
                    0x0000000000000000000000000000000000000000000000000000000000000001
  '/events':
    post:
      tags:
        - Event
      summary: filter event logs 
      parameters:
        - $ref: '#/components/parameters/FilterOrderInQuery'
        - $ref: '#/components/parameters/FilterAddressInQuery'
      requestBody:
        description: event filter criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilteredLog'
  '/transactions/{id}/transfers':
    parameters:
      - $ref: '#/components/parameters/TxIDInPath'
      - $ref: '#/components/parameters/FilterOrderInQuery'
    get:
      tags:
        - TransferLog
      summary: retrieve transfer logs by transaction ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileteredTransfer'
  '/transfers':
    post:
      tags:
        - TransferLog
      summary: filter transfer logs 
      parameters:
        - $ref: '#/components/parameters/FilterOrderInQuery'
      requestBody:
        description: transfer log filter criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileteredTransfer'
  '/blocks/{revision}':
    parameters:
      - $ref: '#/components/parameters/RevisionInPath'
    get:
      tags:
        - Block
      summary: 'retrieve block by ID, number, or ''best'' for the latest one'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
  '/transactions/{id}':
    parameters:
      - $ref: '#/components/parameters/TxIDInPath'
    get:
      tags:
        - Transaction
      summary: retrieve transaction by its id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  '/transactions/{id}/receipt':
    parameters:
      - $ref: '#/components/parameters/TxIDInPath'
    get:
      tags:
        - Transaction
      summary: retrieve transaction receipt by transaction ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
  '/transactions':
    post:
      tags:
        - Transaction
      summary: send raw transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawTx'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                example:
                  id: >-
                    0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8
  '/node/network':
    get:
      tags:
        - Node
      summary: retrieve network status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeNetwork'
components:
  schemas:
    Account:
      properties:
        balance:
          type: string
          description: hex form of token balance
        energy:
          type: string
          description: hex form of remained amount of energy
        hasCode:
          type: boolean
      example:
        balance: '0xde0b6b3a7640000'
        energy: '0xde0b6b3a7640000'
        hasCode: false
    BlockContext:
      properties:
        id:
          type: string
          description: identifier of the block (bytes32)
        number:
          type: integer
          format: uint32
          description: number(height) of the block
        timestamp:
          type: integer
          format: uint64
          description: unix timestamp of the block
    TxContext:
      properties:
        id:
          type: string
          description: identifier of the transaction
        origin:
          type: string
          description: the one who signed the transaction
    Block:
      properties:
        number:
          type: integer
          format: uint32
          description: number(height) of the block
        id:
          type: string
          description: identifier of the block (bytes32)
        size:
          type: integer
          format: uint32
          description: byte size of the block that is RLP encoded
        parentID:
          type: string
          description: ID of parent block (bytes32)
        timestamp:
          type: integer
          format: uint64
          description: unix timestamp of the block
        gasLimit:
          type: integer
          format: uint64
          description: gas limit of the block
        beneficiary:
          type: string
          description: address of account to receive block reward
        gasUsed:
          type: integer
          format: uint64
        totalScore:
          type: integer
          format: uint64
        txsRoot:
          type: string
          description: root hash of transactions in the block (bytes32)
        stateRoot:
          type: string
          description: root hash of accounts state (bytes32)
        receiptsRoot:
          type: string
          description: root hash of transaction receipts (bytes32)
        signer:
          type: string
          description: the one who signed this block (bytes20)
        transactions:
          type: array
          description: IDs of transactions
          items:
            type: string
            description: ID of transaction (bytes32)
      example:
        number: 1
        id: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
        size: 238
        parentID: '0x00000002a0c772179aa43cb6bb55d0b31369f9e92014c88a50b2cb99f9be1c5d'
        timestamp: 1523156271
        gasLimit: 10000000
        beneficiary: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        gasUsed: 0
        totalScore: 101
        txsRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        stateRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        receiptsRoot: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
        signer: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        transactions:
          - '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
    RawTx:
      properties:
        raw:
          type: string
          description: hex form of encoded transaction
      example:
        raw: '0xf86981ba800adad994000000000000000000000000000000000000746f82271080018252088001c0b8414792c9439594098323900e6470742cd877ec9f9906bca05510e421f3b013ed221324e77ca10d3466b32b1800c72e12719b213f1d4c370305399dd27af962626400'  
    Clause:
      properties:
        to:
          type: string
          description: 'recipient of clause, null for contract deployment (bytes32)'
        value:
          type: string
          description: hex form of token to be transferred
        data:
          type: string
          description: input data (bytes)
      example:
        to: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        value: '0x10'
        data: null
    Transaction:
      properties:
        id:
          type: string
          description: identifier of the transaction
        size:
          type: integer
          format: uint32
          description: byte size of the transaction that is RLP encoded
        chainTag:
          type: integer
          format: uint8
          description: last byte of genesis block ID
        blockRef:
          type: string
          description: 8 bytes prefix of some block ID
        expiration:
          type: integer
          format: uint32
          description: 'expiration relative to blockRef, in unit block'
        clauses:
          type: array
          items:
            $ref: '#/components/schemas/Clause'
        gasPriceCoef:
          type: integer
          format: uint8
          description: coefficient used to calculate the final gas price
        gas:
          type: integer
          format: uint64
          description: max amount of gas can be consumed to execute this transaction
        dependsOn:
          type: string
          description: >-
            ID of the transaction on which the current transaction depends
            (bytes32)
        nonce:
          type: string
        origin:
          type: string
          description: the one who signed the transaction
        block:
          $ref: '#/components/schemas/BlockContext'
      example:
        id: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        size: 180
        chainTag: 1
        blockRef: '0x00000001511fc0be'
        expiration: 30
        clauses: []
        gasPriceCoef: 128
        gas: 21000
        dependsOn: 'null'
        nonce: '0xd92966da424d9939'
        origin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        block:
          id: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          number: 1
          timestamp: 1523156271
    Log:
      properties:
        address:
          type: string
          description: the address of contract which produces the log (bytes20)
        topics:
          type: array
          items:
            type: string
        data:
          type: string
      example:
        address: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        topics:
          - '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        data: '0xddff'
    Receipt:
      properties:
        gasUsed:
          type: integer
          format: uint64
        gasPayer:
          type: string
          description: address of account who payed used gas
        payed:
          type: string
          description: hex form of amount of payed energy
        reward:
          type: string
          description: hex form of amount of reward
        reverted:
          type: boolean
          description: true means the transaction was reverted
        block:
          $ref: '#/components/schemas/BlockContext'
        tx:
          $ref: '#/components/schemas/TxContext'
        outputs:
          type: array
          items:
            properties:
              contractAddress:
                type: string
                description: >-
                  deployed contract address, if the corresponding clause is a
                  contract deployment clause
              logs:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
      example:
        gasUsed: 21000
        gasPayer: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        payed: '0x723daf2'
        reward: '0x723daf2'
        reverted: false
        block:
          id: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          number: 1
          timestamp: 1523156271
        tx:
          id: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
          origin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        outputs: 
          - {
            'contractAddress':'0x7567d83b7b8d80addcb281a71d54fc7b3364ffed',
            logs:[{
                'address':'0x7567d83b7b8d80addcb281a71d54fc7b3364ffed',
                'topics':'0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8',
                'data':'0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
              }]
          }
    ContractCall:
      properties:
        value:
          type: string
          description: amount of token to be transferred
        data:
          type: string
          description: input data for contract call
        gas:
          type: integer
          format: uint64
          description: 'optional, to specify max gas for execution'
        gasPrice:
          type: string
          description: 'optional, absolute gas price'
        caller:
          type: string
          description: 'optional, to specify the caller'
      example:
        value: '0x0'
        data: '0x5665436861696e2054686f72'
    ContractCallResult:
      properties:
        data:
          type: string
          description: the output data
        gasUsed:
          type: integer
          format: uint64
          description: gas used during execution
        reverted:
          type: boolean
        vmError:
          type: string
      example:
        data: '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
        gasUsed: 21000
        reverted: false
        vmError: ''
    Options:
      properties:
        offset:
          type: integer
        limit: 
          type: integer
    Range:
      properties:
        unit:
          type: string
          enum:
            - block
            - time
        from:
          type: integer
          format: uint64
        to:
          type: integer
          format: uint64
      example:
        unit: block
        from: 100
        to: 1000
    TopicSet:
      properties:
        topic0:
          type: string
        topic1:
          type: string
        topic2:
          type: string
        topic3:
          type: string
        topic4:
          type: string
      example:
        topic0: '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
    LogFilter:
      properties:
        range:
          $ref: '#/components/schemas/Range'
        options:
          $ref: '#/components/schemas/Options'
        topicSets:
          type: array
          items:
            $ref: '#/components/schemas/TopicSet'
    FilteredLog:
      properties:
        topics:
          type: array
          items:
            type: string
        data:
          type: string
        block:
          $ref: '#/components/schemas/BlockContext'
        tx:
          $ref: '#/components/schemas/TxContext'
      example:
        topics:
          - '0x103556a73c10e38ffe2fc4aa50fc9d46ad0148f07e26417e117bd1ece9d948b5'
        data: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        block:
          id: '0x00000001c458949985a6d86b7139690b8811dd3b4647c02d4f41cdefb7d32327'
          number: 1
          timestamp: 1523156271
        tx:
          id: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
          origin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    AddressSet:
      properties:
        txOrigin: 
          type: string
        from:
          type: string
        to: 
          type: string
      example:
        txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        from: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        to: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    TransferFilter:
      properties:
        range:
          $ref: '#/components/schemas/Range'
        options:
          $ref: '#/components/schemas/Options'
        AddressSets:
          type: array
          items:
            $ref: '#/components/schemas/AddressSet'
    FileteredTransfer:
      properties:
        blockID:
          type: string
        transferIndex:
          type: integer
        blockNumber:
          type: integer
        blockTime:
          type: integer
        txID:
          type: string
        txOrigin:
          type: string
        from:
          type: string
        to:
          type: string
        value:
          type: string
      example:
        blockID: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        transferIndex: 0
        blockNumber: 0
        blockTime: 15678990282
        txID: '0x4de71f2d588aa8a1ea00fe8312d92966da424d9939a511fc0be81e65fad52af8'
        txOrigin: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        from: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        to: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
        value: '0x9fad'
    NodeNetwork:
      properties:
        peerCount:
          type: integer
          example: 0
  parameters:
    AddressInPath:
      name: address
      in: path
      description: address of account
      required: true
      schema:
        type: string
      example: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    RevisionInQuery:
      name: revision
      in: query
      description: can be block number or ID. best block is assumed if omitted.
      schema:
        type: string
    RevisionInPath:
      name: revision
      in: path
      description: 'can be block number, ID or ''best'' for lastest block'
      required: true
      schema:
        type: string
      example: best
    StorageKeyInPath:
      in: path
      description: the key(position) to access account storage
      required: true
      name: key
      schema:
        type: string
      example: '0x0000000000000000000000000000000000000000000000000000000000000001'
    FilterAddressInQuery:
      name: address
      in: query
      description: address of account
      required: false
      schema:
        type: string
      example: '0x7567d83b7b8d80addcb281a71d54fc7b3364ffed'
    FilterOrderInQuery:
      name: order
      in: query
      description: order of filters
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
      example: 'ASC'
    TransferFilterOrderInQuery:
      name: order
      in: query
      description: order of filtered transfer logs
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
      example: 'ASC'
    TxIDInPath:
      in: path
      description: ID of transaction
      required: true
      name: id
      schema:
        type: string
      example: '0x9bcc6526a76ae560244f698805cc001977246cb92c2b4f1e2b7a204e445409ea'
